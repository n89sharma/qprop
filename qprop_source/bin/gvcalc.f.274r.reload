
;; Function gvcalc (gvcalc_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=880, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=864, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 15:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 17:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 19
	 Choosing alt 1 in insn 19:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 20:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 22:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 23:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 24:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 29
	 Choosing alt 1 in insn 29:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 31:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 33:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 34:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 38:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=873 from oldreg=444, assigning class SSE_REGS to r873
   38: r873:SF=r873:SF*r444:SF
      REG_DEAD r444:SF
    Inserting insn reload before:
 1119: r873:SF=r444:SF
    Inserting insn reload after:
 1120: r445:SF=r873:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 39:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 41
	 Choosing alt 1 in insn 41:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 43:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 44:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 47:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 48:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 49:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 51:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 54:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 55:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 56:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 59:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 61:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 62:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 66:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 68:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 69:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 70
	 Choosing alt 1 in insn 70:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 71:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 73:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 78
	 Choosing alt 0 in insn 78:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 82:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 85:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 96:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 98:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 99:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 101:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 103:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 104:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 105:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 107:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 108:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 109:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 110
	 Choosing alt 1 in insn 110:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 111:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 112
	 Choosing alt 1 in insn 112:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 113:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 114:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 116
	 Choosing alt 1 in insn 116:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 117:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 1 in insn 118:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 119:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 120:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 122:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 123:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 124:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 125
	 Choosing alt 1 in insn 125:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 126:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 127
	 Choosing alt 1 in insn 127:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 128:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 129:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 130:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 131
	 Choosing alt 1 in insn 131:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 133
	 Choosing alt 1 in insn 133:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 134:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 135:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 136:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 137:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 138:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 139:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 140
	 Choosing alt 1 in insn 140:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 141:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 142
	 Choosing alt 1 in insn 142:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 143:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 144:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 145:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 146
	 Choosing alt 1 in insn 146:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 147:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 148:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 150:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 151:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 152:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 153
	 Choosing alt 1 in insn 153:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 154:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 155
	 Choosing alt 1 in insn 155:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 156:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 157:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 159:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 160:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 161:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 162
	 Choosing alt 1 in insn 162:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 163:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 164
	 Choosing alt 1 in insn 164:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 165:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 166:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 169:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 176:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 177:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 178:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 179:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 180:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 181:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 182:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 183:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 184:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 185:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 186:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 187:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 188:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 189:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 190:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 191:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 196:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 197:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 198:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 199:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 200:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 201:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 202:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 203:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 204:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 205:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 206:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 207:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 208:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 209:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 210:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 211:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 213:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 215:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 216:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 217:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 218:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 219:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 220:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 221:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 222:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 223:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 224:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 225:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 227:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 228:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 229:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 230:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 231:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 232:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 233:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 234:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 235:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 236:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 237:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 239:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 240:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 241:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 242:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 243:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 244
	 Choosing alt 1 in insn 244:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 245:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 246:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 247:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 249:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 250:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 251:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=874 from oldreg=574, assigning class SSE_REGS to r874
  251: r874:SF=r874:SF-r149:SF
      REG_DEAD r574:SF
      REG_DEAD r149:SF
    Inserting insn reload before:
 1121: r874:SF=r574:SF
    Inserting insn reload after:
 1122: r150:SF=r874:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 253:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 254:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 255
	 Choosing alt 1 in insn 255:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 256:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 258:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 259:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 260
	 Choosing alt 1 in insn 260:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 261:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 262:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 263:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 264:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 265:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 266:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 267:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=875 from oldreg=581, assigning class SSE_REGS to r875
  267: r875:SF=r875:SF-r157:SF
      REG_DEAD r581:SF
      REG_DEAD r157:SF
    Inserting insn reload before:
 1123: r875:SF=r581:SF
    Inserting insn reload after:
 1124: r158:SF=r875:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 269:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 270:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 271:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 272:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 274:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 0 in insn 276:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 283:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 284:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 285:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 286:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 289:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 290:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 291:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 292:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 293:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 295:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 296:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 297:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 298:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=619,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 299:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 300:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 301:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 304
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=876 from oldreg=167, assigning class SSE_REGS to r876
      Making reload reg 876 for reg 167 optional
  304: r591:SF=r168:SF*r876:SF
      REG_DEAD r168:SF
      REG_DEAD r167:SF
    Inserting insn reload before:
 1125: r876:SF=r167:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1125:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 305:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 306:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 308:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 309:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 310:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 312:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 313:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=877 from oldreg=593, assigning class SSE_REGS to r877
  313: r877:SF=r877:SF-r450:SF
      REG_DEAD r593:SF
      REG_DEAD r450:SF
    Inserting insn reload before:
 1126: r877:SF=r593:SF
    Inserting insn reload after:
 1127: r172:SF=r877:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =v  (1) vm {*sqrtsf2_sse}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 315:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=878 from oldreg=171, assigning class SSE_REGS to r878
  315: r878:SF=r878:SF/r173:SF
      REG_DEAD r173:SF
      REG_DEAD r171:SF
    Inserting insn reload before:
 1128: r878:SF=r171:SF
    Inserting insn reload after:
 1129: r174:SF=r878:SF

          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 316:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 317:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 319:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 320:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 321:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 322:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 323:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 324:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 325:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 326:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 327:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 328:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 329:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 330:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 331:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 332:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 334:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 335:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=879 from oldreg=604, assigning class SSE_REGS to r879
  335: r879:SF=r879:SF/r452:SF
      REG_DEAD r604:SF
      REG_DEAD r452:SF
    Inserting insn reload before:
 1130: r879:SF=r604:SF
    Inserting insn reload after:
 1131: r176:SF=r879:SF

            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 336:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 338:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 339:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 341:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 342:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=880 from oldreg=607, assigning class SSE_REGS to r880
  342: r880:SF=r880:SF/r454:SF
      REG_DEAD r607:SF
      REG_DEAD r454:SF
    Inserting insn reload before:
 1132: r880:SF=r607:SF
    Inserting insn reload after:
 1133: r177:SF=r880:SF

            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 343:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 345:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 346:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 347:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 348:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 349:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=881 from oldreg=610, assigning class SSE_REGS to r881
  349: r881:SF=r881:SF/r456:SF
      REG_DEAD r610:SF
      REG_DEAD r456:SF
    Inserting insn reload before:
 1134: r881:SF=r610:SF
    Inserting insn reload after:
 1135: r178:SF=r881:SF

            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 350:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 352:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 355:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 356:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 357:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 358:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 359:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 360:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 361:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 362:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 363:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 364:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 365:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 366:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 367:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 368:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 369:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 371:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 372:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 373:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 374:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 375:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 376:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 377:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 379:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 380:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 381:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 382:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 383:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 384:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 385:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 386:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 387:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 388:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 389:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 390:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 391:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 392:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 393
	 Choosing alt 1 in insn 393:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 395:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=882 from oldreg=457, assigning class SSE_REGS to r882
  395: r882:SF=r882:SF*r457:SF
      REG_DEAD r457:SF
    Inserting insn reload before:
 1136: r882:SF=r457:SF
    Inserting insn reload after:
 1137: r458:SF=r882:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 396:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 397:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 398:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 399:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 402
	 Choosing alt 1 in insn 402:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 404:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 405:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 406:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 407:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 409:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 410:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 411:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 412:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 413:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 414:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 415:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 416:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 417:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 418:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 419:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 420:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 421:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 422:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 423:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 424:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 425:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 426:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 427:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 428:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 429:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 430:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 431:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=883 from oldreg=647, assigning class SSE_REGS to r883
  431: r883:SF=r883:SF*[frame:DI-0x5c]
      REG_DEAD r647:SF
    Inserting insn reload before:
 1138: r883:SF=r647:SF
    Inserting insn reload after:
 1139: r199:SF=r883:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 432:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 433:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 434:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 435
	 Choosing alt 1 in insn 435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 437:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 438:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=884 from oldreg=204, assigning class SSE_REGS to r884
  438: r884:SF=r884:SF*[frame:DI-0xe4]
      REG_DEAD r204:SF
    Inserting insn reload before:
 1140: r884:SF=r204:SF
    Inserting insn reload after:
 1141: r205:SF=r884:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 439:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 440:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 441:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 442:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 443:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 444:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 445
	 Choosing alt 1 in insn 445:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 446:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 447:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 448:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 449:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=885 from oldreg=210, assigning class SSE_REGS to r885
  449: r885:SF=r885:SF*[frame:DI-0x18]
      REG_DEAD r210:SF
    Inserting insn reload before:
 1142: r885:SF=r210:SF
    Inserting insn reload after:
 1143: r211:SF=r885:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 450:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 451:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 452:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 453
	 Choosing alt 1 in insn 453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 455:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 456:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=886 from oldreg=216, assigning class SSE_REGS to r886
  456: r886:SF=r886:SF*[frame:DI-0xe4]
      REG_DEAD r216:SF
    Inserting insn reload before:
 1144: r886:SF=r216:SF
    Inserting insn reload after:
 1145: r217:SF=r886:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 457:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 458:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 459:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 460:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 461:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 462:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 463
	 Choosing alt 1 in insn 463:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 464:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 465:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 466:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 467:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 468:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=887 from oldreg=223, assigning class SSE_REGS to r887
  468: r887:SF=r887:SF*[frame:DI-0x18]
      REG_DEAD r223:SF
    Inserting insn reload before:
 1146: r887:SF=r223:SF
    Inserting insn reload after:
 1147: r224:SF=r887:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 469:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 470:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 471:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 472
	 Choosing alt 1 in insn 472:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 474:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 475:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=888 from oldreg=229, assigning class SSE_REGS to r888
  475: r888:SF=r888:SF*[frame:DI-0xe4]
      REG_DEAD r229:SF
    Inserting insn reload before:
 1148: r888:SF=r229:SF
    Inserting insn reload after:
 1149: r230:SF=r888:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 476:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 477:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 478:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 479:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 480:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 481:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 482
	 Choosing alt 1 in insn 482:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 484:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 485:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 486:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=889 from oldreg=463, assigning class SSE_REGS to r889
  486: r889:SF=r889:SF*r463:SF
      REG_DEAD r463:SF
    Inserting insn reload before:
 1150: r889:SF=r463:SF
    Inserting insn reload after:
 1151: r464:SF=r889:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 487:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 488:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 489
	 Choosing alt 1 in insn 489:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 490:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 492:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 493:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 494:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=890 from oldreg=664, assigning class SSE_REGS to r890
  494: r890:SF=r890:SF*[frame:DI-0xa0]
      REG_DEAD r664:SF
    Inserting insn reload before:
 1152: r890:SF=r664:SF
    Inserting insn reload after:
 1153: r236:SF=r890:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 495:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 496:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 497
	 Choosing alt 1 in insn 497:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 499:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 500:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 501:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 502:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=891 from oldreg=667, assigning class SSE_REGS to r891
  502: r891:SF=r891:SF*[frame:DI-0xa4]
      REG_DEAD r667:SF
    Inserting insn reload before:
 1154: r891:SF=r667:SF
    Inserting insn reload after:
 1155: r240:SF=r891:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 503:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 504:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 505
	 Choosing alt 1 in insn 505:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 507:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 508:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 509:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 510:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=892 from oldreg=670, assigning class SSE_REGS to r892
  510: r892:SF=r892:SF*[frame:DI-0xa8]
      REG_DEAD r670:SF
    Inserting insn reload before:
 1156: r892:SF=r670:SF
    Inserting insn reload after:
 1157: r244:SF=r892:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 511:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 512:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 513
	 Choosing alt 1 in insn 513:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 515:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 516:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 517:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 518:  (0) v  (1) m {*movsf_internal}
      Creating newreg=893 from oldreg=248, assigning class ALL_SSE_REGS to r893
  518: r893:SF=[r673:DI]
      REG_DEAD r673:DI
    Inserting insn reload after:
 1158: r248:SF=r893:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1158:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 519:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 520:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 522:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 525:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=894 from oldreg=248, assigning class SSE_REGS to r894
  525: r894:SF=r894:SF-r249:SF
      REG_DEAD r249:SF
      REG_DEAD r248:SF
    Inserting insn reload before:
 1159: r894:SF=r248:SF
    Inserting insn reload after:
 1160: r250:SF=r894:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1159:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 526:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 527:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 528:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 529:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 530:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 533:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 534:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 535:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 536:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 537:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 538:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 539:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 541:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 542:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 543:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 544:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 545:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 546:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 547:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 549:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 550:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 551:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 552:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 553:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 554:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 555:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 556:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 557:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=895 from oldreg=688, assigning class SSE_REGS to r895
  557: r895:SF=r895:SF/r468:SF
      REG_DEAD r688:SF
      REG_DEAD r468:SF
    Inserting insn reload before:
 1161: r895:SF=r688:SF
    Inserting insn reload after:
 1162: r687:SF=r895:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 558:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 559:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 560:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 561:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=896 from oldreg=469, assigning class SSE_REGS to r896
  561: r896:SF=r896:SF*r469:SF
      REG_DEAD r469:SF
    Inserting insn reload before:
 1163: r896:SF=r469:SF
    Inserting insn reload after:
 1164: r470:SF=r896:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 562:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 563:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 564:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 565:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 566:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 567:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 568:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 569:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=897 from oldreg=471, assigning class SSE_REGS to r897
  569: r897:SF=r897:SF*r471:SF
      REG_DEAD r471:SF
    Inserting insn reload before:
 1165: r897:SF=r471:SF
    Inserting insn reload after:
 1166: r472:SF=r897:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 570:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 571:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 572:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 573:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 574:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 575:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 576:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 577:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=898 from oldreg=473, assigning class SSE_REGS to r898
  577: r898:SF=r898:SF*r473:SF
      REG_DEAD r473:SF
    Inserting insn reload before:
 1167: r898:SF=r473:SF
    Inserting insn reload after:
 1168: r474:SF=r898:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 578:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 580:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 581:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 582:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 583:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 584:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 585:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 591:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 592:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 593:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 594:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 595:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 596:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 597:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 598:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 601:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 602:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =v  (1) vm {*sqrtsf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 604:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 605:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=899 from oldreg=705, assigning class SSE_REGS to r899
  605: r899:SF=r899:SF/r271:SF
      REG_DEAD r705:SF
      REG_DEAD r271:SF
    Inserting insn reload before:
 1169: r899:SF=r705:SF
    Inserting insn reload after:
 1170: r704:SF=r899:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 606:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 607:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 608:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 609
	 Choosing alt 1 in insn 609:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 610:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 611:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 613:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 614:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 615:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 616:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 617:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 618:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 619:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 620:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 621:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 622:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 623:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 624:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 625:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 626:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 627
	 Choosing alt 1 in insn 627:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 628:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 629:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 630:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 632:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 633:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 634:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 635:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 636:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 637:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 638:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=900 from oldreg=283, assigning class SSE_REGS to r900
  638: r900:SF=r900:SF*[frame:DI-0x11c]
      REG_DEAD r283:SF
    Inserting insn reload before:
 1171: r900:SF=r283:SF
    Inserting insn reload after:
 1172: r284:SF=r900:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 639:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 640:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 641:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 642
	 Choosing alt 1 in insn 642:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 643:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 644:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 645:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 647:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 648
	 Choosing alt 1 in insn 648:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 649:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 650:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 651:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 652:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 653:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=901 from oldreg=293, assigning class SSE_REGS to r901
  653: r901:SF=r901:SF*[frame:DI-0x11c]
      REG_DEAD r293:SF
    Inserting insn reload before:
 1173: r901:SF=r293:SF
    Inserting insn reload after:
 1174: r294:SF=r901:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 654:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 655:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 656:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 657
	 Choosing alt 1 in insn 657:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 658:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 659:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 660:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 662:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 663
	 Choosing alt 1 in insn 663:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 664:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 665:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 666:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 667:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 668:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 669:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=902 from oldreg=304, assigning class SSE_REGS to r902
  669: r902:SF=r902:SF*[frame:DI-0x11c]
      REG_DEAD r304:SF
    Inserting insn reload before:
 1175: r902:SF=r304:SF
    Inserting insn reload after:
 1176: r305:SF=r902:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 670:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 671:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 672:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 673
	 Choosing alt 1 in insn 673:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 674:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 675:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 676:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 678:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 679
	 Choosing alt 1 in insn 679:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 680:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 681:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 682:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 683:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 684:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 685:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 686:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 687:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 688:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 689:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 690:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 691:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 692:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 693:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 694:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 700:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 701:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 702:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 703:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 704:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 705:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 706:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 707:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 708:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 709:  (0) v  (1) m {*movsf_internal}
      Creating newreg=903 from oldreg=321, assigning class ALL_SSE_REGS to r903
  709: r903:SF=[r740:DI]
      REG_DEAD r740:DI
    Inserting insn reload after:
 1177: r321:SF=r903:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1177:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 710:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 711:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 715
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=904 from oldreg=321, assigning class SSE_REGS to r904
      Making reload reg 904 for reg 321 optional
  715: r325:SF=r324:SF*r904:SF
      REG_DEAD r324:SF
      REG_DEAD r321:SF
    Inserting insn reload before:
 1178: r904:SF=r321:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1178:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 716:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 717:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 718:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 719:  (0) v  (1) m {*movsf_internal}
      Creating newreg=905 from oldreg=326, assigning class ALL_SSE_REGS to r905
  719: r905:SF=[r742:DI]
      REG_DEAD r742:DI
    Inserting insn reload after:
 1179: r326:SF=r905:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1179:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 720:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 721:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 722:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 726
	 Choosing alt 1 in insn 726:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=906 from oldreg=326, assigning class SSE_REGS to r906
      Making reload reg 906 for reg 326 optional
  726: r744:SF=r329:SF*r906:SF
      REG_DEAD r329:SF
      REG_DEAD r326:SF
    Inserting insn reload before:
 1180: r906:SF=r326:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1180:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 727:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 728:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 729:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 730:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 731:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 732:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 733:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 734:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 735:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 736:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 737:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 738:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 739:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 740:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 741:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 742:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 747:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 748:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 749:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 750:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 757:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 758:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 759:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 760:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 761:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 762:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 763:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 764:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 765:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 766:  (0) v  (1) m {*movsf_internal}
      Creating newreg=907 from oldreg=337, assigning class ALL_SSE_REGS to r907
  766: r907:SF=[r759:DI]
      REG_DEAD r759:DI
    Inserting insn reload after:
 1181: r337:SF=r907:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1181:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 767:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 768:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 770:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 772
	 Choosing alt 1 in insn 772:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=908 from oldreg=337, assigning class SSE_REGS to r908
      Making reload reg 908 for reg 337 optional
  772: r341:SF=r340:SF*r908:SF
      REG_DEAD r340:SF
      REG_DEAD r337:SF
    Inserting insn reload before:
 1182: r908:SF=r337:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1182:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 773:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 774:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 775:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 776:  (0) v  (1) m {*movsf_internal}
      Creating newreg=909 from oldreg=342, assigning class ALL_SSE_REGS to r909
  776: r909:SF=[r761:DI]
      REG_DEAD r761:DI
    Inserting insn reload after:
 1183: r342:SF=r909:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1183:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 777:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 778:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 779:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 783
	 Choosing alt 1 in insn 783:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=910 from oldreg=342, assigning class SSE_REGS to r910
      Making reload reg 910 for reg 342 optional
  783: r763:SF=r345:SF*r910:SF
      REG_DEAD r345:SF
      REG_DEAD r342:SF
    Inserting insn reload before:
 1184: r910:SF=r342:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1184:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 784:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 785:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 786:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 787:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 788:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 789:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 790:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 791:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 792:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 793:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 794:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 795:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 796:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 798:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 799:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 802:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 803:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 804:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 805:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 806:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 807
	 Choosing alt 1 in insn 807:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 808:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 809:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 810:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 811:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 812:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=911 from oldreg=349, assigning class SSE_REGS to r911
  812: r911:SF=r911:SF-r354:SF
      REG_DEAD r354:SF
      REG_DEAD r349:SF
    Inserting insn reload before:
 1185: r911:SF=r349:SF
    Inserting insn reload after:
 1186: r355:SF=r911:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 813:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 814:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 815:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 816:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 817
	 Choosing alt 1 in insn 817:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 818:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 819:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 820:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=912 from oldreg=358, assigning class SSE_REGS to r912
  820: r912:SF=r912:SF*[frame:DI-0x100]
      REG_DEAD r358:SF
    Inserting insn reload before:
 1187: r912:SF=r358:SF
    Inserting insn reload after:
 1188: r359:SF=r912:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 821:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 822:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 823
	 Choosing alt 1 in insn 823:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 825:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 826:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 827:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=913 from oldreg=781, assigning class SSE_REGS to r913
  827: r913:SF=r913:SF-r363:SF
      REG_DEAD r781:SF
      REG_DEAD r363:SF
    Inserting insn reload before:
 1189: r913:SF=r781:SF
    Inserting insn reload after:
 1190: r780:SF=r913:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 828:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 829:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 830:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 831:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 832:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 833:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 834
	 Choosing alt 1 in insn 834:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 835:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 836:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 837:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=914 from oldreg=367, assigning class SSE_REGS to r914
  837: r914:SF=r914:SF*[frame:DI-0x104]
      REG_DEAD r367:SF
    Inserting insn reload before:
 1191: r914:SF=r367:SF
    Inserting insn reload after:
 1192: r368:SF=r914:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 838:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 839:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 840:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 841
	 Choosing alt 1 in insn 841:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 843:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 844:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=915 from oldreg=364, assigning class SSE_REGS to r915
  844: r915:SF=r915:SF-r373:SF
      REG_DEAD r373:SF
      REG_DEAD r364:SF
    Inserting insn reload before:
 1193: r915:SF=r364:SF
    Inserting insn reload after:
 1194: r787:SF=r915:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 845:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 846:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 847:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 848:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 849:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 850:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 851
	 Choosing alt 1 in insn 851:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 852:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 853:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 854:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=916 from oldreg=377, assigning class SSE_REGS to r916
  854: r916:SF=r916:SF*[frame:DI-0x108]
      REG_DEAD r377:SF
    Inserting insn reload before:
 1195: r916:SF=r377:SF
    Inserting insn reload after:
 1196: r378:SF=r916:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 855:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 856:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 857:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 858
	 Choosing alt 1 in insn 858:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 860:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 861:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=917 from oldreg=374, assigning class SSE_REGS to r917
  861: r917:SF=r917:SF-r383:SF
      REG_DEAD r383:SF
      REG_DEAD r374:SF
    Inserting insn reload before:
 1197: r917:SF=r374:SF
    Inserting insn reload after:
 1198: r793:SF=r917:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 862:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 863:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 864:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 865:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 866
	 Choosing alt 1 in insn 866:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 867:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 868:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 870:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 871:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 872:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 873:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 874
	 Choosing alt 1 in insn 874:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 875:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 876:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 877:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 878:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 879:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 881:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 882:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 883:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 884:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 885:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 886:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 887:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 888:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 889:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 890:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 891:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 892
	 Choosing alt 0 in insn 892:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 893:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 896:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 899:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 900:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 901:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 902:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 903:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=1 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 904
	 Choosing alt 0 in insn 904:  (0) =q  (1) %0  (2) qmn {*iorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 910:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 911:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 912:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 913:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 914:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 915:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 921:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 922:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 927:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 928:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 929:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 930:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 936:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 937:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 938:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 939:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 940:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 941:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 944:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 945:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 946:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 948:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 949:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 950:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 951:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 954:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 955:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 956:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 957:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 961:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 962:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 963:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 967:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) rBwBz {*call}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 972:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 973:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 974:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 975:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 976:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 977:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 978:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 979:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 981:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 982:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 983:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 984:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 986:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 987:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 988:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 989:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 990:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 991:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 992:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 993:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 994:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 995:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 996
	 Choosing alt 1 in insn 996:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 997:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 998:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 999:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1000:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1001:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1002:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1003
	 Choosing alt 1 in insn 1003:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1004:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1005:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1006:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1007:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1008:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1009:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1010:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1011:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1012:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1013:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1014:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1015:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1016:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1017:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1018
	 Choosing alt 1 in insn 1018:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1019:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1020:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1021:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1022:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1023:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1024:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1025
	 Choosing alt 1 in insn 1025:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1026:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1027:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1028:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1029:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1030:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1031:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1032:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1033:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1034:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1035:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1036:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1037:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1038:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1039:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1040
	 Choosing alt 1 in insn 1040:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1041:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1042:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1043:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1044:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1045:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1046:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1047
	 Choosing alt 1 in insn 1047:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1048:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1049:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1050:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1051:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1052:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1053:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1054:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1055:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1056:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1057:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1058:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1059:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1060:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1061:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1062
	 Choosing alt 1 in insn 1062:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1063:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1064:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1065:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1066:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1067:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1068:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1069
	 Choosing alt 1 in insn 1069:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1070:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1071:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1072:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1073:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1074:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1075:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1076:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1077:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1078:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1079:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1080
	 Choosing alt 1 in insn 1080:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1081:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1082:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=918 from oldreg=167, assigning class SSE_REGS to inheritance r918
    Original reg change 167->918 (bb11):
  299: r918:SF=r166:SF
      REG_DEAD r166:SF
    Add original<-inheritance after:
 1199: r167:SF=r918:SF

    Inheritance reuse change 167->918 (bb11):
 1125: r876:SF=r918:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1199: r167:SF=r918:SF
deleting insn with uid = 1199.
EBB 12
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=919 from oldreg=248, assigning class ALL_SSE_REGS to inheritance r919
    Original reg change 248->919 (bb12):
 1158: r919:SF=r893:SF
    Add original<-inheritance after:
 1200: r248:SF=r919:SF

    Inheritance reuse change 248->919 (bb12):
 1159: r894:SF=r919:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1200: r248:SF=r919:SF
deleting insn with uid = 1200.
EBB 13
EBB 14
EBB 15
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=920 from oldreg=326, assigning class ALL_SSE_REGS to inheritance r920
    Original reg change 326->920 (bb15):
 1179: r920:SF=r905:SF
    Add original<-inheritance after:
 1201: r326:SF=r920:SF

    Inheritance reuse change 326->920 (bb15):
 1180: r906:SF=r920:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=921 from oldreg=321, assigning class ALL_SSE_REGS to inheritance r921
    Original reg change 321->921 (bb15):
 1177: r921:SF=r903:SF
    Add original<-inheritance after:
 1202: r321:SF=r921:SF

    Inheritance reuse change 321->921 (bb15):
 1178: r904:SF=r921:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1201: r326:SF=r920:SF
deleting insn with uid = 1201.
	    Removing dead insn:
  1202: r321:SF=r921:SF
deleting insn with uid = 1202.
EBB 16
EBB 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=922 from oldreg=342, assigning class ALL_SSE_REGS to inheritance r922
    Original reg change 342->922 (bb17):
 1183: r922:SF=r909:SF
    Add original<-inheritance after:
 1203: r342:SF=r922:SF

    Inheritance reuse change 342->922 (bb17):
 1184: r910:SF=r922:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=923 from oldreg=337, assigning class ALL_SSE_REGS to inheritance r923
    Original reg change 337->923 (bb17):
 1181: r923:SF=r907:SF
    Add original<-inheritance after:
 1204: r337:SF=r923:SF

    Inheritance reuse change 337->923 (bb17):
 1182: r908:SF=r923:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1203: r342:SF=r922:SF
deleting insn with uid = 1203.
	    Removing dead insn:
  1204: r337:SF=r923:SF
deleting insn with uid = 1204.
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 27
EBB 25
EBB 26

********** Pseudo live ranges #1: **********

  BB 26
   Insn 1104: point = 0, n_alt = -1
   Insn 1082: point = 0, n_alt = 8
   Insn 1081: point = 1, n_alt = 3
   Insn 1080: point = 2, n_alt = 1
   Insn 1079: point = 4, n_alt = 1
   Insn 1078: point = 6, n_alt = 7
   Insn 1077: point = 7, n_alt = 7
   Insn 1076: point = 9, n_alt = 3
   Insn 1075: point = 10, n_alt = 8
   Insn 1074: point = 11, n_alt = 3
   Insn 1073: point = 12, n_alt = 1
   Insn 1072: point = 14, n_alt = 7
   Insn 1071: point = 15, n_alt = 8
   Insn 1070: point = 16, n_alt = 3
   Insn 1069: point = 17, n_alt = 1
   Insn 1068: point = 19, n_alt = 1
   Insn 1067: point = 21, n_alt = 7
   Insn 1066: point = 22, n_alt = 7
   Insn 1065: point = 24, n_alt = 3
   Insn 1064: point = 25, n_alt = 8
   Insn 1063: point = 26, n_alt = 3
   Insn 1062: point = 27, n_alt = 1
   Insn 1061: point = 29, n_alt = 1
   Insn 1060: point = 31, n_alt = 7
   Insn 1059: point = 32, n_alt = 7
   Insn 1058: point = 34, n_alt = 3
   Insn 1057: point = 35, n_alt = 8
   Insn 1056: point = 36, n_alt = 3
   Insn 1055: point = 37, n_alt = 1
   Insn 1054: point = 39, n_alt = 7
   Insn 1053: point = 40, n_alt = 8
   Insn 1052: point = 41, n_alt = 3
   Insn 1051: point = 42, n_alt = 1
   Insn 1050: point = 44, n_alt = 7
   Insn 1049: point = 45, n_alt = 8
   Insn 1048: point = 46, n_alt = 3
   Insn 1047: point = 47, n_alt = 1
   Insn 1046: point = 49, n_alt = 1
   Insn 1045: point = 51, n_alt = 7
   Insn 1044: point = 52, n_alt = 7
   Insn 1043: point = 54, n_alt = 3
   Insn 1042: point = 55, n_alt = 8
   Insn 1041: point = 56, n_alt = 3
   Insn 1040: point = 57, n_alt = 1
   Insn 1039: point = 59, n_alt = 1
   Insn 1038: point = 61, n_alt = 7
   Insn 1037: point = 62, n_alt = 7
   Insn 1036: point = 64, n_alt = 3
   Insn 1035: point = 65, n_alt = 8
   Insn 1034: point = 66, n_alt = 3
   Insn 1033: point = 67, n_alt = 1
   Insn 1032: point = 69, n_alt = 7
   Insn 1031: point = 70, n_alt = 8
   Insn 1030: point = 71, n_alt = 3
   Insn 1029: point = 72, n_alt = 1
   Insn 1028: point = 74, n_alt = 7
   Insn 1027: point = 75, n_alt = 8
   Insn 1026: point = 76, n_alt = 3
   Insn 1025: point = 77, n_alt = 1
   Insn 1024: point = 79, n_alt = 1
   Insn 1023: point = 81, n_alt = 7
   Insn 1022: point = 82, n_alt = 7
   Insn 1021: point = 84, n_alt = 3
   Insn 1020: point = 85, n_alt = 8
   Insn 1019: point = 86, n_alt = 3
   Insn 1018: point = 87, n_alt = 1
   Insn 1017: point = 89, n_alt = 1
   Insn 1016: point = 91, n_alt = 7
   Insn 1015: point = 92, n_alt = 7
   Insn 1014: point = 94, n_alt = 3
   Insn 1013: point = 95, n_alt = 8
   Insn 1012: point = 96, n_alt = 3
   Insn 1011: point = 97, n_alt = 1
   Insn 1010: point = 99, n_alt = 7
   Insn 1009: point = 100, n_alt = 8
   Insn 1008: point = 101, n_alt = 3
   Insn 1007: point = 102, n_alt = 1
   Insn 1006: point = 104, n_alt = 7
   Insn 1005: point = 105, n_alt = 8
   Insn 1004: point = 106, n_alt = 3
   Insn 1003: point = 107, n_alt = 1
   Insn 1002: point = 109, n_alt = 1
   Insn 1001: point = 111, n_alt = 7
   Insn 1000: point = 112, n_alt = 7
   Insn 999: point = 114, n_alt = 3
   Insn 998: point = 115, n_alt = 8
   Insn 997: point = 116, n_alt = 3
   Insn 996: point = 117, n_alt = 1
   Insn 995: point = 119, n_alt = 1
   Insn 994: point = 121, n_alt = 7
   Insn 993: point = 122, n_alt = 7
   Insn 992: point = 124, n_alt = 3
   Insn 991: point = 125, n_alt = 8
   Insn 990: point = 126, n_alt = 0
   Insn 989: point = 128, n_alt = 2
   Insn 988: point = 129, n_alt = 2
   Insn 987: point = 131, n_alt = 7
   Insn 986: point = 132, n_alt = 8
   Insn 985: point = 133, n_alt = 0
   Insn 984: point = 135, n_alt = 2
   Insn 983: point = 136, n_alt = 2
   Insn 982: point = 138, n_alt = 7
   Insn 981: point = 139, n_alt = 8
   Insn 980: point = 140, n_alt = 0
   Insn 979: point = 142, n_alt = 2
   Insn 978: point = 143, n_alt = 2
   Insn 977: point = 145, n_alt = 7
   Insn 976: point = 146, n_alt = 8
   Insn 975: point = 147, n_alt = 0
   Insn 974: point = 149, n_alt = 2
   Insn 973: point = 150, n_alt = 2
   Insn 972: point = 152, n_alt = 7
  BB 23
   Insn 1111: point = 153, n_alt = -1
   Insn 922: point = 153, n_alt = 1
   Insn 921: point = 154, n_alt = 3
  BB 25
   Insn 969: point = 155, n_alt = 0
   Insn 968: point = 155, n_alt = -1
   Insn 967: point = 156, n_alt = 3
   Insn 966: point = 157, n_alt = 0
   Insn 965: point = 157, n_alt = -1
   Insn 964: point = 158, n_alt = -1
   Insn 963: point = 159, n_alt = 0
   Insn 962: point = 159, n_alt = 3
   Insn 961: point = 160, n_alt = 3
   Insn 960: point = 161, n_alt = 0
   Insn 959: point = 161, n_alt = -1
   Insn 958: point = 162, n_alt = -1
   Insn 957: point = 163, n_alt = 0
   Insn 956: point = 163, n_alt = 3
   Insn 955: point = 164, n_alt = 3
   Insn 954: point = 165, n_alt = 0
   Insn 953: point = 165, n_alt = -1
   Insn 952: point = 166, n_alt = -1
   Insn 951: point = 167, n_alt = 0
   Insn 950: point = 167, n_alt = 3
   Insn 949: point = 168, n_alt = 3
   Insn 948: point = 169, n_alt = 0
   Insn 947: point = 169, n_alt = -1
   Insn 946: point = 170, n_alt = 4
   Insn 945: point = 170, n_alt = 0
   Insn 944: point = 170, n_alt = 3
   Insn 943: point = 171, n_alt = 0
   Insn 942: point = 171, n_alt = -1
   Insn 941: point = 172, n_alt = 3
   Insn 940: point = 173, n_alt = 1
   Insn 939: point = 173, n_alt = 1
   Insn 938: point = 173, n_alt = 1
   Insn 937: point = 173, n_alt = 5
   Insn 936: point = 174, n_alt = 4
  BB 27
   Insn 1117: point = 175, n_alt = -1
  BB 5
   Insn 93: point = 175, n_alt = -1
   Insn 92: point = 175, n_alt = 0
   Insn 91: point = 176, n_alt = 0
   Insn 90: point = 177, n_alt = 0
  BB 24
   Insn 1113: point = 177, n_alt = -1
   Insn 930: point = 177, n_alt = 1
   Insn 929: point = 177, n_alt = 8
   Insn 928: point = 178, n_alt = 1
   Insn 927: point = 180, n_alt = 7
  BB 22
   Insn 916: point = 181, n_alt = -1
   Insn 915: point = 181, n_alt = 1
   Insn 914: point = 182, n_alt = 7
   Insn 913: point = 183, n_alt = 1
   Insn 912: point = 185, n_alt = 2
   Insn 911: point = 186, n_alt = 7
   Insn 910: point = 187, n_alt = 8
  BB 21
   Insn 9: point = 189, n_alt = -1
  BB 20
   Insn 906: point = 192, n_alt = -1
   Insn 905: point = 192, n_alt = 0
   Insn 904: point = 193, n_alt = 0
   Insn 903: point = 195, n_alt = 0
   Insn 902: point = 196, n_alt = 1
   Insn 901: point = 196, n_alt = 0
   Insn 900: point = 197, n_alt = 1
   Insn 899: point = 197, n_alt = 7
  BB 19
   Insn 896: point = 199, n_alt = 7
  BB 18
   Insn 894: point = 200, n_alt = -1
   Insn 893: point = 200, n_alt = 0
   Insn 892: point = 201, n_alt = 0
   Insn 891: point = 203, n_alt = 0
   Insn 890: point = 204, n_alt = 1
   Insn 889: point = 204, n_alt = 0
   Insn 888: point = 205, n_alt = 1
   Insn 887: point = 205, n_alt = 7
   Insn 886: point = 206, n_alt = 8
   Insn 885: point = 207, n_alt = 0
   Insn 884: point = 209, n_alt = 2
   Insn 883: point = 210, n_alt = 2
   Insn 882: point = 212, n_alt = 7
   Insn 881: point = 213, n_alt = 8
   Insn 880: point = 214, n_alt = 0
   Insn 879: point = 216, n_alt = 2
   Insn 878: point = 217, n_alt = 1
   Insn 877: point = 219, n_alt = 1
   Insn 876: point = 221, n_alt = 7
   Insn 875: point = 223, n_alt = 3
   Insn 874: point = 224, n_alt = 1
   Insn 873: point = 226, n_alt = 7
   Insn 872: point = 227, n_alt = 7
   Insn 871: point = 229, n_alt = 3
   Insn 870: point = 230, n_alt = 8
   Insn 869: point = 231, n_alt = 0
   Insn 868: point = 233, n_alt = 2
   Insn 867: point = 234, n_alt = 1
   Insn 866: point = 236, n_alt = 1
   Insn 865: point = 238, n_alt = 7
   Insn 864: point = 239, n_alt = 7
   Insn 863: point = 241, n_alt = 3
   Insn 862: point = 242, n_alt = 8
   Insn 1198: point = 243, n_alt = -1
	Hard reg 21 is preferable by r917 with profit 1
   Insn 861: point = 245, n_alt = 2
   Insn 1197: point = 246, n_alt = -1
	Hard reg 21 is preferable by r917 with profit 1
	Hard reg 24 is preferable by r917 with profit 1
   Insn 860: point = 248, n_alt = 1
   Insn 859: point = 250, n_alt = -1
   Insn 858: point = 252, n_alt = 1
   Insn 857: point = 254, n_alt = 1
   Insn 856: point = 256, n_alt = 7
   Insn 855: point = 258, n_alt = 3
   Insn 1196: point = 259, n_alt = -1
	Hard reg 23 is preferable by r916 with profit 1
   Insn 854: point = 261, n_alt = 1
   Insn 1195: point = 261, n_alt = -1
	Hard reg 23 is preferable by r916 with profit 1
	Hard reg 22 is preferable by r916 with profit 1
   Insn 853: point = 263, n_alt = 7
   Insn 852: point = 265, n_alt = 3
   Insn 851: point = 266, n_alt = 1
   Insn 850: point = 268, n_alt = 7
   Insn 849: point = 269, n_alt = 7
   Insn 848: point = 271, n_alt = 3
   Insn 847: point = 272, n_alt = 7
   Insn 846: point = 274, n_alt = 3
   Insn 845: point = 275, n_alt = 8
   Insn 1194: point = 276, n_alt = -1
	Hard reg 21 is preferable by r915 with profit 1
   Insn 844: point = 278, n_alt = 2
   Insn 1193: point = 279, n_alt = -1
	Hard reg 21 is preferable by r915 with profit 1
	Hard reg 24 is preferable by r915 with profit 1
   Insn 843: point = 281, n_alt = 1
   Insn 842: point = 283, n_alt = -1
   Insn 841: point = 285, n_alt = 1
   Insn 840: point = 287, n_alt = 1
   Insn 839: point = 289, n_alt = 7
   Insn 838: point = 291, n_alt = 3
   Insn 1192: point = 292, n_alt = -1
	Hard reg 23 is preferable by r914 with profit 1
   Insn 837: point = 294, n_alt = 1
   Insn 1191: point = 294, n_alt = -1
	Hard reg 23 is preferable by r914 with profit 1
	Hard reg 22 is preferable by r914 with profit 1
   Insn 836: point = 296, n_alt = 7
   Insn 835: point = 298, n_alt = 3
   Insn 834: point = 299, n_alt = 1
   Insn 833: point = 301, n_alt = 7
   Insn 832: point = 302, n_alt = 7
   Insn 831: point = 304, n_alt = 3
   Insn 830: point = 305, n_alt = 7
   Insn 829: point = 307, n_alt = 3
   Insn 828: point = 308, n_alt = 8
   Insn 1190: point = 309, n_alt = -1
	Hard reg 21 is preferable by r913 with profit 1
   Insn 827: point = 311, n_alt = 2
   Insn 1189: point = 312, n_alt = -1
	Hard reg 21 is preferable by r913 with profit 1
	Hard reg 22 is preferable by r913 with profit 1
   Insn 826: point = 314, n_alt = 7
   Insn 825: point = 315, n_alt = 1
   Insn 824: point = 317, n_alt = -1
   Insn 823: point = 319, n_alt = 1
   Insn 822: point = 321, n_alt = 1
   Insn 821: point = 323, n_alt = 7
   Insn 1188: point = 324, n_alt = -1
	Hard reg 23 is preferable by r912 with profit 1
   Insn 820: point = 326, n_alt = 1
   Insn 1187: point = 326, n_alt = -1
	Hard reg 23 is preferable by r912 with profit 1
	Hard reg 22 is preferable by r912 with profit 1
   Insn 819: point = 328, n_alt = 7
   Insn 818: point = 330, n_alt = 3
   Insn 817: point = 331, n_alt = 1
   Insn 816: point = 333, n_alt = 7
   Insn 815: point = 334, n_alt = 7
   Insn 814: point = 336, n_alt = 3
   Insn 813: point = 337, n_alt = 8
   Insn 1186: point = 338, n_alt = -1
	Hard reg 21 is preferable by r911 with profit 1
   Insn 812: point = 340, n_alt = 2
   Insn 1185: point = 341, n_alt = -1
	Hard reg 21 is preferable by r911 with profit 1
	Hard reg 22 is preferable by r911 with profit 1
   Insn 811: point = 343, n_alt = 1
   Insn 810: point = 345, n_alt = 1
   Insn 809: point = 347, n_alt = 7
   Insn 808: point = 349, n_alt = 3
   Insn 807: point = 350, n_alt = 1
   Insn 806: point = 352, n_alt = 7
   Insn 805: point = 353, n_alt = 7
   Insn 804: point = 355, n_alt = 3
   Insn 803: point = 356, n_alt = 7
   Insn 802: point = 358, n_alt = 3
  BB 15
   Insn 1108: point = 359, n_alt = -1
   Insn 742: point = 359, n_alt = 8
   Insn 741: point = 360, n_alt = 3
   Insn 740: point = 361, n_alt = 1
   Insn 739: point = 363, n_alt = 7
   Insn 738: point = 364, n_alt = 8
   Insn 737: point = 365, n_alt = 3
   Insn 736: point = 366, n_alt = 1
   Insn 735: point = 368, n_alt = 7
   Insn 734: point = 369, n_alt = 8
   Insn 733: point = 370, n_alt = 3
   Insn 732: point = 371, n_alt = 1
   Insn 731: point = 373, n_alt = 7
   Insn 730: point = 374, n_alt = 8
   Insn 729: point = 375, n_alt = 1
   Insn 728: point = 377, n_alt = 7
   Insn 727: point = 378, n_alt = 8
   Insn 726: point = 379, n_alt = 1
   Insn 1180: point = 381, n_alt = 7
	   Creating copy r906<-r920@1
   Insn 725: point = 383, n_alt = -1
   Insn 724: point = 384, n_alt = 0
   Insn 723: point = 384, n_alt = -1
   Insn 722: point = 385, n_alt = 2
   Insn 721: point = 387, n_alt = 7
   Insn 720: point = 388, n_alt = 7
   Insn 1179: point = 389, n_alt = 8
	   Creating copy r905->r920@1
   Insn 719: point = 391, n_alt = 7
   Insn 718: point = 393, n_alt = 3
   Insn 717: point = 394, n_alt = 8
   Insn 716: point = 395, n_alt = 3
   Insn 715: point = 396, n_alt = 1
   Insn 1178: point = 398, n_alt = 7
	   Creating copy r904<-r921@1
   Insn 714: point = 400, n_alt = -1
   Insn 713: point = 401, n_alt = 0
   Insn 712: point = 401, n_alt = -1
   Insn 711: point = 402, n_alt = 2
   Insn 710: point = 404, n_alt = 7
   Insn 1177: point = 405, n_alt = 8
	   Creating copy r903->r921@1
   Insn 709: point = 407, n_alt = 7
   Insn 708: point = 409, n_alt = 3
   Insn 707: point = 410, n_alt = 8
   Insn 706: point = 411, n_alt = 2
   Insn 705: point = 413, n_alt = 7
   Insn 704: point = 415, n_alt = 3
   Insn 703: point = 416, n_alt = 7
   Insn 702: point = 418, n_alt = 3
   Insn 701: point = 419, n_alt = 1
   Insn 700: point = 420, n_alt = 3
  BB 17
   Insn 799: point = 421, n_alt = 8
   Insn 798: point = 422, n_alt = 3
   Insn 797: point = 423, n_alt = 1
   Insn 796: point = 425, n_alt = 7
   Insn 795: point = 426, n_alt = 8
   Insn 794: point = 427, n_alt = 3
   Insn 793: point = 428, n_alt = 1
   Insn 792: point = 430, n_alt = 7
   Insn 791: point = 431, n_alt = 8
   Insn 790: point = 432, n_alt = 3
   Insn 789: point = 433, n_alt = 1
   Insn 788: point = 435, n_alt = 7
   Insn 787: point = 436, n_alt = 8
   Insn 786: point = 437, n_alt = 1
   Insn 785: point = 439, n_alt = 7
   Insn 784: point = 440, n_alt = 8
   Insn 783: point = 441, n_alt = 1
   Insn 1184: point = 443, n_alt = 7
	   Creating copy r910<-r922@1
   Insn 782: point = 445, n_alt = -1
   Insn 781: point = 446, n_alt = 0
   Insn 780: point = 446, n_alt = -1
   Insn 779: point = 447, n_alt = 2
   Insn 778: point = 449, n_alt = 7
   Insn 777: point = 450, n_alt = 7
   Insn 1183: point = 451, n_alt = 8
	   Creating copy r909->r922@1
   Insn 776: point = 453, n_alt = 7
   Insn 775: point = 455, n_alt = 3
   Insn 774: point = 456, n_alt = 8
   Insn 773: point = 457, n_alt = 3
   Insn 772: point = 458, n_alt = 1
   Insn 1182: point = 460, n_alt = 7
	   Creating copy r908<-r923@1
   Insn 771: point = 462, n_alt = -1
   Insn 770: point = 463, n_alt = 0
   Insn 769: point = 463, n_alt = -1
   Insn 768: point = 464, n_alt = 2
   Insn 767: point = 466, n_alt = 7
   Insn 1181: point = 467, n_alt = 8
	   Creating copy r907->r923@1
   Insn 766: point = 469, n_alt = 7
   Insn 765: point = 471, n_alt = 3
   Insn 764: point = 472, n_alt = 8
   Insn 763: point = 473, n_alt = 2
   Insn 762: point = 475, n_alt = 7
   Insn 761: point = 477, n_alt = 3
   Insn 760: point = 478, n_alt = 7
   Insn 759: point = 480, n_alt = 3
   Insn 758: point = 481, n_alt = 1
   Insn 757: point = 482, n_alt = 3
  BB 16
   Insn 752: point = 483, n_alt = -1
   Insn 751: point = 483, n_alt = 1
   Insn 750: point = 484, n_alt = 7
   Insn 749: point = 486, n_alt = 3
   Insn 748: point = 487, n_alt = 7
   Insn 747: point = 489, n_alt = 3
  BB 14
   Insn 695: point = 490, n_alt = -1
   Insn 694: point = 490, n_alt = 1
   Insn 693: point = 491, n_alt = 7
   Insn 692: point = 493, n_alt = 3
   Insn 691: point = 494, n_alt = 7
   Insn 690: point = 496, n_alt = 3
   Insn 689: point = 497, n_alt = 1
   Insn 688: point = 498, n_alt = 3
   Insn 687: point = 499, n_alt = 8
   Insn 686: point = 500, n_alt = 3
   Insn 685: point = 501, n_alt = 1
   Insn 684: point = 503, n_alt = 1
   Insn 683: point = 505, n_alt = 7
   Insn 682: point = 507, n_alt = 3
   Insn 681: point = 508, n_alt = 8
   Insn 680: point = 509, n_alt = 3
   Insn 679: point = 510, n_alt = 1
   Insn 678: point = 512, n_alt = 1
   Insn 677: point = 514, n_alt = -1
   Insn 676: point = 516, n_alt = 1
   Insn 675: point = 518, n_alt = 7
   Insn 674: point = 520, n_alt = 3
   Insn 673: point = 521, n_alt = 1
   Insn 672: point = 523, n_alt = 7
   Insn 671: point = 524, n_alt = 7
   Insn 670: point = 526, n_alt = 3
   Insn 1176: point = 527, n_alt = -1
	Hard reg 22 is preferable by r902 with profit 1
   Insn 669: point = 529, n_alt = 1
   Insn 1175: point = 529, n_alt = -1
	Hard reg 22 is preferable by r902 with profit 1
	Hard reg 21 is preferable by r902 with profit 1
   Insn 668: point = 531, n_alt = 1
   Insn 667: point = 533, n_alt = 7
   Insn 666: point = 535, n_alt = 3
   Insn 665: point = 536, n_alt = 8
   Insn 664: point = 537, n_alt = 3
   Insn 663: point = 538, n_alt = 1
   Insn 662: point = 540, n_alt = 1
   Insn 661: point = 542, n_alt = -1
   Insn 660: point = 544, n_alt = 1
   Insn 659: point = 546, n_alt = 7
   Insn 658: point = 548, n_alt = 3
   Insn 657: point = 549, n_alt = 1
   Insn 656: point = 551, n_alt = 7
   Insn 655: point = 552, n_alt = 7
   Insn 654: point = 554, n_alt = 3
   Insn 1174: point = 555, n_alt = -1
	Hard reg 22 is preferable by r901 with profit 1
   Insn 653: point = 557, n_alt = 1
   Insn 1173: point = 557, n_alt = -1
	Hard reg 22 is preferable by r901 with profit 1
	Hard reg 21 is preferable by r901 with profit 1
   Insn 652: point = 559, n_alt = 1
   Insn 651: point = 561, n_alt = 7
   Insn 650: point = 563, n_alt = 3
   Insn 649: point = 564, n_alt = 8
   Insn 648: point = 565, n_alt = 1
   Insn 647: point = 567, n_alt = 1
   Insn 646: point = 569, n_alt = -1
   Insn 645: point = 571, n_alt = 1
   Insn 644: point = 573, n_alt = 7
   Insn 643: point = 575, n_alt = 3
   Insn 642: point = 576, n_alt = 1
   Insn 641: point = 578, n_alt = 7
   Insn 640: point = 579, n_alt = 7
   Insn 639: point = 581, n_alt = 3
   Insn 1172: point = 582, n_alt = -1
	Hard reg 22 is preferable by r900 with profit 1
   Insn 638: point = 584, n_alt = 1
   Insn 1171: point = 584, n_alt = -1
	Hard reg 22 is preferable by r900 with profit 1
	Hard reg 21 is preferable by r900 with profit 1
   Insn 637: point = 586, n_alt = 1
   Insn 636: point = 588, n_alt = 7
   Insn 635: point = 590, n_alt = 3
   Insn 634: point = 591, n_alt = 8
   Insn 633: point = 592, n_alt = 3
   Insn 632: point = 593, n_alt = 1
   Insn 631: point = 595, n_alt = -1
   Insn 630: point = 597, n_alt = 1
   Insn 629: point = 599, n_alt = 7
   Insn 628: point = 601, n_alt = 3
   Insn 627: point = 602, n_alt = 1
   Insn 626: point = 604, n_alt = 7
   Insn 625: point = 605, n_alt = 7
   Insn 624: point = 607, n_alt = 3
   Insn 623: point = 608, n_alt = 8
   Insn 622: point = 609, n_alt = 1
   Insn 621: point = 611, n_alt = 7
   Insn 620: point = 612, n_alt = 8
   Insn 619: point = 613, n_alt = 1
   Insn 618: point = 615, n_alt = 7
   Insn 617: point = 616, n_alt = 8
   Insn 616: point = 617, n_alt = 1
   Insn 615: point = 619, n_alt = 7
   Insn 614: point = 620, n_alt = 8
   Insn 613: point = 621, n_alt = 2
   Insn 612: point = 623, n_alt = -1
   Insn 611: point = 625, n_alt = 2
   Insn 610: point = 627, n_alt = 7
   Insn 609: point = 628, n_alt = 1
   Insn 608: point = 630, n_alt = 7
   Insn 607: point = 631, n_alt = 7
   Insn 606: point = 632, n_alt = 8
   Insn 1170: point = 633, n_alt = -1
	Hard reg 21 is preferable by r899 with profit 1
   Insn 605: point = 635, n_alt = 2
   Insn 1169: point = 636, n_alt = -1
	Hard reg 21 is preferable by r899 with profit 1
	Hard reg 22 is preferable by r899 with profit 1
   Insn 604: point = 638, n_alt = 7
   Insn 603: point = 639, n_alt = 0
   Insn 602: point = 641, n_alt = 2
   Insn 601: point = 643, n_alt = 7
  BB 13
   Insn 598: point = 644, n_alt = 8
   Insn 597: point = 645, n_alt = 7
   Insn 596: point = 646, n_alt = 8
   Insn 595: point = 647, n_alt = 7
   Insn 594: point = 648, n_alt = 8
   Insn 593: point = 649, n_alt = 7
   Insn 592: point = 650, n_alt = 8
   Insn 591: point = 651, n_alt = 7
  BB 12
   Insn 586: point = 652, n_alt = -1
   Insn 585: point = 652, n_alt = 1
   Insn 584: point = 653, n_alt = 7
   Insn 583: point = 654, n_alt = 7
   Insn 582: point = 655, n_alt = 8
   Insn 581: point = 656, n_alt = 2
   Insn 580: point = 658, n_alt = 1
   Insn 579: point = 660, n_alt = 1
   Insn 578: point = 662, n_alt = 7
   Insn 1168: point = 663, n_alt = -1
	Hard reg 22 is preferable by r898 with profit 1
   Insn 577: point = 665, n_alt = 1
   Insn 1167: point = 666, n_alt = -1
	Hard reg 22 is preferable by r898 with profit 1
	Hard reg 21 is preferable by r898 with profit 1
   Insn 576: point = 667, n_alt = 7
   Insn 575: point = 669, n_alt = 3
   Insn 574: point = 670, n_alt = 8
   Insn 573: point = 671, n_alt = 2
   Insn 572: point = 673, n_alt = 1
   Insn 571: point = 675, n_alt = 1
   Insn 570: point = 677, n_alt = 7
   Insn 1166: point = 678, n_alt = -1
	Hard reg 22 is preferable by r897 with profit 1
   Insn 569: point = 680, n_alt = 1
   Insn 1165: point = 681, n_alt = -1
	Hard reg 22 is preferable by r897 with profit 1
	Hard reg 21 is preferable by r897 with profit 1
   Insn 568: point = 682, n_alt = 7
   Insn 567: point = 684, n_alt = 3
   Insn 566: point = 685, n_alt = 8
   Insn 565: point = 686, n_alt = 2
   Insn 564: point = 688, n_alt = 1
   Insn 563: point = 690, n_alt = 1
   Insn 562: point = 692, n_alt = 7
   Insn 1164: point = 693, n_alt = -1
	Hard reg 22 is preferable by r896 with profit 1
   Insn 561: point = 695, n_alt = 1
   Insn 1163: point = 696, n_alt = -1
	Hard reg 22 is preferable by r896 with profit 1
	Hard reg 21 is preferable by r896 with profit 1
   Insn 560: point = 697, n_alt = 7
   Insn 559: point = 699, n_alt = 3
   Insn 558: point = 700, n_alt = 8
   Insn 1162: point = 701, n_alt = -1
	Hard reg 21 is preferable by r895 with profit 1
   Insn 557: point = 703, n_alt = 2
   Insn 1161: point = 704, n_alt = -1
	Hard reg 21 is preferable by r895 with profit 1
	Hard reg 22 is preferable by r895 with profit 1
   Insn 556: point = 706, n_alt = 7
   Insn 555: point = 707, n_alt = 1
   Insn 554: point = 709, n_alt = 7
   Insn 553: point = 711, n_alt = 3
   Insn 552: point = 712, n_alt = 8
   Insn 551: point = 713, n_alt = 7
   Insn 550: point = 714, n_alt = 8
   Insn 549: point = 715, n_alt = 2
   Insn 548: point = 717, n_alt = -1
   Insn 547: point = 719, n_alt = 2
   Insn 546: point = 721, n_alt = 1
   Insn 545: point = 723, n_alt = 7
   Insn 544: point = 724, n_alt = 1
   Insn 543: point = 726, n_alt = 7
   Insn 542: point = 727, n_alt = 8
   Insn 541: point = 728, n_alt = 2
   Insn 540: point = 730, n_alt = -1
   Insn 539: point = 732, n_alt = 2
   Insn 538: point = 734, n_alt = 1
   Insn 537: point = 736, n_alt = 7
   Insn 536: point = 737, n_alt = 1
   Insn 535: point = 739, n_alt = 7
   Insn 534: point = 740, n_alt = 8
   Insn 533: point = 741, n_alt = 2
   Insn 532: point = 743, n_alt = -1
   Insn 531: point = 745, n_alt = 2
   Insn 530: point = 747, n_alt = 1
   Insn 529: point = 749, n_alt = 7
   Insn 528: point = 750, n_alt = 1
   Insn 527: point = 752, n_alt = 7
   Insn 526: point = 753, n_alt = 8
   Insn 1160: point = 754, n_alt = -1
	Hard reg 21 is preferable by r894 with profit 1
   Insn 525: point = 756, n_alt = 2
   Insn 1159: point = 757, n_alt = 7
	   Creating copy r894<-r919@1
   Insn 524: point = 759, n_alt = -1
   Insn 523: point = 760, n_alt = 0
   Insn 522: point = 760, n_alt = 10
   Insn 521: point = 761, n_alt = -1
   Insn 520: point = 762, n_alt = 3
   Insn 519: point = 763, n_alt = 7
   Insn 1158: point = 764, n_alt = 8
	   Creating copy r893->r919@1
   Insn 518: point = 766, n_alt = 7
   Insn 517: point = 768, n_alt = 3
   Insn 516: point = 769, n_alt = 8
   Insn 515: point = 770, n_alt = 2
   Insn 514: point = 772, n_alt = -1
   Insn 513: point = 774, n_alt = 1
   Insn 512: point = 776, n_alt = 1
   Insn 511: point = 778, n_alt = 7
   Insn 1157: point = 779, n_alt = -1
	Hard reg 22 is preferable by r892 with profit 1
   Insn 510: point = 781, n_alt = 1
   Insn 1156: point = 781, n_alt = -1
	Hard reg 22 is preferable by r892 with profit 1
	Hard reg 21 is preferable by r892 with profit 1
   Insn 509: point = 783, n_alt = 7
   Insn 508: point = 784, n_alt = 8
   Insn 507: point = 785, n_alt = 2
   Insn 506: point = 787, n_alt = -1
   Insn 505: point = 789, n_alt = 1
   Insn 504: point = 791, n_alt = 1
   Insn 503: point = 793, n_alt = 7
   Insn 1155: point = 794, n_alt = -1
	Hard reg 22 is preferable by r891 with profit 1
   Insn 502: point = 796, n_alt = 1
   Insn 1154: point = 796, n_alt = -1
	Hard reg 22 is preferable by r891 with profit 1
	Hard reg 21 is preferable by r891 with profit 1
   Insn 501: point = 798, n_alt = 7
   Insn 500: point = 799, n_alt = 8
   Insn 499: point = 800, n_alt = 2
   Insn 498: point = 802, n_alt = -1
   Insn 497: point = 804, n_alt = 1
   Insn 496: point = 806, n_alt = 1
   Insn 495: point = 808, n_alt = 7
   Insn 1153: point = 809, n_alt = -1
	Hard reg 22 is preferable by r890 with profit 1
   Insn 494: point = 811, n_alt = 1
   Insn 1152: point = 811, n_alt = -1
	Hard reg 22 is preferable by r890 with profit 1
	Hard reg 21 is preferable by r890 with profit 1
   Insn 493: point = 813, n_alt = 7
   Insn 492: point = 814, n_alt = 8
   Insn 491: point = 815, n_alt = 0
   Insn 490: point = 816, n_alt = 8
   Insn 489: point = 817, n_alt = 1
   Insn 488: point = 819, n_alt = 1
   Insn 487: point = 821, n_alt = 7
   Insn 1151: point = 822, n_alt = -1
	Hard reg 22 is preferable by r889 with profit 1
   Insn 486: point = 824, n_alt = 1
   Insn 1150: point = 825, n_alt = -1
	Hard reg 22 is preferable by r889 with profit 1
	Hard reg 21 is preferable by r889 with profit 1
   Insn 485: point = 826, n_alt = 7
   Insn 484: point = 827, n_alt = 8
   Insn 483: point = 828, n_alt = 3
   Insn 482: point = 829, n_alt = 1
   Insn 481: point = 831, n_alt = 1
   Insn 480: point = 833, n_alt = 1
   Insn 479: point = 835, n_alt = 7
   Insn 478: point = 837, n_alt = 3
   Insn 477: point = 838, n_alt = 1
   Insn 476: point = 840, n_alt = 7
   Insn 1149: point = 841, n_alt = -1
	Hard reg 22 is preferable by r888 with profit 1
   Insn 475: point = 843, n_alt = 1
   Insn 1148: point = 843, n_alt = -1
	Hard reg 22 is preferable by r888 with profit 1
	Hard reg 21 is preferable by r888 with profit 1
   Insn 474: point = 845, n_alt = 1
   Insn 473: point = 847, n_alt = -1
   Insn 472: point = 849, n_alt = 1
   Insn 471: point = 851, n_alt = 1
   Insn 470: point = 853, n_alt = 7
   Insn 469: point = 855, n_alt = 3
   Insn 1147: point = 856, n_alt = -1
	Hard reg 22 is preferable by r887 with profit 1
   Insn 468: point = 858, n_alt = 1
   Insn 1146: point = 858, n_alt = -1
	Hard reg 22 is preferable by r887 with profit 1
	Hard reg 21 is preferable by r887 with profit 1
   Insn 467: point = 860, n_alt = 7
   Insn 466: point = 862, n_alt = 3
   Insn 465: point = 863, n_alt = 8
   Insn 464: point = 864, n_alt = 3
   Insn 463: point = 865, n_alt = 1
   Insn 462: point = 867, n_alt = 1
   Insn 461: point = 869, n_alt = 1
   Insn 460: point = 871, n_alt = 7
   Insn 459: point = 873, n_alt = 3
   Insn 458: point = 874, n_alt = 1
   Insn 457: point = 876, n_alt = 7
   Insn 1145: point = 877, n_alt = -1
	Hard reg 22 is preferable by r886 with profit 1
   Insn 456: point = 879, n_alt = 1
   Insn 1144: point = 879, n_alt = -1
	Hard reg 22 is preferable by r886 with profit 1
	Hard reg 21 is preferable by r886 with profit 1
   Insn 455: point = 881, n_alt = 1
   Insn 454: point = 883, n_alt = -1
   Insn 453: point = 885, n_alt = 1
   Insn 452: point = 887, n_alt = 1
   Insn 451: point = 889, n_alt = 7
   Insn 450: point = 891, n_alt = 3
   Insn 1143: point = 892, n_alt = -1
	Hard reg 22 is preferable by r885 with profit 1
   Insn 449: point = 894, n_alt = 1
   Insn 1142: point = 894, n_alt = -1
	Hard reg 22 is preferable by r885 with profit 1
	Hard reg 21 is preferable by r885 with profit 1
   Insn 448: point = 896, n_alt = 7
   Insn 447: point = 898, n_alt = 3
   Insn 446: point = 899, n_alt = 8
   Insn 445: point = 900, n_alt = 1
   Insn 444: point = 902, n_alt = 1
   Insn 443: point = 904, n_alt = 1
   Insn 442: point = 906, n_alt = 7
   Insn 441: point = 908, n_alt = 3
   Insn 440: point = 909, n_alt = 1
   Insn 439: point = 911, n_alt = 7
   Insn 1141: point = 912, n_alt = -1
	Hard reg 22 is preferable by r884 with profit 1
   Insn 438: point = 914, n_alt = 1
   Insn 1140: point = 914, n_alt = -1
	Hard reg 22 is preferable by r884 with profit 1
	Hard reg 21 is preferable by r884 with profit 1
   Insn 437: point = 916, n_alt = 1
   Insn 436: point = 918, n_alt = -1
   Insn 435: point = 920, n_alt = 1
   Insn 434: point = 922, n_alt = 1
   Insn 433: point = 924, n_alt = 7
   Insn 432: point = 926, n_alt = 3
   Insn 1139: point = 927, n_alt = -1
	Hard reg 22 is preferable by r883 with profit 1
   Insn 431: point = 929, n_alt = 1
   Insn 1138: point = 929, n_alt = -1
	Hard reg 22 is preferable by r883 with profit 1
	Hard reg 21 is preferable by r883 with profit 1
   Insn 430: point = 931, n_alt = 7
   Insn 429: point = 932, n_alt = 8
   Insn 428: point = 933, n_alt = 3
   Insn 427: point = 934, n_alt = 1
   Insn 426: point = 936, n_alt = 1
   Insn 425: point = 938, n_alt = 7
   Insn 424: point = 940, n_alt = 3
   Insn 423: point = 941, n_alt = 1
   Insn 422: point = 943, n_alt = 7
   Insn 421: point = 944, n_alt = 8
   Insn 420: point = 945, n_alt = 1
   Insn 419: point = 947, n_alt = 7
   Insn 418: point = 948, n_alt = 8
   Insn 417: point = 949, n_alt = 1
   Insn 416: point = 951, n_alt = 7
   Insn 415: point = 952, n_alt = 8
   Insn 414: point = 953, n_alt = 1
   Insn 413: point = 955, n_alt = 7
   Insn 412: point = 956, n_alt = 8
   Insn 411: point = 957, n_alt = 2
   Insn 410: point = 959, n_alt = 1
   Insn 409: point = 961, n_alt = 1
   Insn 408: point = 963, n_alt = -1
   Insn 407: point = 965, n_alt = 1
   Insn 406: point = 967, n_alt = 7
   Insn 405: point = 969, n_alt = 3
   Insn 404: point = 970, n_alt = 8
   Insn 403: point = 971, n_alt = 0
   Insn 402: point = 973, n_alt = 1
   Insn 401: point = 975, n_alt = 1
   Insn 400: point = 977, n_alt = -1
   Insn 399: point = 979, n_alt = 1
   Insn 398: point = 981, n_alt = 1
   Insn 397: point = 983, n_alt = 7
   Insn 396: point = 985, n_alt = 3
   Insn 1137: point = 986, n_alt = -1
	Hard reg 22 is preferable by r882 with profit 1
   Insn 395: point = 988, n_alt = 1
   Insn 1136: point = 989, n_alt = -1
	Hard reg 22 is preferable by r882 with profit 1
	Hard reg 21 is preferable by r882 with profit 1
   Insn 394: point = 990, n_alt = -1
   Insn 393: point = 992, n_alt = 1
   Insn 392: point = 994, n_alt = 7
   Insn 391: point = 995, n_alt = 7
   Insn 390: point = 997, n_alt = 3
   Insn 389: point = 998, n_alt = 8
   Insn 388: point = 999, n_alt = 2
   Insn 387: point = 1001, n_alt = 7
   Insn 386: point = 1002, n_alt = 7
   Insn 385: point = 1004, n_alt = 3
   Insn 384: point = 1005, n_alt = 8
   Insn 383: point = 1006, n_alt = 3
   Insn 382: point = 1007, n_alt = 2
   Insn 381: point = 1009, n_alt = 7
   Insn 380: point = 1010, n_alt = 8
   Insn 379: point = 1011, n_alt = 3
   Insn 378: point = 1012, n_alt = 1
   Insn 377: point = 1014, n_alt = 2
   Insn 376: point = 1015, n_alt = 7
   Insn 375: point = 1016, n_alt = 8
   Insn 374: point = 1017, n_alt = 1
   Insn 373: point = 1019, n_alt = 2
   Insn 372: point = 1020, n_alt = 7
   Insn 371: point = 1021, n_alt = 8
   Insn 370: point = 1022, n_alt = 3
   Insn 369: point = 1023, n_alt = 2
   Insn 368: point = 1025, n_alt = 7
   Insn 367: point = 1026, n_alt = 8
   Insn 366: point = 1027, n_alt = 7
   Insn 365: point = 1028, n_alt = 3
   Insn 364: point = 1029, n_alt = 8
   Insn 363: point = 1030, n_alt = 3
   Insn 362: point = 1031, n_alt = 2
   Insn 361: point = 1033, n_alt = 7
   Insn 360: point = 1034, n_alt = 8
   Insn 359: point = 1035, n_alt = 7
   Insn 358: point = 1036, n_alt = 8
   Insn 357: point = 1037, n_alt = 3
   Insn 356: point = 1038, n_alt = 2
   Insn 355: point = 1040, n_alt = 7
  BB 8
   Insn 1105: point = 1041, n_alt = -1
   Insn 191: point = 1041, n_alt = 8
   Insn 190: point = 1042, n_alt = 7
   Insn 189: point = 1043, n_alt = 8
   Insn 188: point = 1044, n_alt = 7
   Insn 187: point = 1045, n_alt = 8
   Insn 186: point = 1046, n_alt = 7
   Insn 185: point = 1047, n_alt = 8
   Insn 184: point = 1048, n_alt = 7
   Insn 183: point = 1049, n_alt = 8
   Insn 182: point = 1050, n_alt = 7
   Insn 181: point = 1051, n_alt = 8
   Insn 180: point = 1052, n_alt = 7
   Insn 179: point = 1053, n_alt = 8
   Insn 178: point = 1054, n_alt = 7
   Insn 177: point = 1055, n_alt = 8
   Insn 176: point = 1056, n_alt = 7
  BB 11
   Insn 352: point = 1057, n_alt = 8
   Insn 351: point = 1058, n_alt = 0
   Insn 350: point = 1060, n_alt = 2
   Insn 1135: point = 1061, n_alt = -1
	Hard reg 21 is preferable by r881 with profit 1
   Insn 349: point = 1063, n_alt = 2
   Insn 1134: point = 1064, n_alt = -1
	Hard reg 21 is preferable by r881 with profit 1
	Hard reg 22 is preferable by r881 with profit 1
   Insn 348: point = 1066, n_alt = 7
   Insn 347: point = 1067, n_alt = 1
   Insn 346: point = 1069, n_alt = 7
   Insn 345: point = 1070, n_alt = 8
   Insn 344: point = 1071, n_alt = 0
   Insn 343: point = 1073, n_alt = 2
   Insn 1133: point = 1074, n_alt = -1
	Hard reg 21 is preferable by r880 with profit 1
   Insn 342: point = 1076, n_alt = 2
   Insn 1132: point = 1077, n_alt = -1
	Hard reg 21 is preferable by r880 with profit 1
	Hard reg 22 is preferable by r880 with profit 1
   Insn 341: point = 1079, n_alt = 7
   Insn 340: point = 1080, n_alt = 1
   Insn 339: point = 1082, n_alt = 7
   Insn 338: point = 1083, n_alt = 8
   Insn 337: point = 1084, n_alt = 0
   Insn 336: point = 1086, n_alt = 2
   Insn 1131: point = 1087, n_alt = -1
	Hard reg 21 is preferable by r879 with profit 1
   Insn 335: point = 1089, n_alt = 2
   Insn 1130: point = 1090, n_alt = -1
	Hard reg 21 is preferable by r879 with profit 1
	Hard reg 22 is preferable by r879 with profit 1
   Insn 334: point = 1092, n_alt = 7
   Insn 333: point = 1093, n_alt = 1
   Insn 332: point = 1095, n_alt = 7
   Insn 331: point = 1096, n_alt = 8
   Insn 330: point = 1097, n_alt = 2
   Insn 329: point = 1099, n_alt = 7
   Insn 328: point = 1100, n_alt = 8
   Insn 327: point = 1101, n_alt = 1
   Insn 326: point = 1103, n_alt = 7
   Insn 325: point = 1104, n_alt = 8
   Insn 324: point = 1105, n_alt = 1
   Insn 323: point = 1107, n_alt = 7
   Insn 322: point = 1108, n_alt = 8
   Insn 321: point = 1109, n_alt = 1
   Insn 320: point = 1111, n_alt = 7
   Insn 319: point = 1112, n_alt = 8
   Insn 318: point = 1113, n_alt = 0
   Insn 317: point = 1115, n_alt = 2
   Insn 316: point = 1116, n_alt = 1
   Insn 1129: point = 1118, n_alt = -1
	Hard reg 21 is preferable by r878 with profit 1
   Insn 315: point = 1120, n_alt = 2
   Insn 1128: point = 1121, n_alt = -1
	Hard reg 21 is preferable by r878 with profit 1
	Hard reg 23 is preferable by r878 with profit 1
   Insn 314: point = 1123, n_alt = 0
   Insn 1127: point = 1125, n_alt = -1
	Hard reg 21 is preferable by r877 with profit 1
   Insn 313: point = 1127, n_alt = 2
   Insn 1126: point = 1128, n_alt = -1
	Hard reg 21 is preferable by r877 with profit 1
	Hard reg 22 is preferable by r877 with profit 1
   Insn 312: point = 1130, n_alt = 7
   Insn 311: point = 1131, n_alt = -1
   Insn 310: point = 1133, n_alt = 2
   Insn 309: point = 1135, n_alt = 7
   Insn 308: point = 1136, n_alt = 7
   Insn 307: point = 1137, n_alt = 1
   Insn 306: point = 1139, n_alt = 7
   Insn 305: point = 1140, n_alt = 8
   Insn 304: point = 1141, n_alt = 1
   Insn 1125: point = 1143, n_alt = 7
	   Creating copy r876<-r918@1
   Insn 303: point = 1145, n_alt = -1
   Insn 302: point = 1146, n_alt = 0
   Insn 301: point = 1146, n_alt = 10
   Insn 300: point = 1147, n_alt = 3
   Insn 299: point = 1148, n_alt = 8
	Hard reg 21 is preferable by r918 with profit 1
   Insn 298: point = 1150, n_alt = 2
   Insn 297: point = 1152, n_alt = 7
   Insn 296: point = 1153, n_alt = 7
   Insn 295: point = 1154, n_alt = 8
   Insn 294: point = 1155, n_alt = 0
   Insn 293: point = 1157, n_alt = 2
   Insn 292: point = 1158, n_alt = 1
   Insn 291: point = 1160, n_alt = 7
   Insn 290: point = 1161, n_alt = 4
   Insn 289: point = 1162, n_alt = 9
   Insn 288: point = 1163, n_alt = 0
   Insn 287: point = 1163, n_alt = -1
   Insn 286: point = 1164, n_alt = 1
   Insn 285: point = 1166, n_alt = 2
   Insn 284: point = 1167, n_alt = 7
   Insn 283: point = 1168, n_alt = 8
  BB 10
   Insn 280: point = 1170, n_alt = 7
  BB 9
   Insn 278: point = 1171, n_alt = -1
   Insn 277: point = 1171, n_alt = 0
   Insn 276: point = 1172, n_alt = 0
   Insn 275: point = 1174, n_alt = 0
   Insn 274: point = 1175, n_alt = 1
   Insn 273: point = 1175, n_alt = 0
   Insn 272: point = 1176, n_alt = 1
   Insn 271: point = 1176, n_alt = 7
   Insn 270: point = 1177, n_alt = 8
   Insn 269: point = 1178, n_alt = 1
   Insn 268: point = 1180, n_alt = -1
   Insn 1124: point = 1182, n_alt = -1
	Hard reg 22 is preferable by r875 with profit 1
   Insn 267: point = 1184, n_alt = 2
   Insn 1123: point = 1185, n_alt = -1
	Hard reg 22 is preferable by r875 with profit 1
	Hard reg 23 is preferable by r875 with profit 1
   Insn 266: point = 1187, n_alt = 7
   Insn 265: point = 1188, n_alt = 2
   Insn 264: point = 1190, n_alt = 7
   Insn 263: point = 1192, n_alt = 3
   Insn 262: point = 1193, n_alt = 7
   Insn 261: point = 1195, n_alt = 3
   Insn 260: point = 1196, n_alt = 1
   Insn 259: point = 1198, n_alt = 7
   Insn 258: point = 1199, n_alt = 7
   Insn 257: point = 1201, n_alt = 3
   Insn 256: point = 1202, n_alt = 8
   Insn 255: point = 1203, n_alt = 1
   Insn 254: point = 1205, n_alt = 7
   Insn 253: point = 1206, n_alt = 1
   Insn 252: point = 1208, n_alt = -1
   Insn 1122: point = 1210, n_alt = -1
	Hard reg 22 is preferable by r874 with profit 1
   Insn 251: point = 1212, n_alt = 2
   Insn 1121: point = 1213, n_alt = -1
	Hard reg 22 is preferable by r874 with profit 1
	Hard reg 23 is preferable by r874 with profit 1
   Insn 250: point = 1215, n_alt = 7
   Insn 249: point = 1216, n_alt = 2
   Insn 248: point = 1218, n_alt = 7
   Insn 247: point = 1220, n_alt = 3
   Insn 246: point = 1221, n_alt = 7
   Insn 245: point = 1223, n_alt = 3
   Insn 244: point = 1224, n_alt = 1
   Insn 243: point = 1226, n_alt = 7
   Insn 242: point = 1227, n_alt = 7
   Insn 241: point = 1229, n_alt = 3
   Insn 240: point = 1230, n_alt = 8
   Insn 239: point = 1231, n_alt = 2
   Insn 238: point = 1233, n_alt = -1
   Insn 237: point = 1235, n_alt = 2
   Insn 236: point = 1237, n_alt = 1
   Insn 235: point = 1239, n_alt = 7
   Insn 234: point = 1240, n_alt = 2
   Insn 233: point = 1242, n_alt = 7
   Insn 232: point = 1244, n_alt = 3
   Insn 231: point = 1245, n_alt = 1
   Insn 230: point = 1247, n_alt = 7
   Insn 229: point = 1249, n_alt = 3
   Insn 228: point = 1250, n_alt = 8
   Insn 227: point = 1251, n_alt = 2
   Insn 226: point = 1253, n_alt = -1
   Insn 225: point = 1255, n_alt = 2
   Insn 224: point = 1257, n_alt = 1
   Insn 223: point = 1259, n_alt = 7
   Insn 222: point = 1260, n_alt = 2
   Insn 221: point = 1262, n_alt = 7
   Insn 220: point = 1264, n_alt = 3
   Insn 219: point = 1265, n_alt = 1
   Insn 218: point = 1267, n_alt = 7
   Insn 217: point = 1269, n_alt = 3
   Insn 216: point = 1270, n_alt = 8
   Insn 215: point = 1271, n_alt = 2
   Insn 214: point = 1273, n_alt = -1
   Insn 213: point = 1275, n_alt = 2
   Insn 212: point = 1277, n_alt = 1
   Insn 211: point = 1279, n_alt = 7
   Insn 210: point = 1280, n_alt = 2
   Insn 209: point = 1282, n_alt = 7
   Insn 208: point = 1284, n_alt = 3
   Insn 207: point = 1285, n_alt = 1
   Insn 206: point = 1287, n_alt = 7
   Insn 205: point = 1289, n_alt = 3
   Insn 204: point = 1290, n_alt = 8
   Insn 203: point = 1291, n_alt = 2
   Insn 202: point = 1293, n_alt = 7
   Insn 201: point = 1295, n_alt = 3
   Insn 200: point = 1296, n_alt = 1
   Insn 199: point = 1298, n_alt = 7
   Insn 198: point = 1300, n_alt = 3
   Insn 197: point = 1301, n_alt = 2
   Insn 196: point = 1303, n_alt = 7
  BB 7
   Insn 171: point = 1304, n_alt = -1
   Insn 170: point = 1304, n_alt = 1
   Insn 169: point = 1305, n_alt = 7
  BB 6
   Insn 168: point = 1306, n_alt = -1
   Insn 167: point = 1306, n_alt = 1
   Insn 166: point = 1307, n_alt = 7
   Insn 165: point = 1308, n_alt = 8
   Insn 164: point = 1309, n_alt = 1
   Insn 163: point = 1311, n_alt = 1
   Insn 162: point = 1313, n_alt = 1
   Insn 161: point = 1315, n_alt = 7
   Insn 160: point = 1316, n_alt = 7
   Insn 159: point = 1317, n_alt = 1
   Insn 158: point = 1319, n_alt = 7
   Insn 157: point = 1320, n_alt = 7
   Insn 156: point = 1321, n_alt = 8
   Insn 155: point = 1322, n_alt = 1
   Insn 154: point = 1324, n_alt = 7
   Insn 153: point = 1325, n_alt = 1
   Insn 152: point = 1327, n_alt = 7
   Insn 151: point = 1328, n_alt = 7
   Insn 150: point = 1329, n_alt = 8
   Insn 149: point = 1330, n_alt = 0
   Insn 148: point = 1332, n_alt = 2
   Insn 147: point = 1333, n_alt = 1
   Insn 146: point = 1335, n_alt = 1
   Insn 145: point = 1337, n_alt = 7
   Insn 144: point = 1338, n_alt = 7
   Insn 143: point = 1339, n_alt = 8
   Insn 142: point = 1340, n_alt = 1
   Insn 141: point = 1342, n_alt = 1
   Insn 140: point = 1344, n_alt = 1
   Insn 139: point = 1346, n_alt = 7
   Insn 138: point = 1347, n_alt = 7
   Insn 137: point = 1348, n_alt = 1
   Insn 136: point = 1350, n_alt = 7
   Insn 135: point = 1351, n_alt = 7
   Insn 134: point = 1352, n_alt = 8
   Insn 133: point = 1353, n_alt = 1
   Insn 132: point = 1355, n_alt = 7
   Insn 131: point = 1356, n_alt = 1
   Insn 130: point = 1358, n_alt = 7
   Insn 129: point = 1359, n_alt = 7
   Insn 128: point = 1360, n_alt = 8
   Insn 127: point = 1361, n_alt = 1
   Insn 126: point = 1363, n_alt = 1
   Insn 125: point = 1365, n_alt = 1
   Insn 124: point = 1367, n_alt = 7
   Insn 123: point = 1368, n_alt = 7
   Insn 122: point = 1369, n_alt = 1
   Insn 121: point = 1371, n_alt = 7
   Insn 120: point = 1372, n_alt = 7
   Insn 119: point = 1373, n_alt = 8
   Insn 118: point = 1374, n_alt = 1
   Insn 117: point = 1376, n_alt = 7
   Insn 116: point = 1377, n_alt = 1
   Insn 115: point = 1379, n_alt = 7
   Insn 114: point = 1380, n_alt = 7
   Insn 113: point = 1381, n_alt = 8
   Insn 112: point = 1382, n_alt = 1
   Insn 111: point = 1384, n_alt = 1
   Insn 110: point = 1386, n_alt = 1
   Insn 109: point = 1388, n_alt = 7
   Insn 108: point = 1389, n_alt = 7
   Insn 107: point = 1390, n_alt = 1
   Insn 106: point = 1392, n_alt = 7
   Insn 105: point = 1393, n_alt = 7
   Insn 104: point = 1394, n_alt = 4
   Insn 103: point = 1395, n_alt = 9
   Insn 102: point = 1396, n_alt = 0
   Insn 101: point = 1396, n_alt = 10
   Insn 100: point = 1397, n_alt = 3
   Insn 99: point = 1398, n_alt = 4
   Insn 98: point = 1399, n_alt = 9
   Insn 97: point = 1400, n_alt = 0
   Insn 96: point = 1400, n_alt = 10
   Insn 95: point = 1401, n_alt = 3
  BB 4
   Insn 88: point = 1402, n_alt = 1
   Insn 87: point = 1402, n_alt = 1
   Insn 86: point = 1403, n_alt = 3
   Insn 85: point = 1404, n_alt = 8
  BB 3
   Insn 82: point = 1406, n_alt = 7
  BB 2
   Insn 80: point = 1407, n_alt = -1
   Insn 79: point = 1407, n_alt = 0
   Insn 78: point = 1408, n_alt = 0
   Insn 77: point = 1410, n_alt = 0
   Insn 76: point = 1411, n_alt = 1
   Insn 75: point = 1411, n_alt = 0
   Insn 74: point = 1412, n_alt = 1
   Insn 73: point = 1413, n_alt = 7
   Insn 72: point = 1414, n_alt = 7
   Insn 71: point = 1415, n_alt = 8
   Insn 70: point = 1416, n_alt = 1
   Insn 69: point = 1418, n_alt = 2
   Insn 68: point = 1420, n_alt = 7
   Insn 67: point = 1422, n_alt = 3
   Insn 66: point = 1423, n_alt = 7
   Insn 65: point = 1425, n_alt = 3
   Insn 64: point = 1426, n_alt = 7
   Insn 63: point = 1428, n_alt = 3
   Insn 62: point = 1429, n_alt = 4
   Insn 61: point = 1430, n_alt = 9
   Insn 60: point = 1431, n_alt = 0
   Insn 59: point = 1431, n_alt = 10
   Insn 58: point = 1432, n_alt = -1
   Insn 57: point = 1433, n_alt = 3
   Insn 56: point = 1434, n_alt = 7
   Insn 55: point = 1435, n_alt = 8
   Insn 54: point = 1436, n_alt = 1
   Insn 53: point = 1438, n_alt = 7
   Insn 52: point = 1439, n_alt = -1
   Insn 51: point = 1441, n_alt = 2
   Insn 50: point = 1443, n_alt = 7
   Insn 49: point = 1444, n_alt = 8
   Insn 48: point = 1445, n_alt = 1
   Insn 47: point = 1447, n_alt = 7
   Insn 46: point = 1448, n_alt = -1
   Insn 45: point = 1450, n_alt = 2
   Insn 44: point = 1452, n_alt = 7
   Insn 43: point = 1453, n_alt = 8
   Insn 42: point = 1454, n_alt = 0
   Insn 41: point = 1456, n_alt = 1
   Insn 40: point = 1458, n_alt = 1
   Insn 39: point = 1460, n_alt = 7
   Insn 1120: point = 1461, n_alt = -1
	Hard reg 22 is preferable by r873 with profit 1
   Insn 38: point = 1463, n_alt = 1
   Insn 1119: point = 1464, n_alt = -1
	Hard reg 22 is preferable by r873 with profit 1
	Hard reg 21 is preferable by r873 with profit 1
   Insn 37: point = 1465, n_alt = 7
   Insn 36: point = 1466, n_alt = 8
   Insn 35: point = 1467, n_alt = 7
   Insn 34: point = 1468, n_alt = 8
   Insn 33: point = 1469, n_alt = 7
   Insn 32: point = 1471, n_alt = 3
   Insn 31: point = 1472, n_alt = 8
   Insn 30: point = 1473, n_alt = 2
   Insn 29: point = 1475, n_alt = 1
   Insn 28: point = 1477, n_alt = 7
   Insn 27: point = 1479, n_alt = 3
   Insn 26: point = 1480, n_alt = 7
   Insn 25: point = 1482, n_alt = 3
   Insn 24: point = 1483, n_alt = 8
   Insn 23: point = 1484, n_alt = 7
   Insn 22: point = 1485, n_alt = 8
   Insn 21: point = 1486, n_alt = 7
   Insn 20: point = 1487, n_alt = 8
   Insn 19: point = 1488, n_alt = 1
   Insn 18: point = 1490, n_alt = 7
   Insn 17: point = 1491, n_alt = 7
   Insn 16: point = 1493, n_alt = 3
   Insn 15: point = 1494, n_alt = 8
   Insn 14: point = 1495, n_alt = 7
   Insn 13: point = 1496, n_alt = 8
   Insn 12: point = 1497, n_alt = 7
   Insn 7: point = 1498, n_alt = 5
   Insn 6: point = 1498, n_alt = 5
   Insn 5: point = 1498, n_alt = 5
   Insn 4: point = 1498, n_alt = 5
   Insn 3: point = 1498, n_alt = 5
   Insn 2: point = 1498, n_alt = 5
 r87: [1489..1491]
 r88: [1476..1480]
 r89: [1476..1477]
 r90: [1474..1475]
 r91: [1455..1456]
 r92: [1449..1450]
 r93: [1446..1448]
 r94: [1440..1441]
 r95: [1437..1439]
 r96: [1417..1426]
 r97: [1419..1423]
 r98: [1419..1420]
 r99: [1417..1418]
 r100: [1409..1411]
 r101: [1409..1410]
 r102: [1407..1408]
 r103: [1383..1390]
 r104: [1385..1386]
 r105: [1383..1384]
 r106: [1375..1377]
 r107: [1362..1369]
 r108: [1364..1365]
 r109: [1362..1363]
 r110: [1354..1356]
 r111: [1341..1348]
 r112: [1343..1344]
 r113: [1341..1342]
 r114: [1334..1335]
 r115: [1331..1333]
 r116: [1323..1325]
 r117: [1310..1317]
 r118: [1312..1313]
 r119: [1310..1311]
 r120: [1297..1301]
 r121: [1297..1298]
 r122: [1292..1296]
 r123: [1292..1293]
 r124: [1286..1287]
 r125: [1281..1285]
 r126: [1281..1282]
 r127: [1276..1280]
 r128: [1276..1277]
 r129: [1274..1275]
 r130: [1272..1273]
 r131: [1266..1267]
 r132: [1261..1265]
 r133: [1261..1262]
 r134: [1256..1260]
 r135: [1256..1257]
 r136: [1254..1255]
 r137: [1252..1253]
 r138: [1246..1247]
 r139: [1241..1245]
 r140: [1241..1242]
 r141: [1236..1240]
 r142: [1236..1237]
 r143: [1234..1235]
 r144: [1232..1233]
 r145: [1225..1227]
 r146: [1207..1224]
 r147: [1217..1221]
 r148: [1217..1218]
 r149: [1212..1216]
 r150: [1209..1210]
 r151: [1207..1208]
 r152: [1204..1206]
 r153: [1197..1199]
 r154: [1179..1196]
 r155: [1189..1193]
 r156: [1189..1190]
 r157: [1184..1188]
 r158: [1181..1182]
 r159: [1179..1180]
 r160: [1173..1175]
 r161: [1173..1174]
 r162: [1171..1172]
 r163: [1163..1164]
 r164: [1156..1158]
 r165: [1151..1153]
 r166: [1149..1150]
 r168: [1142..1145]
 r169: [1134..1136]
 r170: [1132..1133]
 r171: [1122..1131]
 r172: [1124..1125]
 r173: [1120..1123]
 r174: [1117..1118]
 r175: [1114..1116]
 r176: [1085..1087]
 r177: [1072..1074]
 r178: [1059..1061]
 r179: [1036..1038]
 r180: [1029..1031]
 r181: [1021..1023]
 r182: [1010..1012]
 r183: [1005..1007]
 r184: [1000..1002]
 r185: [993..995]
 r186: [993..994]
 r187: [991..992]
 r188: [982..983]
 r189: [980..981]
 r190: [978..979]
 r191: [972..973]
 r192: [966..967]
 r193: [964..965]
 r194: [958..959]
 r195: [937..941]
 r196: [937..938]
 r197: [935..936]
 r198: [932..934]
 r199: [921..927]
 r200: [923..924]
 r201: [921..922]
 r202: [919..920]
 r203: [917..918]
 r204: [915..916]
 r205: [901..912]
 r206: [905..909]
 r207: [905..906]
 r208: [903..904]
 r209: [901..902]
 r210: [895..896]
 r211: [886..892]
 r212: [888..889]
 r213: [886..887]
 r214: [884..885]
 r215: [882..883]
 r216: [880..881]
 r217: [866..877]
 r218: [870..874]
 r219: [870..871]
 r220: [868..869]
 r221: [866..867]
 r222: [863..865]
 r223: [859..860]
 r224: [850..856]
 r225: [852..853]
 r226: [850..851]
 r227: [848..849]
 r228: [846..847]
 r229: [844..845]
 r230: [830..841]
 r231: [834..838]
 r232: [834..835]
 r233: [832..833]
 r234: [830..831]
 r235: [827..829]
 r236: [805..809]
 r237: [805..806]
 r238: [803..804]
 r239: [801..802]
 r240: [790..794]
 r241: [790..791]
 r242: [788..789]
 r243: [786..787]
 r244: [775..779]
 r245: [775..776]
 r246: [773..774]
 r247: [771..772]
 r249: [756..759]
 r250: [753..754]
 r251: [746..750]
 r252: [746..747]
 r253: [744..745]
 r254: [742..743]
 r255: [733..737]
 r256: [733..734]
 r257: [731..732]
 r258: [729..730]
 r259: [720..724]
 r260: [720..721]
 r261: [718..719]
 r262: [716..717]
 r263: [689..690]
 r264: [687..688]
 r265: [674..675]
 r266: [672..673]
 r267: [659..660]
 r268: [657..658]
 r269: [652..654]
 r270: [640..641]
 r271: [635..639]
 r272: [622..628]
 r273: [624..625]
 r274: [622..623]
 r275: [603..605]
 r276: [603..604]
 r277: [598..602]
 r278: [598..599]
 r279: [596..597]
 r280: [594..595]
 r281: [591..593]
 r282: [587..588]
 r283: [585..586]
 r284: [566..582]
 r285: [577..579]
 r286: [577..578]
 r287: [572..576]
 r288: [572..573]
 r289: [570..571]
 r290: [568..569]
 r291: [566..567]
 r292: [560..561]
 r293: [558..559]
 r294: [539..555]
 r295: [550..552]
 r296: [550..551]
 r297: [545..549]
 r298: [545..546]
 r299: [543..544]
 r300: [541..542]
 r301: [539..540]
 r302: [536..538]
 r303: [532..533]
 r304: [530..531]
 r305: [511..527]
 r306: [522..524]
 r307: [522..523]
 r308: [517..521]
 r309: [517..518]
 r310: [515..516]
 r311: [513..514]
 r312: [511..512]
 r313: [508..510]
 r314: [504..505]
 r315: [502..503]
 r316: [499..501]
 r317: [490..494]
 r318: [490..491]
 r319: [412..416]
 r320: [412..413]
 r322: [403..404]
 r323: [401..402]
 r324: [397..400]
 r325: [394..396]
 r327: [386..388]
 r328: [384..385]
 r329: [380..383]
 r330: [369..371]
 r331: [364..366]
 r332: [359..361]
 r333: [483..487]
 r334: [483..484]
 r335: [474..478]
 r336: [474..475]
 r338: [465..466]
 r339: [463..464]
 r340: [459..462]
 r341: [456..458]
 r343: [448..450]
 r344: [446..447]
 r345: [442..445]
 r346: [431..433]
 r347: [426..428]
 r348: [421..423]
 r349: [342..356]
 r350: [351..353]
 r351: [346..350]
 r352: [346..347]
 r353: [344..345]
 r354: [340..343]
 r355: [337..338]
 r356: [332..334]
 r357: [316..331]
 r358: [327..328]
 r359: [320..324]
 r360: [320..321]
 r361: [318..319]
 r362: [316..317]
 r363: [311..315]
 r364: [280..305]
 r365: [300..302]
 r366: [282..299]
 r367: [295..296]
 r368: [286..292]
 r369: [288..289]
 r370: [286..287]
 r371: [284..285]
 r372: [282..283]
 r373: [278..281]
 r374: [247..272]
 r375: [267..269]
 r376: [249..266]
 r377: [262..263]
 r378: [253..259]
 r379: [255..256]
 r380: [253..254]
 r381: [251..252]
 r382: [249..250]
 r383: [245..248]
 r384: [237..239]
 r385: [235..236]
 r386: [232..234]
 r387: [225..227]
 r388: [220..224]
 r389: [220..221]
 r390: [218..219]
 r391: [215..217]
 r392: [211..212]
 r393: [208..210]
 r394: [202..204]
 r395: [202..203]
 r396: [200..201]
 r397: [194..196]
 r398: [194..195]
 r399: [192..193]
 r400: [181..183]
 r401: [181..182]
 r402: [148..150]
 r403: [141..143]
 r404: [134..136]
 r405: [127..129]
 r406: [118..122]
 r407: [118..119]
 r408: [115..117]
 r409: [108..112]
 r410: [108..109]
 r411: [105..107]
 r412: [100..102]
 r413: [95..97]
 r414: [88..92]
 r415: [88..89]
 r416: [85..87]
 r417: [78..82]
 r418: [78..79]
 r419: [75..77]
 r420: [70..72]
 r421: [65..67]
 r422: [58..62]
 r423: [58..59]
 r424: [55..57]
 r425: [48..52]
 r426: [48..49]
 r427: [45..47]
 r428: [40..42]
 r429: [35..37]
 r430: [28..32]
 r431: [28..29]
 r432: [25..27]
 r433: [18..22]
 r434: [18..19]
 r435: [15..17]
 r436: [10..12]
 r437: [3..7]
 r438: [3..4]
 r439: [0..2]
 r440: [1404..1414]
 r441: [1168..1176]
 r442: [190..205]
 r443: [192..197] [187..189]
 r444: [1463..1465]
 r445: [1457..1461]
 r446: [1459..1460]
 r447: [1457..1458]
 r448: [175..176]
 r449: [1138..1139]
 r450: [1127..1137]
 r451: [1094..1095]
 r452: [1089..1093]
 r453: [1081..1082]
 r454: [1076..1080]
 r455: [1068..1069]
 r456: [1063..1067]
 r457: [988..990]
 r458: [974..986]
 r459: [976..977]
 r460: [974..975]
 r461: [962..963]
 r462: [960..961]
 r463: [824..826]
 r464: [818..822]
 r465: [820..821]
 r466: [818..819]
 r467: [708..709]
 r468: [703..707]
 r469: [695..697]
 r470: [687..693]
 r471: [680..682]
 r472: [672..678]
 r473: [665..667]
 r474: [657..663]
 r475: [1496..1497]
 r476: [1494..1495]
 r477: [1492..1493]
 r478: [1487..1488]
 r479: [1489..1490]
 r480: [1485..1486]
 r481: [1483..1484]
 r482: [1481..1482]
 r483: [1478..1479]
 r484: [1472..1473]
 r485: [1470..1471]
 r486: [1468..1469]
 r487: [1466..1467]
 r488: [1453..1454]
 r489: [1451..1452]
 r490: [1444..1445]
 r491: [1446..1447]
 r492: [1442..1443]
 r493: [1435..1436]
 r494: [1437..1438]
 r495: [1432..1434]
 r496: [1431..1433]
 r497: [1429..1430]
 r498: [1427..1428]
 r499: [1424..1425]
 r500: [1421..1422]
 r501: [1415..1416]
 r502: [1412..1413]
 r503: [1402..1403]
 r504: [1400..1401]
 r505: [1398..1399]
 r506: [1396..1397]
 r507: [1394..1395]
 r508: [1391..1393]
 r509: [1391..1392]
 r510: [1387..1389]
 r511: [1387..1388]
 r512: [1381..1382]
 r513: [1378..1380]
 r514: [1378..1379]
 r515: [1373..1374]
 r516: [1375..1376]
 r517: [1370..1372]
 r518: [1370..1371]
 r519: [1366..1368]
 r520: [1366..1367]
 r521: [1360..1361]
 r522: [1357..1359]
 r523: [1357..1358]
 r524: [1352..1353]
 r525: [1354..1355]
 r526: [1349..1351]
 r527: [1349..1350]
 r528: [1345..1347]
 r529: [1345..1346]
 r530: [1339..1340]
 r531: [1336..1338]
 r532: [1336..1337]
 r533: [1329..1330]
 r534: [1331..1332]
 r535: [1326..1328]
 r536: [1326..1327]
 r537: [1321..1322]
 r538: [1323..1324]
 r539: [1318..1320]
 r540: [1318..1319]
 r541: [1314..1316]
 r542: [1314..1315]
 r543: [1308..1309]
 r544: [1306..1307]
 r545: [1304..1305]
 r546: [1055..1056]
 r547: [1053..1054]
 r548: [1051..1052]
 r549: [1049..1050]
 r550: [1047..1048]
 r551: [1045..1046]
 r552: [1043..1044]
 r553: [1041..1042]
 r554: [1302..1303]
 r555: [1299..1300]
 r556: [1294..1295]
 r557: [1290..1291]
 r558: [1288..1289]
 r559: [1283..1284]
 r560: [1278..1279]
 r561: [1270..1271]
 r562: [1268..1269]
 r563: [1263..1264]
 r564: [1258..1259]
 r565: [1250..1251]
 r566: [1248..1249]
 r567: [1243..1244]
 r568: [1238..1239]
 r569: [1230..1231]
 r570: [1228..1229]
 r571: [1225..1226]
 r572: [1222..1223]
 r573: [1219..1220]
 r574: [1214..1215]
 r575: [1202..1203]
 r576: [1204..1205]
 r577: [1200..1201]
 r578: [1197..1198]
 r579: [1194..1195]
 r580: [1191..1192]
 r581: [1186..1187]
 r582: [1177..1178]
 r583: [1165..1167]
 r584: [1165..1166]
 r585: [1161..1162]
 r586: [1159..1160]
 r587: [1154..1155]
 r588: [1156..1157]
 r589: [1151..1152]
 r590: [1146..1147]
 r591: [1140..1141]
 r592: [1134..1135]
 r593: [1129..1130]
 r594: [1112..1113]
 r595: [1114..1115]
 r596: [1108..1109]
 r597: [1110..1111]
 r598: [1104..1105]
 r599: [1106..1107]
 r600: [1100..1101]
 r601: [1102..1103]
 r602: [1096..1097]
 r603: [1098..1099]
 r604: [1091..1092]
 r605: [1083..1084]
 r606: [1085..1086]
 r607: [1078..1079]
 r608: [1070..1071]
 r609: [1072..1073]
 r610: [1065..1066]
 r611: [1057..1058]
 r612: [1059..1060]
 r613: [1039..1040]
 r614: [1036..1037]
 r615: [1034..1035]
 r616: [1032..1033]
 r617: [1029..1030]
 r618: [1026..1028]
 r619: [1026..1027]
 r620: [1024..1025]
 r621: [1021..1022]
 r622: [1016..1017]
 r623: [1018..1020]
 r624: [1018..1019]
 r625: [1013..1015]
 r626: [1013..1014]
 r627: [1010..1011]
 r628: [1008..1009]
 r629: [1005..1006]
 r630: [1003..1004]
 r631: [998..999]
 r632: [1000..1001]
 r633: [996..997]
 r634: [984..985]
 r635: [970..971]
 r636: [968..969]
 r637: [956..957]
 r638: [952..953]
 r639: [954..955]
 r640: [948..949]
 r641: [950..951]
 r642: [944..945]
 r643: [946..947]
 r644: [942..943]
 r645: [939..940]
 r646: [932..933]
 r647: [930..931]
 r648: [925..926]
 r649: [910..911]
 r650: [907..908]
 r651: [899..900]
 r652: [897..898]
 r653: [890..891]
 r654: [875..876]
 r655: [872..873]
 r656: [863..864]
 r657: [861..862]
 r658: [854..855]
 r659: [839..840]
 r660: [836..837]
 r661: [827..828]
 r662: [816..817]
 r663: [814..815]
 r664: [812..813]
 r665: [807..808]
 r666: [799..800]
 r667: [797..798]
 r668: [792..793]
 r669: [784..785]
 r670: [782..783]
 r671: [777..778]
 r672: [769..770]
 r673: [767..768]
 r674: [761..763]
 r675: [760..762]
 r676: [751..752]
 r677: [748..749]
 r678: [740..741]
 r679: [738..739]
 r680: [735..736]
 r681: [727..728]
 r682: [725..726]
 r683: [722..723]
 r684: [714..715]
 r685: [712..713]
 r686: [710..711]
 r687: [700..701]
 r688: [705..706]
 r689: [698..699]
 r690: [691..692]
 r691: [685..686]
 r692: [683..684]
 r693: [676..677]
 r694: [670..671]
 r695: [668..669]
 r696: [661..662]
 r697: [655..656]
 r698: [652..653]
 r699: [650..651]
 r700: [648..649]
 r701: [646..647]
 r702: [644..645]
 r703: [642..643]
 r704: [632..633]
 r705: [637..638]
 r706: [629..631]
 r707: [629..630]
 r708: [626..627]
 r709: [620..621]
 r710: [616..617]
 r711: [618..619]
 r712: [612..613]
 r713: [614..615]
 r714: [608..609]
 r715: [610..611]
 r716: [606..607]
 r717: [600..601]
 r718: [591..592]
 r719: [589..590]
 r720: [580..581]
 r721: [574..575]
 r722: [564..565]
 r723: [562..563]
 r724: [553..554]
 r725: [547..548]
 r726: [536..537]
 r727: [534..535]
 r728: [525..526]
 r729: [519..520]
 r730: [508..509]
 r731: [506..507]
 r732: [499..500]
 r733: [497..498]
 r734: [495..496]
 r735: [492..493]
 r736: [419..420]
 r737: [417..418]
 r738: [414..415]
 r739: [410..411]
 r740: [408..409]
 r741: [394..395]
 r742: [392..393]
 r743: [386..387]
 r744: [378..379]
 r745: [374..375]
 r746: [376..377]
 r747: [372..373]
 r748: [369..370]
 r749: [367..368]
 r750: [364..365]
 r751: [362..363]
 r752: [359..360]
 r753: [488..489]
 r754: [485..486]
 r755: [481..482]
 r756: [479..480]
 r757: [476..477]
 r758: [472..473]
 r759: [470..471]
 r760: [456..457]
 r761: [454..455]
 r762: [448..449]
 r763: [440..441]
 r764: [436..437]
 r765: [438..439]
 r766: [434..435]
 r767: [431..432]
 r768: [429..430]
 r769: [426..427]
 r770: [424..425]
 r771: [421..422]
 r772: [357..358]
 r773: [354..355]
 r774: [351..352]
 r775: [348..349]
 r776: [335..336]
 r777: [332..333]
 r778: [329..330]
 r779: [322..323]
 r780: [308..309]
 r781: [313..314]
 r782: [306..307]
 r783: [303..304]
 r784: [300..301]
 r785: [297..298]
 r786: [290..291]
 r787: [275..276]
 r788: [273..274]
 r789: [270..271]
 r790: [267..268]
 r791: [264..265]
 r792: [257..258]
 r793: [242..243]
 r794: [240..241]
 r795: [237..238]
 r796: [230..231]
 r797: [232..233]
 r798: [228..229]
 r799: [225..226]
 r800: [222..223]
 r801: [213..214]
 r802: [215..216]
 r803: [206..207]
 r804: [208..209]
 r805: [184..186]
 r806: [184..185]
 r807: [153..154]
 r808: [177..178]
 r809: [179..180]
 r810: [173..174]
 r811: [171..172]
 r812: [169..170]
 r813: [166..168]
 r814: [165..167]
 r815: [162..164]
 r816: [161..163]
 r817: [158..160]
 r818: [157..159]
 r819: [155..156]
 r820: [151..152]
 r821: [146..147]
 r822: [148..149]
 r823: [144..145]
 r824: [139..140]
 r825: [141..142]
 r826: [137..138]
 r827: [132..133]
 r828: [134..135]
 r829: [130..131]
 r830: [125..126]
 r831: [127..128]
 r832: [123..124]
 r833: [120..121]
 r834: [115..116]
 r835: [113..114]
 r836: [110..111]
 r837: [105..106]
 r838: [103..104]
 r839: [100..101]
 r840: [98..99]
 r841: [95..96]
 r842: [93..94]
 r843: [90..91]
 r844: [85..86]
 r845: [83..84]
 r846: [80..81]
 r847: [75..76]
 r848: [73..74]
 r849: [70..71]
 r850: [68..69]
 r851: [65..66]
 r852: [63..64]
 r853: [60..61]
 r854: [55..56]
 r855: [53..54]
 r856: [50..51]
 r857: [45..46]
 r858: [43..44]
 r859: [40..41]
 r860: [38..39]
 r861: [35..36]
 r862: [33..34]
 r863: [30..31]
 r864: [25..26]
 r865: [23..24]
 r866: [20..21]
 r867: [15..16]
 r868: [13..14]
 r869: [10..11]
 r870: [8..9]
 r871: [5..6]
 r872: [0..1]
 r873: [1462..1464]
 r874: [1211..1213]
 r875: [1183..1185]
 r876: [1142..1143]
 r877: [1126..1128]
 r878: [1119..1121]
 r879: [1088..1090]
 r880: [1075..1077]
 r881: [1062..1064]
 r882: [987..989]
 r883: [928..929]
 r884: [913..914]
 r885: [893..894]
 r886: [878..879]
 r887: [857..858]
 r888: [842..843]
 r889: [823..825]
 r890: [810..811]
 r891: [795..796]
 r892: [780..781]
 r893: [765..766]
 r894: [755..757]
 r895: [702..704]
 r896: [694..696]
 r897: [679..681]
 r898: [664..666]
 r899: [634..636]
 r900: [583..584]
 r901: [556..557]
 r902: [528..529]
 r903: [406..407]
 r904: [397..398]
 r905: [390..391]
 r906: [380..381]
 r907: [468..469]
 r908: [459..460]
 r909: [452..453]
 r910: [442..443]
 r911: [339..341]
 r912: [325..326]
 r913: [310..312]
 r914: [293..294]
 r915: [277..279]
 r916: [260..261]
 r917: [244..246]
 r918: [1144..1148]
 r919: [758..764]
 r920: [382..389]
 r921: [399..405]
 r922: [444..451]
 r923: [461..467]
Compressing live ranges: from 1498 to 1260 - 84%
Ranges after the compression:
 r87: [1252..1253]
 r88: [1240..1243]
 r89: [1240..1241]
 r90: [1238..1239]
 r91: [1222..1223]
 r92: [1216..1217]
 r93: [1214..1215]
 r94: [1208..1209]
 r95: [1206..1207]
 r96: [1190..1197]
 r97: [1192..1195]
 r98: [1192..1193]
 r99: [1190..1191]
 r100: [1184..1185]
 r101: [1184..1185]
 r102: [1182..1183]
 r103: [1164..1169]
 r104: [1166..1167]
 r105: [1164..1165]
 r106: [1158..1159]
 r107: [1148..1153]
 r108: [1150..1151]
 r109: [1148..1149]
 r110: [1142..1143]
 r111: [1132..1137]
 r112: [1134..1135]
 r113: [1132..1133]
 r114: [1126..1127]
 r115: [1124..1125]
 r116: [1118..1119]
 r117: [1108..1113]
 r118: [1110..1111]
 r119: [1108..1109]
 r120: [1096..1099]
 r121: [1096..1097]
 r122: [1092..1095]
 r123: [1092..1093]
 r124: [1086..1087]
 r125: [1082..1085]
 r126: [1082..1083]
 r127: [1078..1081]
 r128: [1078..1079]
 r129: [1076..1077]
 r130: [1074..1075]
 r131: [1068..1069]
 r132: [1064..1067]
 r133: [1064..1065]
 r134: [1060..1063]
 r135: [1060..1061]
 r136: [1058..1059]
 r137: [1056..1057]
 r138: [1050..1051]
 r139: [1046..1049]
 r140: [1046..1047]
 r141: [1042..1045]
 r142: [1042..1043]
 r143: [1040..1041]
 r144: [1038..1039]
 r145: [1032..1033]
 r146: [1018..1031]
 r147: [1026..1029]
 r148: [1026..1027]
 r149: [1022..1025]
 r150: [1020..1021]
 r151: [1018..1019]
 r152: [1016..1017]
 r153: [1010..1011]
 r154: [996..1009]
 r155: [1004..1007]
 r156: [1004..1005]
 r157: [1000..1003]
 r158: [998..999]
 r159: [996..997]
 r160: [992..993]
 r161: [992..993]
 r162: [990..991]
 r163: [986..987]
 r164: [980..981]
 r165: [976..977]
 r166: [974..975]
 r168: [968..971]
 r169: [962..963]
 r170: [960..961]
 r171: [952..959]
 r172: [954..955]
 r173: [950..953]
 r174: [948..949]
 r175: [946..947]
 r176: [920..921]
 r177: [910..911]
 r178: [900..901]
 r179: [878..879]
 r180: [872..873]
 r181: [866..867]
 r182: [858..859]
 r183: [854..855]
 r184: [850..851]
 r185: [844..845]
 r186: [844..845]
 r187: [842..843]
 r188: [836..837]
 r189: [834..835]
 r190: [832..833]
 r191: [826..827]
 r192: [820..821]
 r193: [818..819]
 r194: [812..813]
 r195: [792..795]
 r196: [792..793]
 r197: [790..791]
 r198: [788..789]
 r199: [778..783]
 r200: [780..781]
 r201: [778..779]
 r202: [776..777]
 r203: [774..775]
 r204: [772..773]
 r205: [760..769]
 r206: [764..767]
 r207: [764..765]
 r208: [762..763]
 r209: [760..761]
 r210: [754..755]
 r211: [746..751]
 r212: [748..749]
 r213: [746..747]
 r214: [744..745]
 r215: [742..743]
 r216: [740..741]
 r217: [728..737]
 r218: [732..735]
 r219: [732..733]
 r220: [730..731]
 r221: [728..729]
 r222: [726..727]
 r223: [722..723]
 r224: [714..719]
 r225: [716..717]
 r226: [714..715]
 r227: [712..713]
 r228: [710..711]
 r229: [708..709]
 r230: [696..705]
 r231: [700..703]
 r232: [700..701]
 r233: [698..699]
 r234: [696..697]
 r235: [694..695]
 r236: [676..679]
 r237: [676..677]
 r238: [674..675]
 r239: [672..673]
 r240: [662..665]
 r241: [662..663]
 r242: [660..661]
 r243: [658..659]
 r244: [648..651]
 r245: [648..649]
 r246: [646..647]
 r247: [644..645]
 r249: [632..635]
 r250: [630..631]
 r251: [624..627]
 r252: [624..625]
 r253: [622..623]
 r254: [620..621]
 r255: [612..615]
 r256: [612..613]
 r257: [610..611]
 r258: [608..609]
 r259: [600..603]
 r260: [600..601]
 r261: [598..599]
 r262: [596..597]
 r263: [574..575]
 r264: [572..573]
 r265: [562..563]
 r266: [560..561]
 r267: [550..551]
 r268: [548..549]
 r269: [544..545]
 r270: [532..533]
 r271: [528..531]
 r272: [518..523]
 r273: [520..521]
 r274: [518..519]
 r275: [500..501]
 r276: [500..501]
 r277: [496..499]
 r278: [496..497]
 r279: [494..495]
 r280: [492..493]
 r281: [490..491]
 r282: [486..487]
 r283: [484..485]
 r284: [468..481]
 r285: [478..479]
 r286: [478..479]
 r287: [474..477]
 r288: [474..475]
 r289: [472..473]
 r290: [470..471]
 r291: [468..469]
 r292: [462..463]
 r293: [460..461]
 r294: [444..457]
 r295: [454..455]
 r296: [454..455]
 r297: [450..453]
 r298: [450..451]
 r299: [448..449]
 r300: [446..447]
 r301: [444..445]
 r302: [442..443]
 r303: [438..439]
 r304: [436..437]
 r305: [420..433]
 r306: [430..431]
 r307: [430..431]
 r308: [426..429]
 r309: [426..427]
 r310: [424..425]
 r311: [422..423]
 r312: [420..421]
 r313: [418..419]
 r314: [414..415]
 r315: [412..413]
 r316: [410..411]
 r317: [402..405]
 r318: [402..403]
 r319: [334..337]
 r320: [334..335]
 r322: [326..327]
 r323: [324..325]
 r324: [320..323]
 r325: [318..319]
 r327: [312..313]
 r328: [310..311]
 r329: [306..309]
 r330: [296..297]
 r331: [292..293]
 r332: [288..289]
 r333: [396..399]
 r334: [396..397]
 r335: [388..391]
 r336: [388..389]
 r338: [380..381]
 r339: [378..379]
 r340: [374..377]
 r341: [372..373]
 r343: [366..367]
 r344: [364..365]
 r345: [360..363]
 r346: [350..351]
 r347: [346..347]
 r348: [342..343]
 r349: [274..285]
 r350: [282..283]
 r351: [278..281]
 r352: [278..279]
 r353: [276..277]
 r354: [272..275]
 r355: [270..271]
 r356: [266..267]
 r357: [252..265]
 r358: [262..263]
 r359: [256..259]
 r360: [256..257]
 r361: [254..255]
 r362: [252..253]
 r363: [248..251]
 r364: [222..243]
 r365: [240..241]
 r366: [224..239]
 r367: [236..237]
 r368: [228..233]
 r369: [230..231]
 r370: [228..229]
 r371: [226..227]
 r372: [224..225]
 r373: [220..223]
 r374: [194..215]
 r375: [212..213]
 r376: [196..211]
 r377: [208..209]
 r378: [200..205]
 r379: [202..203]
 r380: [200..201]
 r381: [198..199]
 r382: [196..197]
 r383: [192..195]
 r384: [186..187]
 r385: [184..185]
 r386: [182..183]
 r387: [176..177]
 r388: [172..175]
 r389: [172..173]
 r390: [170..171]
 r391: [168..169]
 r392: [164..165]
 r393: [162..163]
 r394: [158..159]
 r395: [158..159]
 r396: [156..157]
 r397: [154..155]
 r398: [154..155]
 r399: [152..153]
 r400: [146..147]
 r401: [146..147]
 r402: [120..121]
 r403: [114..115]
 r404: [108..109]
 r405: [102..103]
 r406: [94..97]
 r407: [94..95]
 r408: [92..93]
 r409: [86..89]
 r410: [86..87]
 r411: [84..85]
 r412: [80..81]
 r413: [76..77]
 r414: [70..73]
 r415: [70..71]
 r416: [68..69]
 r417: [62..65]
 r418: [62..63]
 r419: [60..61]
 r420: [56..57]
 r421: [52..53]
 r422: [46..49]
 r423: [46..47]
 r424: [44..45]
 r425: [38..41]
 r426: [38..39]
 r427: [36..37]
 r428: [32..33]
 r429: [28..29]
 r430: [22..25]
 r431: [22..23]
 r432: [20..21]
 r433: [14..17]
 r434: [14..15]
 r435: [12..13]
 r436: [8..9]
 r437: [2..5]
 r438: [2..3]
 r439: [0..1]
 r440: [1182..1187]
 r441: [990..993]
 r442: [152..159]
 r443: [150..155]
 r444: [1228..1229]
 r445: [1224..1227]
 r446: [1226..1227]
 r447: [1224..1225]
 r448: [140..141]
 r449: [964..965]
 r450: [956..963]
 r451: [926..927]
 r452: [922..925]
 r453: [916..917]
 r454: [912..915]
 r455: [906..907]
 r456: [902..905]
 r457: [840..841]
 r458: [828..839]
 r459: [830..831]
 r460: [828..829]
 r461: [816..817]
 r462: [814..815]
 r463: [692..693]
 r464: [688..691]
 r465: [690..691]
 r466: [688..689]
 r467: [588..589]
 r468: [584..587]
 r469: [578..579]
 r470: [572..577]
 r471: [566..567]
 r472: [560..565]
 r473: [554..555]
 r474: [548..553]
 r475: [1258..1259]
 r476: [1256..1257]
 r477: [1254..1255]
 r478: [1250..1251]
 r479: [1252..1253]
 r480: [1248..1249]
 r481: [1246..1247]
 r482: [1244..1245]
 r483: [1242..1243]
 r484: [1236..1237]
 r485: [1234..1235]
 r486: [1232..1233]
 r487: [1230..1231]
 r488: [1220..1221]
 r489: [1218..1219]
 r490: [1212..1213]
 r491: [1214..1215]
 r492: [1210..1211]
 r493: [1204..1205]
 r494: [1206..1207]
 r495: [1202..1203]
 r496: [1202..1203]
 r497: [1200..1201]
 r498: [1198..1199]
 r499: [1196..1197]
 r500: [1194..1195]
 r501: [1188..1189]
 r502: [1186..1187]
 r503: [1180..1181]
 r504: [1178..1179]
 r505: [1176..1177]
 r506: [1174..1175]
 r507: [1172..1173]
 r508: [1170..1171]
 r509: [1170..1171]
 r510: [1168..1169]
 r511: [1168..1169]
 r512: [1162..1163]
 r513: [1160..1161]
 r514: [1160..1161]
 r515: [1156..1157]
 r516: [1158..1159]
 r517: [1154..1155]
 r518: [1154..1155]
 r519: [1152..1153]
 r520: [1152..1153]
 r521: [1146..1147]
 r522: [1144..1145]
 r523: [1144..1145]
 r524: [1140..1141]
 r525: [1142..1143]
 r526: [1138..1139]
 r527: [1138..1139]
 r528: [1136..1137]
 r529: [1136..1137]
 r530: [1130..1131]
 r531: [1128..1129]
 r532: [1128..1129]
 r533: [1122..1123]
 r534: [1124..1125]
 r535: [1120..1121]
 r536: [1120..1121]
 r537: [1116..1117]
 r538: [1118..1119]
 r539: [1114..1115]
 r540: [1114..1115]
 r541: [1112..1113]
 r542: [1112..1113]
 r543: [1106..1107]
 r544: [1104..1105]
 r545: [1102..1103]
 r546: [896..897]
 r547: [894..895]
 r548: [892..893]
 r549: [890..891]
 r550: [888..889]
 r551: [886..887]
 r552: [884..885]
 r553: [882..883]
 r554: [1100..1101]
 r555: [1098..1099]
 r556: [1094..1095]
 r557: [1090..1091]
 r558: [1088..1089]
 r559: [1084..1085]
 r560: [1080..1081]
 r561: [1072..1073]
 r562: [1070..1071]
 r563: [1066..1067]
 r564: [1062..1063]
 r565: [1054..1055]
 r566: [1052..1053]
 r567: [1048..1049]
 r568: [1044..1045]
 r569: [1036..1037]
 r570: [1034..1035]
 r571: [1032..1033]
 r572: [1030..1031]
 r573: [1028..1029]
 r574: [1024..1025]
 r575: [1014..1015]
 r576: [1016..1017]
 r577: [1012..1013]
 r578: [1010..1011]
 r579: [1008..1009]
 r580: [1006..1007]
 r581: [1002..1003]
 r582: [994..995]
 r583: [988..989]
 r584: [988..989]
 r585: [984..985]
 r586: [982..983]
 r587: [978..979]
 r588: [980..981]
 r589: [976..977]
 r590: [972..973]
 r591: [966..967]
 r592: [962..963]
 r593: [958..959]
 r594: [944..945]
 r595: [946..947]
 r596: [940..941]
 r597: [942..943]
 r598: [936..937]
 r599: [938..939]
 r600: [932..933]
 r601: [934..935]
 r602: [928..929]
 r603: [930..931]
 r604: [924..925]
 r605: [918..919]
 r606: [920..921]
 r607: [914..915]
 r608: [908..909]
 r609: [910..911]
 r610: [904..905]
 r611: [898..899]
 r612: [900..901]
 r613: [880..881]
 r614: [878..879]
 r615: [876..877]
 r616: [874..875]
 r617: [872..873]
 r618: [870..871]
 r619: [870..871]
 r620: [868..869]
 r621: [866..867]
 r622: [862..863]
 r623: [864..865]
 r624: [864..865]
 r625: [860..861]
 r626: [860..861]
 r627: [858..859]
 r628: [856..857]
 r629: [854..855]
 r630: [852..853]
 r631: [848..849]
 r632: [850..851]
 r633: [846..847]
 r634: [838..839]
 r635: [824..825]
 r636: [822..823]
 r637: [810..811]
 r638: [806..807]
 r639: [808..809]
 r640: [802..803]
 r641: [804..805]
 r642: [798..799]
 r643: [800..801]
 r644: [796..797]
 r645: [794..795]
 r646: [788..789]
 r647: [786..787]
 r648: [782..783]
 r649: [768..769]
 r650: [766..767]
 r651: [758..759]
 r652: [756..757]
 r653: [750..751]
 r654: [736..737]
 r655: [734..735]
 r656: [726..727]
 r657: [724..725]
 r658: [718..719]
 r659: [704..705]
 r660: [702..703]
 r661: [694..695]
 r662: [686..687]
 r663: [684..685]
 r664: [682..683]
 r665: [678..679]
 r666: [670..671]
 r667: [668..669]
 r668: [664..665]
 r669: [656..657]
 r670: [654..655]
 r671: [650..651]
 r672: [642..643]
 r673: [640..641]
 r674: [636..637]
 r675: [636..637]
 r676: [628..629]
 r677: [626..627]
 r678: [618..619]
 r679: [616..617]
 r680: [614..615]
 r681: [606..607]
 r682: [604..605]
 r683: [602..603]
 r684: [594..595]
 r685: [592..593]
 r686: [590..591]
 r687: [582..583]
 r688: [586..587]
 r689: [580..581]
 r690: [576..577]
 r691: [570..571]
 r692: [568..569]
 r693: [564..565]
 r694: [558..559]
 r695: [556..557]
 r696: [552..553]
 r697: [546..547]
 r698: [544..545]
 r699: [542..543]
 r700: [540..541]
 r701: [538..539]
 r702: [536..537]
 r703: [534..535]
 r704: [526..527]
 r705: [530..531]
 r706: [524..525]
 r707: [524..525]
 r708: [522..523]
 r709: [516..517]
 r710: [512..513]
 r711: [514..515]
 r712: [508..509]
 r713: [510..511]
 r714: [504..505]
 r715: [506..507]
 r716: [502..503]
 r717: [498..499]
 r718: [490..491]
 r719: [488..489]
 r720: [480..481]
 r721: [476..477]
 r722: [466..467]
 r723: [464..465]
 r724: [456..457]
 r725: [452..453]
 r726: [442..443]
 r727: [440..441]
 r728: [432..433]
 r729: [428..429]
 r730: [418..419]
 r731: [416..417]
 r732: [410..411]
 r733: [408..409]
 r734: [406..407]
 r735: [404..405]
 r736: [340..341]
 r737: [338..339]
 r738: [336..337]
 r739: [332..333]
 r740: [330..331]
 r741: [318..319]
 r742: [316..317]
 r743: [312..313]
 r744: [304..305]
 r745: [300..301]
 r746: [302..303]
 r747: [298..299]
 r748: [296..297]
 r749: [294..295]
 r750: [292..293]
 r751: [290..291]
 r752: [288..289]
 r753: [400..401]
 r754: [398..399]
 r755: [394..395]
 r756: [392..393]
 r757: [390..391]
 r758: [386..387]
 r759: [384..385]
 r760: [372..373]
 r761: [370..371]
 r762: [366..367]
 r763: [358..359]
 r764: [354..355]
 r765: [356..357]
 r766: [352..353]
 r767: [350..351]
 r768: [348..349]
 r769: [346..347]
 r770: [344..345]
 r771: [342..343]
 r772: [286..287]
 r773: [284..285]
 r774: [282..283]
 r775: [280..281]
 r776: [268..269]
 r777: [266..267]
 r778: [264..265]
 r779: [258..259]
 r780: [246..247]
 r781: [250..251]
 r782: [244..245]
 r783: [242..243]
 r784: [240..241]
 r785: [238..239]
 r786: [232..233]
 r787: [218..219]
 r788: [216..217]
 r789: [214..215]
 r790: [212..213]
 r791: [210..211]
 r792: [204..205]
 r793: [190..191]
 r794: [188..189]
 r795: [186..187]
 r796: [180..181]
 r797: [182..183]
 r798: [178..179]
 r799: [176..177]
 r800: [174..175]
 r801: [166..167]
 r802: [168..169]
 r803: [160..161]
 r804: [162..163]
 r805: [148..149]
 r806: [148..149]
 r807: [124..125]
 r808: [142..143]
 r809: [144..145]
 r810: [138..139]
 r811: [136..137]
 r812: [134..135]
 r813: [132..133]
 r814: [132..133]
 r815: [130..131]
 r816: [130..131]
 r817: [128..129]
 r818: [128..129]
 r819: [126..127]
 r820: [122..123]
 r821: [118..119]
 r822: [120..121]
 r823: [116..117]
 r824: [112..113]
 r825: [114..115]
 r826: [110..111]
 r827: [106..107]
 r828: [108..109]
 r829: [104..105]
 r830: [100..101]
 r831: [102..103]
 r832: [98..99]
 r833: [96..97]
 r834: [92..93]
 r835: [90..91]
 r836: [88..89]
 r837: [84..85]
 r838: [82..83]
 r839: [80..81]
 r840: [78..79]
 r841: [76..77]
 r842: [74..75]
 r843: [72..73]
 r844: [68..69]
 r845: [66..67]
 r846: [64..65]
 r847: [60..61]
 r848: [58..59]
 r849: [56..57]
 r850: [54..55]
 r851: [52..53]
 r852: [50..51]
 r853: [48..49]
 r854: [44..45]
 r855: [42..43]
 r856: [40..41]
 r857: [36..37]
 r858: [34..35]
 r859: [32..33]
 r860: [30..31]
 r861: [28..29]
 r862: [26..27]
 r863: [24..25]
 r864: [20..21]
 r865: [18..19]
 r866: [16..17]
 r867: [12..13]
 r868: [10..11]
 r869: [8..9]
 r870: [6..7]
 r871: [4..5]
 r872: [0..1]
 r873: [1228..1229]
 r874: [1022..1023]
 r875: [1000..1001]
 r876: [968..969]
 r877: [956..957]
 r878: [950..951]
 r879: [922..923]
 r880: [912..913]
 r881: [902..903]
 r882: [840..841]
 r883: [784..785]
 r884: [770..771]
 r885: [752..753]
 r886: [738..739]
 r887: [720..721]
 r888: [706..707]
 r889: [692..693]
 r890: [680..681]
 r891: [666..667]
 r892: [652..653]
 r893: [638..639]
 r894: [632..633]
 r895: [584..585]
 r896: [578..579]
 r897: [566..567]
 r898: [554..555]
 r899: [528..529]
 r900: [482..483]
 r901: [458..459]
 r902: [434..435]
 r903: [328..329]
 r904: [320..321]
 r905: [314..315]
 r906: [306..307]
 r907: [382..383]
 r908: [374..375]
 r909: [368..369]
 r910: [360..361]
 r911: [272..273]
 r912: [260..261]
 r913: [248..249]
 r914: [234..235]
 r915: [220..221]
 r916: [206..207]
 r917: [192..193]
 r918: [970..973]
 r919: [634..637]
 r920: [308..313]
 r921: [322..327]
 r922: [362..367]
 r923: [376..381]

********** Assignment #1: **********

	 Assigning to 873 (cl=SSE_REGS, orig=444, freq=3, tfirst=873, tfreq=3)...
	   Assign 22 to reload r873 (freq=3)
	 Assigning to 874 (cl=SSE_REGS, orig=574, freq=3, tfirst=874, tfreq=3)...
	   Assign 23 to reload r874 (freq=3)
	 Assigning to 875 (cl=SSE_REGS, orig=581, freq=3, tfirst=875, tfreq=3)...
	   Assign 23 to reload r875 (freq=3)
	 Assigning to 877 (cl=SSE_REGS, orig=593, freq=3, tfirst=877, tfreq=3)...
	   Assign 22 to reload r877 (freq=3)
	 Assigning to 878 (cl=SSE_REGS, orig=171, freq=3, tfirst=878, tfreq=3)...
	   Assign 23 to reload r878 (freq=3)
	 Assigning to 879 (cl=SSE_REGS, orig=604, freq=3, tfirst=879, tfreq=3)...
	   Assign 22 to reload r879 (freq=3)
	 Assigning to 880 (cl=SSE_REGS, orig=607, freq=3, tfirst=880, tfreq=3)...
	   Assign 22 to reload r880 (freq=3)
	 Assigning to 881 (cl=SSE_REGS, orig=610, freq=3, tfirst=881, tfreq=3)...
	   Assign 22 to reload r881 (freq=3)
	 Assigning to 882 (cl=SSE_REGS, orig=457, freq=3, tfirst=882, tfreq=3)...
	   Assign 22 to reload r882 (freq=3)
	 Assigning to 883 (cl=SSE_REGS, orig=647, freq=3, tfirst=883, tfreq=3)...
	   Assign 22 to reload r883 (freq=3)
	 Assigning to 884 (cl=SSE_REGS, orig=204, freq=3, tfirst=884, tfreq=3)...
	   Assign 22 to reload r884 (freq=3)
	 Assigning to 885 (cl=SSE_REGS, orig=210, freq=3, tfirst=885, tfreq=3)...
	   Assign 22 to reload r885 (freq=3)
	 Assigning to 886 (cl=SSE_REGS, orig=216, freq=3, tfirst=886, tfreq=3)...
	   Assign 22 to reload r886 (freq=3)
	 Assigning to 887 (cl=SSE_REGS, orig=223, freq=3, tfirst=887, tfreq=3)...
	   Assign 22 to reload r887 (freq=3)
	 Assigning to 888 (cl=SSE_REGS, orig=229, freq=3, tfirst=888, tfreq=3)...
	   Assign 22 to reload r888 (freq=3)
	 Assigning to 889 (cl=SSE_REGS, orig=463, freq=3, tfirst=889, tfreq=3)...
	   Assign 22 to reload r889 (freq=3)
	 Assigning to 890 (cl=SSE_REGS, orig=664, freq=3, tfirst=890, tfreq=3)...
	   Assign 22 to reload r890 (freq=3)
	 Assigning to 891 (cl=SSE_REGS, orig=667, freq=3, tfirst=891, tfreq=3)...
	   Assign 22 to reload r891 (freq=3)
	 Assigning to 892 (cl=SSE_REGS, orig=670, freq=3, tfirst=892, tfreq=3)...
	   Assign 22 to reload r892 (freq=3)
	 Assigning to 919 (cl=ALL_SSE_REGS, orig=248, freq=2, tfirst=893, tfreq=3)...
	 Assigning to 893 (cl=ALL_SSE_REGS, orig=248, freq=2, tfirst=893, tfreq=3)...
	   Assign 25 to reload r893 (freq=2)
	Hard reg 25 is preferable by r919 with profit 1
	Hard reg 21 is preferable by r894 with profit 1
	Hard reg 25 is preferable by r894 with profit 1
	 Assigning to 894 (cl=SSE_REGS, orig=248, freq=3, tfirst=893, tfreq=3)...
	   Assign 25 to reload r894 (freq=3)
	Hard reg 25 is preferable by r919 with profit 2
	 Assigning to 895 (cl=SSE_REGS, orig=688, freq=3, tfirst=895, tfreq=3)...
	   Assign 22 to reload r895 (freq=3)
	 Assigning to 896 (cl=SSE_REGS, orig=469, freq=3, tfirst=896, tfreq=3)...
	   Assign 22 to reload r896 (freq=3)
	 Assigning to 897 (cl=SSE_REGS, orig=471, freq=3, tfirst=897, tfreq=3)...
	   Assign 22 to reload r897 (freq=3)
	 Assigning to 898 (cl=SSE_REGS, orig=473, freq=3, tfirst=898, tfreq=3)...
	   Assign 22 to reload r898 (freq=3)
	 Assigning to 899 (cl=SSE_REGS, orig=705, freq=3, tfirst=899, tfreq=3)...
	   Assign 22 to reload r899 (freq=3)
	 Assigning to 900 (cl=SSE_REGS, orig=283, freq=3, tfirst=900, tfreq=3)...
	   Assign 22 to reload r900 (freq=3)
	 Assigning to 901 (cl=SSE_REGS, orig=293, freq=3, tfirst=901, tfreq=3)...
	   Assign 22 to reload r901 (freq=3)
	 Assigning to 902 (cl=SSE_REGS, orig=304, freq=3, tfirst=902, tfreq=3)...
	   Assign 22 to reload r902 (freq=3)
	 Assigning to 911 (cl=SSE_REGS, orig=349, freq=3, tfirst=911, tfreq=3)...
	   Assign 22 to reload r911 (freq=3)
	 Assigning to 912 (cl=SSE_REGS, orig=358, freq=3, tfirst=912, tfreq=3)...
	   Assign 23 to reload r912 (freq=3)
	 Assigning to 913 (cl=SSE_REGS, orig=781, freq=3, tfirst=913, tfreq=3)...
	   Assign 22 to reload r913 (freq=3)
	 Assigning to 914 (cl=SSE_REGS, orig=367, freq=3, tfirst=914, tfreq=3)...
	   Assign 23 to reload r914 (freq=3)
	 Assigning to 915 (cl=SSE_REGS, orig=364, freq=3, tfirst=915, tfreq=3)...
	   Assign 24 to reload r915 (freq=3)
	 Assigning to 916 (cl=SSE_REGS, orig=377, freq=3, tfirst=916, tfreq=3)...
	   Assign 23 to reload r916 (freq=3)
	 Assigning to 917 (cl=SSE_REGS, orig=374, freq=3, tfirst=917, tfreq=3)...
	   Assign 24 to reload r917 (freq=3)
	 Assigning to 918 (cl=SSE_REGS, orig=167, freq=2, tfirst=876, tfreq=2)...
	 Assigning to 876 (cl=SSE_REGS, orig=167, freq=2, tfirst=876, tfreq=2)...
	   Assign 26 to optional reload r876 (freq=2)
	Hard reg 21 is preferable by r918 with profit 1
	Hard reg 26 is preferable by r918 with profit 1
	 Assigning to 921 (cl=ALL_SSE_REGS, orig=321, freq=2, tfirst=903, tfreq=2)...
	 Assigning to 903 (cl=ALL_SSE_REGS, orig=321, freq=2, tfirst=903, tfreq=2)...
	   Assign 27 to reload r903 (freq=2)
	Hard reg 27 is preferable by r921 with profit 1
	Hard reg 27 is preferable by r904 with profit 1
	 Assigning to 904 (cl=SSE_REGS, orig=321, freq=2, tfirst=903, tfreq=2)...
	   Assign 27 to optional reload r904 (freq=2)
	Hard reg 27 is preferable by r921 with profit 2
	 Assigning to 920 (cl=ALL_SSE_REGS, orig=326, freq=2, tfirst=905, tfreq=2)...
	 Assigning to 905 (cl=ALL_SSE_REGS, orig=326, freq=2, tfirst=905, tfreq=2)...
	   Assign 28 to reload r905 (freq=2)
	Hard reg 28 is preferable by r920 with profit 1
	Hard reg 28 is preferable by r906 with profit 1
	 Assigning to 906 (cl=SSE_REGS, orig=326, freq=2, tfirst=905, tfreq=2)...
	   Assign 28 to optional reload r906 (freq=2)
	Hard reg 28 is preferable by r920 with profit 2
	 Assigning to 923 (cl=ALL_SSE_REGS, orig=337, freq=2, tfirst=907, tfreq=2)...
	 Assigning to 907 (cl=ALL_SSE_REGS, orig=337, freq=2, tfirst=907, tfreq=2)...
	   Assign 26 to reload r907 (freq=2)
	Hard reg 26 is preferable by r923 with profit 1
	Hard reg 26 is preferable by r908 with profit 1
	 Assigning to 908 (cl=SSE_REGS, orig=337, freq=2, tfirst=907, tfreq=2)...
	   Assign 26 to optional reload r908 (freq=2)
	Hard reg 26 is preferable by r923 with profit 2
	 Assigning to 922 (cl=ALL_SSE_REGS, orig=342, freq=2, tfirst=909, tfreq=2)...
	 Assigning to 909 (cl=ALL_SSE_REGS, orig=342, freq=2, tfirst=909, tfreq=2)...
	   Assign 27 to reload r909 (freq=2)
	Hard reg 27 is preferable by r922 with profit 1
	Hard reg 27 is preferable by r910 with profit 1
	 Assigning to 910 (cl=SSE_REGS, orig=342, freq=2, tfirst=909, tfreq=2)...
	   Assign 27 to optional reload r910 (freq=2)
	Hard reg 27 is preferable by r922 with profit 2
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
 1125: r876:SF=r167:SF
      REG_DEAD r167:SF
   Insn after restoring regs:
  299: r167:SF=r166:SF
      REG_DEAD r166:SF
   Insn after restoring regs:
 1159: r894:SF=r248:SF
      REG_DEAD r248:SF
   Insn after restoring regs:
 1158: r248:SF=r893:SF
      REG_DEAD r893:SF
   Insn after restoring regs:
 1180: r906:SF=r326:SF
      REG_DEAD r326:SF
   Insn after restoring regs:
 1179: r326:SF=r905:SF
      REG_DEAD r905:SF
   Insn after restoring regs:
 1178: r904:SF=r321:SF
      REG_DEAD r321:SF
   Insn after restoring regs:
 1177: r321:SF=r903:SF
      REG_DEAD r903:SF
   Insn after restoring regs:
 1184: r910:SF=r342:SF
      REG_DEAD r342:SF
   Insn after restoring regs:
 1183: r342:SF=r909:SF
      REG_DEAD r909:SF
   Insn after restoring regs:
 1182: r908:SF=r337:SF
      REG_DEAD r337:SF
   Insn after restoring regs:
 1181: r337:SF=r907:SF
      REG_DEAD r907:SF
Remove optional reload reg 876
  Restoring original insn:
  304: r591:SF=r168:SF*r167:SF
      REG_DEAD r167:SF
      REG_DEAD r168:SF
  Deleting move 1125
 1125: r876:SF=r167:SF
      REG_DEAD r167:SF
deleting insn with uid = 1125.
Remove optional reload reg 904
  Restoring original insn:
  715: r325:SF=r324:SF*r321:SF
      REG_DEAD r321:SF
      REG_DEAD r324:SF
  Deleting move 1178
 1178: r904:SF=r321:SF
      REG_DEAD r321:SF
deleting insn with uid = 1178.
Remove optional reload reg 906
  Restoring original insn:
  726: r744:SF=r329:SF*r326:SF
      REG_DEAD r326:SF
      REG_DEAD r329:SF
  Deleting move 1180
 1180: r906:SF=r326:SF
      REG_DEAD r326:SF
deleting insn with uid = 1180.
Remove optional reload reg 908
  Restoring original insn:
  772: r341:SF=r340:SF*r337:SF
      REG_DEAD r337:SF
      REG_DEAD r340:SF
  Deleting move 1182
 1182: r908:SF=r337:SF
      REG_DEAD r337:SF
deleting insn with uid = 1182.
Remove optional reload reg 910
  Restoring original insn:
  783: r763:SF=r345:SF*r342:SF
      REG_DEAD r342:SF
      REG_DEAD r345:SF
  Deleting move 1184
 1184: r910:SF=r342:SF
      REG_DEAD r342:SF
deleting insn with uid = 1184.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 783:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=924 from oldreg=342, assigning class SSE_REGS to r924
      Making reload reg 924 for reg 342 optional
  783: r763:SF=r345:SF*r924:SF
      REG_DEAD r342:SF
      REG_DEAD r345:SF
    Inserting insn reload before:
 1205: r924:SF=r342:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1205:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 772:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=925 from oldreg=337, assigning class SSE_REGS to r925
      Making reload reg 925 for reg 337 optional
  772: r341:SF=r340:SF*r925:SF
      REG_DEAD r337:SF
      REG_DEAD r340:SF
    Inserting insn reload before:
 1206: r925:SF=r337:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1206:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 726:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=926 from oldreg=326, assigning class SSE_REGS to r926
      Making reload reg 926 for reg 326 optional
  726: r744:SF=r329:SF*r926:SF
      REG_DEAD r326:SF
      REG_DEAD r329:SF
    Inserting insn reload before:
 1207: r926:SF=r326:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1207:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=927 from oldreg=321, assigning class SSE_REGS to r927
      Making reload reg 927 for reg 321 optional
  715: r325:SF=r324:SF*r927:SF
      REG_DEAD r321:SF
      REG_DEAD r324:SF
    Inserting insn reload before:
 1208: r927:SF=r321:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1208:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=928 from oldreg=167, assigning class SSE_REGS to r928
      Making reload reg 928 for reg 167 optional
  304: r591:SF=r168:SF*r928:SF
      REG_DEAD r167:SF
      REG_DEAD r168:SF
    Inserting insn reload before:
 1209: r928:SF=r167:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1209:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=929 from oldreg=167, assigning class SSE_REGS to inheritance r929
    Original reg change 167->929 (bb11):
  299: r929:SF=r166:SF
      REG_DEAD r166:SF
    Add original<-inheritance after:
 1210: r167:SF=r929:SF

    Inheritance reuse change 167->929 (bb11):
 1209: r928:SF=r929:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1210: r167:SF=r929:SF
deleting insn with uid = 1210.
EBB 12
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=930 from oldreg=248, assigning class ALL_SSE_REGS to inheritance r930
    Original reg change 248->930 (bb12):
 1158: r930:SF=r893:SF
      REG_DEAD r893:SF
    Add original<-inheritance after:
 1211: r248:SF=r930:SF

    Inheritance reuse change 248->930 (bb12):
 1159: r894:SF=r930:SF
      REG_DEAD r930:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1211: r248:SF=r930:SF
deleting insn with uid = 1211.
EBB 13
EBB 14
EBB 15
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=931 from oldreg=326, assigning class ALL_SSE_REGS to inheritance r931
    Original reg change 326->931 (bb15):
 1179: r931:SF=r905:SF
      REG_DEAD r905:SF
    Add original<-inheritance after:
 1212: r326:SF=r931:SF

    Inheritance reuse change 326->931 (bb15):
 1207: r926:SF=r931:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=932 from oldreg=321, assigning class ALL_SSE_REGS to inheritance r932
    Original reg change 321->932 (bb15):
 1177: r932:SF=r903:SF
      REG_DEAD r903:SF
    Add original<-inheritance after:
 1213: r321:SF=r932:SF

    Inheritance reuse change 321->932 (bb15):
 1208: r927:SF=r932:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1212: r326:SF=r931:SF
deleting insn with uid = 1212.
	    Removing dead insn:
  1213: r321:SF=r932:SF
deleting insn with uid = 1213.
EBB 16
EBB 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=933 from oldreg=342, assigning class ALL_SSE_REGS to inheritance r933
    Original reg change 342->933 (bb17):
 1183: r933:SF=r909:SF
      REG_DEAD r909:SF
    Add original<-inheritance after:
 1214: r342:SF=r933:SF

    Inheritance reuse change 342->933 (bb17):
 1205: r924:SF=r933:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=934 from oldreg=337, assigning class ALL_SSE_REGS to inheritance r934
    Original reg change 337->934 (bb17):
 1181: r934:SF=r907:SF
      REG_DEAD r907:SF
    Add original<-inheritance after:
 1215: r337:SF=r934:SF

    Inheritance reuse change 337->934 (bb17):
 1206: r925:SF=r934:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1214: r342:SF=r933:SF
deleting insn with uid = 1214.
	    Removing dead insn:
  1215: r337:SF=r934:SF
deleting insn with uid = 1215.
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 27
EBB 25
EBB 26

********** Pseudo live ranges #2: **********

  BB 26
   Insn 1104: point = 0, n_alt = -1
   Insn 1082: point = 0, n_alt = 8
   Insn 1081: point = 1, n_alt = 3
   Insn 1080: point = 2, n_alt = 1
   Insn 1079: point = 4, n_alt = 1
   Insn 1078: point = 6, n_alt = 7
   Insn 1077: point = 7, n_alt = 7
   Insn 1076: point = 9, n_alt = 3
   Insn 1075: point = 10, n_alt = 8
   Insn 1074: point = 11, n_alt = 3
   Insn 1073: point = 12, n_alt = 1
   Insn 1072: point = 14, n_alt = 7
   Insn 1071: point = 15, n_alt = 8
   Insn 1070: point = 16, n_alt = 3
   Insn 1069: point = 17, n_alt = 1
   Insn 1068: point = 19, n_alt = 1
   Insn 1067: point = 21, n_alt = 7
   Insn 1066: point = 22, n_alt = 7
   Insn 1065: point = 24, n_alt = 3
   Insn 1064: point = 25, n_alt = 8
   Insn 1063: point = 26, n_alt = 3
   Insn 1062: point = 27, n_alt = 1
   Insn 1061: point = 29, n_alt = 1
   Insn 1060: point = 31, n_alt = 7
   Insn 1059: point = 32, n_alt = 7
   Insn 1058: point = 34, n_alt = 3
   Insn 1057: point = 35, n_alt = 8
   Insn 1056: point = 36, n_alt = 3
   Insn 1055: point = 37, n_alt = 1
   Insn 1054: point = 39, n_alt = 7
   Insn 1053: point = 40, n_alt = 8
   Insn 1052: point = 41, n_alt = 3
   Insn 1051: point = 42, n_alt = 1
   Insn 1050: point = 44, n_alt = 7
   Insn 1049: point = 45, n_alt = 8
   Insn 1048: point = 46, n_alt = 3
   Insn 1047: point = 47, n_alt = 1
   Insn 1046: point = 49, n_alt = 1
   Insn 1045: point = 51, n_alt = 7
   Insn 1044: point = 52, n_alt = 7
   Insn 1043: point = 54, n_alt = 3
   Insn 1042: point = 55, n_alt = 8
   Insn 1041: point = 56, n_alt = 3
   Insn 1040: point = 57, n_alt = 1
   Insn 1039: point = 59, n_alt = 1
   Insn 1038: point = 61, n_alt = 7
   Insn 1037: point = 62, n_alt = 7
   Insn 1036: point = 64, n_alt = 3
   Insn 1035: point = 65, n_alt = 8
   Insn 1034: point = 66, n_alt = 3
   Insn 1033: point = 67, n_alt = 1
   Insn 1032: point = 69, n_alt = 7
   Insn 1031: point = 70, n_alt = 8
   Insn 1030: point = 71, n_alt = 3
   Insn 1029: point = 72, n_alt = 1
   Insn 1028: point = 74, n_alt = 7
   Insn 1027: point = 75, n_alt = 8
   Insn 1026: point = 76, n_alt = 3
   Insn 1025: point = 77, n_alt = 1
   Insn 1024: point = 79, n_alt = 1
   Insn 1023: point = 81, n_alt = 7
   Insn 1022: point = 82, n_alt = 7
   Insn 1021: point = 84, n_alt = 3
   Insn 1020: point = 85, n_alt = 8
   Insn 1019: point = 86, n_alt = 3
   Insn 1018: point = 87, n_alt = 1
   Insn 1017: point = 89, n_alt = 1
   Insn 1016: point = 91, n_alt = 7
   Insn 1015: point = 92, n_alt = 7
   Insn 1014: point = 94, n_alt = 3
   Insn 1013: point = 95, n_alt = 8
   Insn 1012: point = 96, n_alt = 3
   Insn 1011: point = 97, n_alt = 1
   Insn 1010: point = 99, n_alt = 7
   Insn 1009: point = 100, n_alt = 8
   Insn 1008: point = 101, n_alt = 3
   Insn 1007: point = 102, n_alt = 1
   Insn 1006: point = 104, n_alt = 7
   Insn 1005: point = 105, n_alt = 8
   Insn 1004: point = 106, n_alt = 3
   Insn 1003: point = 107, n_alt = 1
   Insn 1002: point = 109, n_alt = 1
   Insn 1001: point = 111, n_alt = 7
   Insn 1000: point = 112, n_alt = 7
   Insn 999: point = 114, n_alt = 3
   Insn 998: point = 115, n_alt = 8
   Insn 997: point = 116, n_alt = 3
   Insn 996: point = 117, n_alt = 1
   Insn 995: point = 119, n_alt = 1
   Insn 994: point = 121, n_alt = 7
   Insn 993: point = 122, n_alt = 7
   Insn 992: point = 124, n_alt = 3
   Insn 991: point = 125, n_alt = 8
   Insn 990: point = 126, n_alt = 0
   Insn 989: point = 128, n_alt = 2
   Insn 988: point = 129, n_alt = 2
   Insn 987: point = 131, n_alt = 7
   Insn 986: point = 132, n_alt = 8
   Insn 985: point = 133, n_alt = 0
   Insn 984: point = 135, n_alt = 2
   Insn 983: point = 136, n_alt = 2
   Insn 982: point = 138, n_alt = 7
   Insn 981: point = 139, n_alt = 8
   Insn 980: point = 140, n_alt = 0
   Insn 979: point = 142, n_alt = 2
   Insn 978: point = 143, n_alt = 2
   Insn 977: point = 145, n_alt = 7
   Insn 976: point = 146, n_alt = 8
   Insn 975: point = 147, n_alt = 0
   Insn 974: point = 149, n_alt = 2
   Insn 973: point = 150, n_alt = 2
   Insn 972: point = 152, n_alt = 7
  BB 23
   Insn 1111: point = 153, n_alt = -1
   Insn 922: point = 153, n_alt = 1
   Insn 921: point = 154, n_alt = 3
  BB 25
   Insn 969: point = 155, n_alt = 0
   Insn 968: point = 155, n_alt = -1
   Insn 967: point = 156, n_alt = 3
   Insn 966: point = 157, n_alt = 0
   Insn 965: point = 157, n_alt = -1
   Insn 964: point = 158, n_alt = -1
   Insn 963: point = 159, n_alt = 0
   Insn 962: point = 159, n_alt = 3
   Insn 961: point = 160, n_alt = 3
   Insn 960: point = 161, n_alt = 0
   Insn 959: point = 161, n_alt = -1
   Insn 958: point = 162, n_alt = -1
   Insn 957: point = 163, n_alt = 0
   Insn 956: point = 163, n_alt = 3
   Insn 955: point = 164, n_alt = 3
   Insn 954: point = 165, n_alt = 0
   Insn 953: point = 165, n_alt = -1
   Insn 952: point = 166, n_alt = -1
   Insn 951: point = 167, n_alt = 0
   Insn 950: point = 167, n_alt = 3
   Insn 949: point = 168, n_alt = 3
   Insn 948: point = 169, n_alt = 0
   Insn 947: point = 169, n_alt = -1
   Insn 946: point = 170, n_alt = 4
   Insn 945: point = 170, n_alt = 0
   Insn 944: point = 170, n_alt = 3
   Insn 943: point = 171, n_alt = 0
   Insn 942: point = 171, n_alt = -1
   Insn 941: point = 172, n_alt = 3
   Insn 940: point = 173, n_alt = 1
   Insn 939: point = 173, n_alt = 1
   Insn 938: point = 173, n_alt = 1
   Insn 937: point = 173, n_alt = 5
   Insn 936: point = 174, n_alt = 4
  BB 27
   Insn 1117: point = 175, n_alt = -1
  BB 5
   Insn 93: point = 175, n_alt = -1
   Insn 92: point = 175, n_alt = 0
   Insn 91: point = 176, n_alt = 0
   Insn 90: point = 177, n_alt = 0
  BB 24
   Insn 1113: point = 177, n_alt = -1
   Insn 930: point = 177, n_alt = 1
   Insn 929: point = 177, n_alt = 8
   Insn 928: point = 178, n_alt = 1
   Insn 927: point = 180, n_alt = 7
  BB 22
   Insn 916: point = 181, n_alt = -1
   Insn 915: point = 181, n_alt = 1
   Insn 914: point = 182, n_alt = 7
   Insn 913: point = 183, n_alt = 1
   Insn 912: point = 185, n_alt = 2
   Insn 911: point = 186, n_alt = 7
   Insn 910: point = 187, n_alt = 8
  BB 21
   Insn 9: point = 189, n_alt = -1
  BB 20
   Insn 906: point = 192, n_alt = -1
   Insn 905: point = 192, n_alt = 0
   Insn 904: point = 193, n_alt = 0
   Insn 903: point = 195, n_alt = 0
   Insn 902: point = 196, n_alt = 1
   Insn 901: point = 196, n_alt = 0
   Insn 900: point = 197, n_alt = 1
   Insn 899: point = 197, n_alt = 7
  BB 19
   Insn 896: point = 199, n_alt = 7
  BB 18
   Insn 894: point = 200, n_alt = -1
   Insn 893: point = 200, n_alt = 0
   Insn 892: point = 201, n_alt = 0
   Insn 891: point = 203, n_alt = 0
   Insn 890: point = 204, n_alt = 1
   Insn 889: point = 204, n_alt = 0
   Insn 888: point = 205, n_alt = 1
   Insn 887: point = 205, n_alt = 7
   Insn 886: point = 206, n_alt = 8
   Insn 885: point = 207, n_alt = 0
   Insn 884: point = 209, n_alt = 2
   Insn 883: point = 210, n_alt = 2
   Insn 882: point = 212, n_alt = 7
   Insn 881: point = 213, n_alt = 8
   Insn 880: point = 214, n_alt = 0
   Insn 879: point = 216, n_alt = 2
   Insn 878: point = 217, n_alt = 1
   Insn 877: point = 219, n_alt = 1
   Insn 876: point = 221, n_alt = 7
   Insn 875: point = 223, n_alt = 3
   Insn 874: point = 224, n_alt = 1
   Insn 873: point = 226, n_alt = 7
   Insn 872: point = 227, n_alt = 7
   Insn 871: point = 229, n_alt = 3
   Insn 870: point = 230, n_alt = 8
   Insn 869: point = 231, n_alt = 0
   Insn 868: point = 233, n_alt = 2
   Insn 867: point = 234, n_alt = 1
   Insn 866: point = 236, n_alt = 1
   Insn 865: point = 238, n_alt = 7
   Insn 864: point = 239, n_alt = 7
   Insn 863: point = 241, n_alt = 3
   Insn 862: point = 242, n_alt = 8
   Insn 1198: point = 243, n_alt = -1
	Hard reg 21 is preferable by r917 with profit 1
   Insn 861: point = 245, n_alt = 2
   Insn 1197: point = 246, n_alt = -1
	Hard reg 21 is preferable by r917 with profit 1
	Hard reg 24 is preferable by r917 with profit 1
   Insn 860: point = 248, n_alt = 1
   Insn 859: point = 250, n_alt = -1
   Insn 858: point = 252, n_alt = 1
   Insn 857: point = 254, n_alt = 1
   Insn 856: point = 256, n_alt = 7
   Insn 855: point = 258, n_alt = 3
   Insn 1196: point = 259, n_alt = -1
	Hard reg 23 is preferable by r916 with profit 1
   Insn 854: point = 261, n_alt = 1
   Insn 1195: point = 261, n_alt = -1
	Hard reg 23 is preferable by r916 with profit 1
	Hard reg 22 is preferable by r916 with profit 1
   Insn 853: point = 263, n_alt = 7
   Insn 852: point = 265, n_alt = 3
   Insn 851: point = 266, n_alt = 1
   Insn 850: point = 268, n_alt = 7
   Insn 849: point = 269, n_alt = 7
   Insn 848: point = 271, n_alt = 3
   Insn 847: point = 272, n_alt = 7
   Insn 846: point = 274, n_alt = 3
   Insn 845: point = 275, n_alt = 8
   Insn 1194: point = 276, n_alt = -1
	Hard reg 21 is preferable by r915 with profit 1
   Insn 844: point = 278, n_alt = 2
   Insn 1193: point = 279, n_alt = -1
	Hard reg 21 is preferable by r915 with profit 1
	Hard reg 24 is preferable by r915 with profit 1
   Insn 843: point = 281, n_alt = 1
   Insn 842: point = 283, n_alt = -1
   Insn 841: point = 285, n_alt = 1
   Insn 840: point = 287, n_alt = 1
   Insn 839: point = 289, n_alt = 7
   Insn 838: point = 291, n_alt = 3
   Insn 1192: point = 292, n_alt = -1
	Hard reg 23 is preferable by r914 with profit 1
   Insn 837: point = 294, n_alt = 1
   Insn 1191: point = 294, n_alt = -1
	Hard reg 23 is preferable by r914 with profit 1
	Hard reg 22 is preferable by r914 with profit 1
   Insn 836: point = 296, n_alt = 7
   Insn 835: point = 298, n_alt = 3
   Insn 834: point = 299, n_alt = 1
   Insn 833: point = 301, n_alt = 7
   Insn 832: point = 302, n_alt = 7
   Insn 831: point = 304, n_alt = 3
   Insn 830: point = 305, n_alt = 7
   Insn 829: point = 307, n_alt = 3
   Insn 828: point = 308, n_alt = 8
   Insn 1190: point = 309, n_alt = -1
	Hard reg 21 is preferable by r913 with profit 1
   Insn 827: point = 311, n_alt = 2
   Insn 1189: point = 312, n_alt = -1
	Hard reg 21 is preferable by r913 with profit 1
	Hard reg 22 is preferable by r913 with profit 1
   Insn 826: point = 314, n_alt = 7
   Insn 825: point = 315, n_alt = 1
   Insn 824: point = 317, n_alt = -1
   Insn 823: point = 319, n_alt = 1
   Insn 822: point = 321, n_alt = 1
   Insn 821: point = 323, n_alt = 7
   Insn 1188: point = 324, n_alt = -1
	Hard reg 23 is preferable by r912 with profit 1
   Insn 820: point = 326, n_alt = 1
   Insn 1187: point = 326, n_alt = -1
	Hard reg 23 is preferable by r912 with profit 1
	Hard reg 22 is preferable by r912 with profit 1
   Insn 819: point = 328, n_alt = 7
   Insn 818: point = 330, n_alt = 3
   Insn 817: point = 331, n_alt = 1
   Insn 816: point = 333, n_alt = 7
   Insn 815: point = 334, n_alt = 7
   Insn 814: point = 336, n_alt = 3
   Insn 813: point = 337, n_alt = 8
   Insn 1186: point = 338, n_alt = -1
	Hard reg 21 is preferable by r911 with profit 1
   Insn 812: point = 340, n_alt = 2
   Insn 1185: point = 341, n_alt = -1
	Hard reg 21 is preferable by r911 with profit 1
	Hard reg 22 is preferable by r911 with profit 1
   Insn 811: point = 343, n_alt = 1
   Insn 810: point = 345, n_alt = 1
   Insn 809: point = 347, n_alt = 7
   Insn 808: point = 349, n_alt = 3
   Insn 807: point = 350, n_alt = 1
   Insn 806: point = 352, n_alt = 7
   Insn 805: point = 353, n_alt = 7
   Insn 804: point = 355, n_alt = 3
   Insn 803: point = 356, n_alt = 7
   Insn 802: point = 358, n_alt = 3
  BB 15
   Insn 1108: point = 359, n_alt = -1
   Insn 742: point = 359, n_alt = 8
   Insn 741: point = 360, n_alt = 3
   Insn 740: point = 361, n_alt = 1
   Insn 739: point = 363, n_alt = 7
   Insn 738: point = 364, n_alt = 8
   Insn 737: point = 365, n_alt = 3
   Insn 736: point = 366, n_alt = 1
   Insn 735: point = 368, n_alt = 7
   Insn 734: point = 369, n_alt = 8
   Insn 733: point = 370, n_alt = 3
   Insn 732: point = 371, n_alt = 1
   Insn 731: point = 373, n_alt = 7
   Insn 730: point = 374, n_alt = 8
   Insn 729: point = 375, n_alt = 1
   Insn 728: point = 377, n_alt = 7
   Insn 727: point = 378, n_alt = 8
   Insn 726: point = 379, n_alt = 1
   Insn 1207: point = 381, n_alt = 7
	   Creating copy r926<-r931@1
   Insn 725: point = 383, n_alt = -1
   Insn 724: point = 384, n_alt = 0
   Insn 723: point = 384, n_alt = -1
   Insn 722: point = 385, n_alt = 2
   Insn 721: point = 387, n_alt = 7
   Insn 720: point = 388, n_alt = 7
   Insn 1179: point = 389, n_alt = 8
	   Creating copy r905->r931@1
   Insn 719: point = 391, n_alt = 7
   Insn 718: point = 393, n_alt = 3
   Insn 717: point = 394, n_alt = 8
   Insn 716: point = 395, n_alt = 3
   Insn 715: point = 396, n_alt = 1
   Insn 1208: point = 398, n_alt = 7
	   Creating copy r927<-r932@1
   Insn 714: point = 400, n_alt = -1
   Insn 713: point = 401, n_alt = 0
   Insn 712: point = 401, n_alt = -1
   Insn 711: point = 402, n_alt = 2
   Insn 710: point = 404, n_alt = 7
   Insn 1177: point = 405, n_alt = 8
	   Creating copy r903->r932@1
   Insn 709: point = 407, n_alt = 7
   Insn 708: point = 409, n_alt = 3
   Insn 707: point = 410, n_alt = 8
   Insn 706: point = 411, n_alt = 2
   Insn 705: point = 413, n_alt = 7
   Insn 704: point = 415, n_alt = 3
   Insn 703: point = 416, n_alt = 7
   Insn 702: point = 418, n_alt = 3
   Insn 701: point = 419, n_alt = 1
   Insn 700: point = 420, n_alt = 3
  BB 17
   Insn 799: point = 421, n_alt = 8
   Insn 798: point = 422, n_alt = 3
   Insn 797: point = 423, n_alt = 1
   Insn 796: point = 425, n_alt = 7
   Insn 795: point = 426, n_alt = 8
   Insn 794: point = 427, n_alt = 3
   Insn 793: point = 428, n_alt = 1
   Insn 792: point = 430, n_alt = 7
   Insn 791: point = 431, n_alt = 8
   Insn 790: point = 432, n_alt = 3
   Insn 789: point = 433, n_alt = 1
   Insn 788: point = 435, n_alt = 7
   Insn 787: point = 436, n_alt = 8
   Insn 786: point = 437, n_alt = 1
   Insn 785: point = 439, n_alt = 7
   Insn 784: point = 440, n_alt = 8
   Insn 783: point = 441, n_alt = 1
   Insn 1205: point = 443, n_alt = 7
	   Creating copy r924<-r933@1
   Insn 782: point = 445, n_alt = -1
   Insn 781: point = 446, n_alt = 0
   Insn 780: point = 446, n_alt = -1
   Insn 779: point = 447, n_alt = 2
   Insn 778: point = 449, n_alt = 7
   Insn 777: point = 450, n_alt = 7
   Insn 1183: point = 451, n_alt = 8
	   Creating copy r909->r933@1
   Insn 776: point = 453, n_alt = 7
   Insn 775: point = 455, n_alt = 3
   Insn 774: point = 456, n_alt = 8
   Insn 773: point = 457, n_alt = 3
   Insn 772: point = 458, n_alt = 1
   Insn 1206: point = 460, n_alt = 7
	   Creating copy r925<-r934@1
   Insn 771: point = 462, n_alt = -1
   Insn 770: point = 463, n_alt = 0
   Insn 769: point = 463, n_alt = -1
   Insn 768: point = 464, n_alt = 2
   Insn 767: point = 466, n_alt = 7
   Insn 1181: point = 467, n_alt = 8
	   Creating copy r907->r934@1
   Insn 766: point = 469, n_alt = 7
   Insn 765: point = 471, n_alt = 3
   Insn 764: point = 472, n_alt = 8
   Insn 763: point = 473, n_alt = 2
   Insn 762: point = 475, n_alt = 7
   Insn 761: point = 477, n_alt = 3
   Insn 760: point = 478, n_alt = 7
   Insn 759: point = 480, n_alt = 3
   Insn 758: point = 481, n_alt = 1
   Insn 757: point = 482, n_alt = 3
  BB 16
   Insn 752: point = 483, n_alt = -1
   Insn 751: point = 483, n_alt = 1
   Insn 750: point = 484, n_alt = 7
   Insn 749: point = 486, n_alt = 3
   Insn 748: point = 487, n_alt = 7
   Insn 747: point = 489, n_alt = 3
  BB 14
   Insn 695: point = 490, n_alt = -1
   Insn 694: point = 490, n_alt = 1
   Insn 693: point = 491, n_alt = 7
   Insn 692: point = 493, n_alt = 3
   Insn 691: point = 494, n_alt = 7
   Insn 690: point = 496, n_alt = 3
   Insn 689: point = 497, n_alt = 1
   Insn 688: point = 498, n_alt = 3
   Insn 687: point = 499, n_alt = 8
   Insn 686: point = 500, n_alt = 3
   Insn 685: point = 501, n_alt = 1
   Insn 684: point = 503, n_alt = 1
   Insn 683: point = 505, n_alt = 7
   Insn 682: point = 507, n_alt = 3
   Insn 681: point = 508, n_alt = 8
   Insn 680: point = 509, n_alt = 3
   Insn 679: point = 510, n_alt = 1
   Insn 678: point = 512, n_alt = 1
   Insn 677: point = 514, n_alt = -1
   Insn 676: point = 516, n_alt = 1
   Insn 675: point = 518, n_alt = 7
   Insn 674: point = 520, n_alt = 3
   Insn 673: point = 521, n_alt = 1
   Insn 672: point = 523, n_alt = 7
   Insn 671: point = 524, n_alt = 7
   Insn 670: point = 526, n_alt = 3
   Insn 1176: point = 527, n_alt = -1
	Hard reg 22 is preferable by r902 with profit 1
   Insn 669: point = 529, n_alt = 1
   Insn 1175: point = 529, n_alt = -1
	Hard reg 22 is preferable by r902 with profit 1
	Hard reg 21 is preferable by r902 with profit 1
   Insn 668: point = 531, n_alt = 1
   Insn 667: point = 533, n_alt = 7
   Insn 666: point = 535, n_alt = 3
   Insn 665: point = 536, n_alt = 8
   Insn 664: point = 537, n_alt = 3
   Insn 663: point = 538, n_alt = 1
   Insn 662: point = 540, n_alt = 1
   Insn 661: point = 542, n_alt = -1
   Insn 660: point = 544, n_alt = 1
   Insn 659: point = 546, n_alt = 7
   Insn 658: point = 548, n_alt = 3
   Insn 657: point = 549, n_alt = 1
   Insn 656: point = 551, n_alt = 7
   Insn 655: point = 552, n_alt = 7
   Insn 654: point = 554, n_alt = 3
   Insn 1174: point = 555, n_alt = -1
	Hard reg 22 is preferable by r901 with profit 1
   Insn 653: point = 557, n_alt = 1
   Insn 1173: point = 557, n_alt = -1
	Hard reg 22 is preferable by r901 with profit 1
	Hard reg 21 is preferable by r901 with profit 1
   Insn 652: point = 559, n_alt = 1
   Insn 651: point = 561, n_alt = 7
   Insn 650: point = 563, n_alt = 3
   Insn 649: point = 564, n_alt = 8
   Insn 648: point = 565, n_alt = 1
   Insn 647: point = 567, n_alt = 1
   Insn 646: point = 569, n_alt = -1
   Insn 645: point = 571, n_alt = 1
   Insn 644: point = 573, n_alt = 7
   Insn 643: point = 575, n_alt = 3
   Insn 642: point = 576, n_alt = 1
   Insn 641: point = 578, n_alt = 7
   Insn 640: point = 579, n_alt = 7
   Insn 639: point = 581, n_alt = 3
   Insn 1172: point = 582, n_alt = -1
	Hard reg 22 is preferable by r900 with profit 1
   Insn 638: point = 584, n_alt = 1
   Insn 1171: point = 584, n_alt = -1
	Hard reg 22 is preferable by r900 with profit 1
	Hard reg 21 is preferable by r900 with profit 1
   Insn 637: point = 586, n_alt = 1
   Insn 636: point = 588, n_alt = 7
   Insn 635: point = 590, n_alt = 3
   Insn 634: point = 591, n_alt = 8
   Insn 633: point = 592, n_alt = 3
   Insn 632: point = 593, n_alt = 1
   Insn 631: point = 595, n_alt = -1
   Insn 630: point = 597, n_alt = 1
   Insn 629: point = 599, n_alt = 7
   Insn 628: point = 601, n_alt = 3
   Insn 627: point = 602, n_alt = 1
   Insn 626: point = 604, n_alt = 7
   Insn 625: point = 605, n_alt = 7
   Insn 624: point = 607, n_alt = 3
   Insn 623: point = 608, n_alt = 8
   Insn 622: point = 609, n_alt = 1
   Insn 621: point = 611, n_alt = 7
   Insn 620: point = 612, n_alt = 8
   Insn 619: point = 613, n_alt = 1
   Insn 618: point = 615, n_alt = 7
   Insn 617: point = 616, n_alt = 8
   Insn 616: point = 617, n_alt = 1
   Insn 615: point = 619, n_alt = 7
   Insn 614: point = 620, n_alt = 8
   Insn 613: point = 621, n_alt = 2
   Insn 612: point = 623, n_alt = -1
   Insn 611: point = 625, n_alt = 2
   Insn 610: point = 627, n_alt = 7
   Insn 609: point = 628, n_alt = 1
   Insn 608: point = 630, n_alt = 7
   Insn 607: point = 631, n_alt = 7
   Insn 606: point = 632, n_alt = 8
   Insn 1170: point = 633, n_alt = -1
	Hard reg 21 is preferable by r899 with profit 1
   Insn 605: point = 635, n_alt = 2
   Insn 1169: point = 636, n_alt = -1
	Hard reg 21 is preferable by r899 with profit 1
	Hard reg 22 is preferable by r899 with profit 1
   Insn 604: point = 638, n_alt = 7
   Insn 603: point = 639, n_alt = 0
   Insn 602: point = 641, n_alt = 2
   Insn 601: point = 643, n_alt = 7
  BB 13
   Insn 598: point = 644, n_alt = 8
   Insn 597: point = 645, n_alt = 7
   Insn 596: point = 646, n_alt = 8
   Insn 595: point = 647, n_alt = 7
   Insn 594: point = 648, n_alt = 8
   Insn 593: point = 649, n_alt = 7
   Insn 592: point = 650, n_alt = 8
   Insn 591: point = 651, n_alt = 7
  BB 12
   Insn 586: point = 652, n_alt = -1
   Insn 585: point = 652, n_alt = 1
   Insn 584: point = 653, n_alt = 7
   Insn 583: point = 654, n_alt = 7
   Insn 582: point = 655, n_alt = 8
   Insn 581: point = 656, n_alt = 2
   Insn 580: point = 658, n_alt = 1
   Insn 579: point = 660, n_alt = 1
   Insn 578: point = 662, n_alt = 7
   Insn 1168: point = 663, n_alt = -1
	Hard reg 22 is preferable by r898 with profit 1
   Insn 577: point = 665, n_alt = 1
   Insn 1167: point = 666, n_alt = -1
	Hard reg 22 is preferable by r898 with profit 1
	Hard reg 21 is preferable by r898 with profit 1
   Insn 576: point = 667, n_alt = 7
   Insn 575: point = 669, n_alt = 3
   Insn 574: point = 670, n_alt = 8
   Insn 573: point = 671, n_alt = 2
   Insn 572: point = 673, n_alt = 1
   Insn 571: point = 675, n_alt = 1
   Insn 570: point = 677, n_alt = 7
   Insn 1166: point = 678, n_alt = -1
	Hard reg 22 is preferable by r897 with profit 1
   Insn 569: point = 680, n_alt = 1
   Insn 1165: point = 681, n_alt = -1
	Hard reg 22 is preferable by r897 with profit 1
	Hard reg 21 is preferable by r897 with profit 1
   Insn 568: point = 682, n_alt = 7
   Insn 567: point = 684, n_alt = 3
   Insn 566: point = 685, n_alt = 8
   Insn 565: point = 686, n_alt = 2
   Insn 564: point = 688, n_alt = 1
   Insn 563: point = 690, n_alt = 1
   Insn 562: point = 692, n_alt = 7
   Insn 1164: point = 693, n_alt = -1
	Hard reg 22 is preferable by r896 with profit 1
   Insn 561: point = 695, n_alt = 1
   Insn 1163: point = 696, n_alt = -1
	Hard reg 22 is preferable by r896 with profit 1
	Hard reg 21 is preferable by r896 with profit 1
   Insn 560: point = 697, n_alt = 7
   Insn 559: point = 699, n_alt = 3
   Insn 558: point = 700, n_alt = 8
   Insn 1162: point = 701, n_alt = -1
	Hard reg 21 is preferable by r895 with profit 1
   Insn 557: point = 703, n_alt = 2
   Insn 1161: point = 704, n_alt = -1
	Hard reg 21 is preferable by r895 with profit 1
	Hard reg 22 is preferable by r895 with profit 1
   Insn 556: point = 706, n_alt = 7
   Insn 555: point = 707, n_alt = 1
   Insn 554: point = 709, n_alt = 7
   Insn 553: point = 711, n_alt = 3
   Insn 552: point = 712, n_alt = 8
   Insn 551: point = 713, n_alt = 7
   Insn 550: point = 714, n_alt = 8
   Insn 549: point = 715, n_alt = 2
   Insn 548: point = 717, n_alt = -1
   Insn 547: point = 719, n_alt = 2
   Insn 546: point = 721, n_alt = 1
   Insn 545: point = 723, n_alt = 7
   Insn 544: point = 724, n_alt = 1
   Insn 543: point = 726, n_alt = 7
   Insn 542: point = 727, n_alt = 8
   Insn 541: point = 728, n_alt = 2
   Insn 540: point = 730, n_alt = -1
   Insn 539: point = 732, n_alt = 2
   Insn 538: point = 734, n_alt = 1
   Insn 537: point = 736, n_alt = 7
   Insn 536: point = 737, n_alt = 1
   Insn 535: point = 739, n_alt = 7
   Insn 534: point = 740, n_alt = 8
   Insn 533: point = 741, n_alt = 2
   Insn 532: point = 743, n_alt = -1
   Insn 531: point = 745, n_alt = 2
   Insn 530: point = 747, n_alt = 1
   Insn 529: point = 749, n_alt = 7
   Insn 528: point = 750, n_alt = 1
   Insn 527: point = 752, n_alt = 7
   Insn 526: point = 753, n_alt = 8
   Insn 1160: point = 754, n_alt = -1
	Hard reg 21 is preferable by r894 with profit 1
   Insn 525: point = 756, n_alt = 2
   Insn 1159: point = 757, n_alt = 7
	   Creating copy r894<-r930@1
   Insn 524: point = 759, n_alt = -1
   Insn 523: point = 760, n_alt = 0
   Insn 522: point = 760, n_alt = 10
   Insn 521: point = 761, n_alt = -1
   Insn 520: point = 762, n_alt = 3
   Insn 519: point = 763, n_alt = 7
   Insn 1158: point = 764, n_alt = 8
	   Creating copy r893->r930@1
   Insn 518: point = 766, n_alt = 7
   Insn 517: point = 768, n_alt = 3
   Insn 516: point = 769, n_alt = 8
   Insn 515: point = 770, n_alt = 2
   Insn 514: point = 772, n_alt = -1
   Insn 513: point = 774, n_alt = 1
   Insn 512: point = 776, n_alt = 1
   Insn 511: point = 778, n_alt = 7
   Insn 1157: point = 779, n_alt = -1
	Hard reg 22 is preferable by r892 with profit 1
   Insn 510: point = 781, n_alt = 1
   Insn 1156: point = 781, n_alt = -1
	Hard reg 22 is preferable by r892 with profit 1
	Hard reg 21 is preferable by r892 with profit 1
   Insn 509: point = 783, n_alt = 7
   Insn 508: point = 784, n_alt = 8
   Insn 507: point = 785, n_alt = 2
   Insn 506: point = 787, n_alt = -1
   Insn 505: point = 789, n_alt = 1
   Insn 504: point = 791, n_alt = 1
   Insn 503: point = 793, n_alt = 7
   Insn 1155: point = 794, n_alt = -1
	Hard reg 22 is preferable by r891 with profit 1
   Insn 502: point = 796, n_alt = 1
   Insn 1154: point = 796, n_alt = -1
	Hard reg 22 is preferable by r891 with profit 1
	Hard reg 21 is preferable by r891 with profit 1
   Insn 501: point = 798, n_alt = 7
   Insn 500: point = 799, n_alt = 8
   Insn 499: point = 800, n_alt = 2
   Insn 498: point = 802, n_alt = -1
   Insn 497: point = 804, n_alt = 1
   Insn 496: point = 806, n_alt = 1
   Insn 495: point = 808, n_alt = 7
   Insn 1153: point = 809, n_alt = -1
	Hard reg 22 is preferable by r890 with profit 1
   Insn 494: point = 811, n_alt = 1
   Insn 1152: point = 811, n_alt = -1
	Hard reg 22 is preferable by r890 with profit 1
	Hard reg 21 is preferable by r890 with profit 1
   Insn 493: point = 813, n_alt = 7
   Insn 492: point = 814, n_alt = 8
   Insn 491: point = 815, n_alt = 0
   Insn 490: point = 816, n_alt = 8
   Insn 489: point = 817, n_alt = 1
   Insn 488: point = 819, n_alt = 1
   Insn 487: point = 821, n_alt = 7
   Insn 1151: point = 822, n_alt = -1
	Hard reg 22 is preferable by r889 with profit 1
   Insn 486: point = 824, n_alt = 1
   Insn 1150: point = 825, n_alt = -1
	Hard reg 22 is preferable by r889 with profit 1
	Hard reg 21 is preferable by r889 with profit 1
   Insn 485: point = 826, n_alt = 7
   Insn 484: point = 827, n_alt = 8
   Insn 483: point = 828, n_alt = 3
   Insn 482: point = 829, n_alt = 1
   Insn 481: point = 831, n_alt = 1
   Insn 480: point = 833, n_alt = 1
   Insn 479: point = 835, n_alt = 7
   Insn 478: point = 837, n_alt = 3
   Insn 477: point = 838, n_alt = 1
   Insn 476: point = 840, n_alt = 7
   Insn 1149: point = 841, n_alt = -1
	Hard reg 22 is preferable by r888 with profit 1
   Insn 475: point = 843, n_alt = 1
   Insn 1148: point = 843, n_alt = -1
	Hard reg 22 is preferable by r888 with profit 1
	Hard reg 21 is preferable by r888 with profit 1
   Insn 474: point = 845, n_alt = 1
   Insn 473: point = 847, n_alt = -1
   Insn 472: point = 849, n_alt = 1
   Insn 471: point = 851, n_alt = 1
   Insn 470: point = 853, n_alt = 7
   Insn 469: point = 855, n_alt = 3
   Insn 1147: point = 856, n_alt = -1
	Hard reg 22 is preferable by r887 with profit 1
   Insn 468: point = 858, n_alt = 1
   Insn 1146: point = 858, n_alt = -1
	Hard reg 22 is preferable by r887 with profit 1
	Hard reg 21 is preferable by r887 with profit 1
   Insn 467: point = 860, n_alt = 7
   Insn 466: point = 862, n_alt = 3
   Insn 465: point = 863, n_alt = 8
   Insn 464: point = 864, n_alt = 3
   Insn 463: point = 865, n_alt = 1
   Insn 462: point = 867, n_alt = 1
   Insn 461: point = 869, n_alt = 1
   Insn 460: point = 871, n_alt = 7
   Insn 459: point = 873, n_alt = 3
   Insn 458: point = 874, n_alt = 1
   Insn 457: point = 876, n_alt = 7
   Insn 1145: point = 877, n_alt = -1
	Hard reg 22 is preferable by r886 with profit 1
   Insn 456: point = 879, n_alt = 1
   Insn 1144: point = 879, n_alt = -1
	Hard reg 22 is preferable by r886 with profit 1
	Hard reg 21 is preferable by r886 with profit 1
   Insn 455: point = 881, n_alt = 1
   Insn 454: point = 883, n_alt = -1
   Insn 453: point = 885, n_alt = 1
   Insn 452: point = 887, n_alt = 1
   Insn 451: point = 889, n_alt = 7
   Insn 450: point = 891, n_alt = 3
   Insn 1143: point = 892, n_alt = -1
	Hard reg 22 is preferable by r885 with profit 1
   Insn 449: point = 894, n_alt = 1
   Insn 1142: point = 894, n_alt = -1
	Hard reg 22 is preferable by r885 with profit 1
	Hard reg 21 is preferable by r885 with profit 1
   Insn 448: point = 896, n_alt = 7
   Insn 447: point = 898, n_alt = 3
   Insn 446: point = 899, n_alt = 8
   Insn 445: point = 900, n_alt = 1
   Insn 444: point = 902, n_alt = 1
   Insn 443: point = 904, n_alt = 1
   Insn 442: point = 906, n_alt = 7
   Insn 441: point = 908, n_alt = 3
   Insn 440: point = 909, n_alt = 1
   Insn 439: point = 911, n_alt = 7
   Insn 1141: point = 912, n_alt = -1
	Hard reg 22 is preferable by r884 with profit 1
   Insn 438: point = 914, n_alt = 1
   Insn 1140: point = 914, n_alt = -1
	Hard reg 22 is preferable by r884 with profit 1
	Hard reg 21 is preferable by r884 with profit 1
   Insn 437: point = 916, n_alt = 1
   Insn 436: point = 918, n_alt = -1
   Insn 435: point = 920, n_alt = 1
   Insn 434: point = 922, n_alt = 1
   Insn 433: point = 924, n_alt = 7
   Insn 432: point = 926, n_alt = 3
   Insn 1139: point = 927, n_alt = -1
	Hard reg 22 is preferable by r883 with profit 1
   Insn 431: point = 929, n_alt = 1
   Insn 1138: point = 929, n_alt = -1
	Hard reg 22 is preferable by r883 with profit 1
	Hard reg 21 is preferable by r883 with profit 1
   Insn 430: point = 931, n_alt = 7
   Insn 429: point = 932, n_alt = 8
   Insn 428: point = 933, n_alt = 3
   Insn 427: point = 934, n_alt = 1
   Insn 426: point = 936, n_alt = 1
   Insn 425: point = 938, n_alt = 7
   Insn 424: point = 940, n_alt = 3
   Insn 423: point = 941, n_alt = 1
   Insn 422: point = 943, n_alt = 7
   Insn 421: point = 944, n_alt = 8
   Insn 420: point = 945, n_alt = 1
   Insn 419: point = 947, n_alt = 7
   Insn 418: point = 948, n_alt = 8
   Insn 417: point = 949, n_alt = 1
   Insn 416: point = 951, n_alt = 7
   Insn 415: point = 952, n_alt = 8
   Insn 414: point = 953, n_alt = 1
   Insn 413: point = 955, n_alt = 7
   Insn 412: point = 956, n_alt = 8
   Insn 411: point = 957, n_alt = 2
   Insn 410: point = 959, n_alt = 1
   Insn 409: point = 961, n_alt = 1
   Insn 408: point = 963, n_alt = -1
   Insn 407: point = 965, n_alt = 1
   Insn 406: point = 967, n_alt = 7
   Insn 405: point = 969, n_alt = 3
   Insn 404: point = 970, n_alt = 8
   Insn 403: point = 971, n_alt = 0
   Insn 402: point = 973, n_alt = 1
   Insn 401: point = 975, n_alt = 1
   Insn 400: point = 977, n_alt = -1
   Insn 399: point = 979, n_alt = 1
   Insn 398: point = 981, n_alt = 1
   Insn 397: point = 983, n_alt = 7
   Insn 396: point = 985, n_alt = 3
   Insn 1137: point = 986, n_alt = -1
	Hard reg 22 is preferable by r882 with profit 1
   Insn 395: point = 988, n_alt = 1
   Insn 1136: point = 989, n_alt = -1
	Hard reg 22 is preferable by r882 with profit 1
	Hard reg 21 is preferable by r882 with profit 1
   Insn 394: point = 990, n_alt = -1
   Insn 393: point = 992, n_alt = 1
   Insn 392: point = 994, n_alt = 7
   Insn 391: point = 995, n_alt = 7
   Insn 390: point = 997, n_alt = 3
   Insn 389: point = 998, n_alt = 8
   Insn 388: point = 999, n_alt = 2
   Insn 387: point = 1001, n_alt = 7
   Insn 386: point = 1002, n_alt = 7
   Insn 385: point = 1004, n_alt = 3
   Insn 384: point = 1005, n_alt = 8
   Insn 383: point = 1006, n_alt = 3
   Insn 382: point = 1007, n_alt = 2
   Insn 381: point = 1009, n_alt = 7
   Insn 380: point = 1010, n_alt = 8
   Insn 379: point = 1011, n_alt = 3
   Insn 378: point = 1012, n_alt = 1
   Insn 377: point = 1014, n_alt = 2
   Insn 376: point = 1015, n_alt = 7
   Insn 375: point = 1016, n_alt = 8
   Insn 374: point = 1017, n_alt = 1
   Insn 373: point = 1019, n_alt = 2
   Insn 372: point = 1020, n_alt = 7
   Insn 371: point = 1021, n_alt = 8
   Insn 370: point = 1022, n_alt = 3
   Insn 369: point = 1023, n_alt = 2
   Insn 368: point = 1025, n_alt = 7
   Insn 367: point = 1026, n_alt = 8
   Insn 366: point = 1027, n_alt = 7
   Insn 365: point = 1028, n_alt = 3
   Insn 364: point = 1029, n_alt = 8
   Insn 363: point = 1030, n_alt = 3
   Insn 362: point = 1031, n_alt = 2
   Insn 361: point = 1033, n_alt = 7
   Insn 360: point = 1034, n_alt = 8
   Insn 359: point = 1035, n_alt = 7
   Insn 358: point = 1036, n_alt = 8
   Insn 357: point = 1037, n_alt = 3
   Insn 356: point = 1038, n_alt = 2
   Insn 355: point = 1040, n_alt = 7
  BB 8
   Insn 1105: point = 1041, n_alt = -1
   Insn 191: point = 1041, n_alt = 8
   Insn 190: point = 1042, n_alt = 7
   Insn 189: point = 1043, n_alt = 8
   Insn 188: point = 1044, n_alt = 7
   Insn 187: point = 1045, n_alt = 8
   Insn 186: point = 1046, n_alt = 7
   Insn 185: point = 1047, n_alt = 8
   Insn 184: point = 1048, n_alt = 7
   Insn 183: point = 1049, n_alt = 8
   Insn 182: point = 1050, n_alt = 7
   Insn 181: point = 1051, n_alt = 8
   Insn 180: point = 1052, n_alt = 7
   Insn 179: point = 1053, n_alt = 8
   Insn 178: point = 1054, n_alt = 7
   Insn 177: point = 1055, n_alt = 8
   Insn 176: point = 1056, n_alt = 7
  BB 11
   Insn 352: point = 1057, n_alt = 8
   Insn 351: point = 1058, n_alt = 0
   Insn 350: point = 1060, n_alt = 2
   Insn 1135: point = 1061, n_alt = -1
	Hard reg 21 is preferable by r881 with profit 1
   Insn 349: point = 1063, n_alt = 2
   Insn 1134: point = 1064, n_alt = -1
	Hard reg 21 is preferable by r881 with profit 1
	Hard reg 22 is preferable by r881 with profit 1
   Insn 348: point = 1066, n_alt = 7
   Insn 347: point = 1067, n_alt = 1
   Insn 346: point = 1069, n_alt = 7
   Insn 345: point = 1070, n_alt = 8
   Insn 344: point = 1071, n_alt = 0
   Insn 343: point = 1073, n_alt = 2
   Insn 1133: point = 1074, n_alt = -1
	Hard reg 21 is preferable by r880 with profit 1
   Insn 342: point = 1076, n_alt = 2
   Insn 1132: point = 1077, n_alt = -1
	Hard reg 21 is preferable by r880 with profit 1
	Hard reg 22 is preferable by r880 with profit 1
   Insn 341: point = 1079, n_alt = 7
   Insn 340: point = 1080, n_alt = 1
   Insn 339: point = 1082, n_alt = 7
   Insn 338: point = 1083, n_alt = 8
   Insn 337: point = 1084, n_alt = 0
   Insn 336: point = 1086, n_alt = 2
   Insn 1131: point = 1087, n_alt = -1
	Hard reg 21 is preferable by r879 with profit 1
   Insn 335: point = 1089, n_alt = 2
   Insn 1130: point = 1090, n_alt = -1
	Hard reg 21 is preferable by r879 with profit 1
	Hard reg 22 is preferable by r879 with profit 1
   Insn 334: point = 1092, n_alt = 7
   Insn 333: point = 1093, n_alt = 1
   Insn 332: point = 1095, n_alt = 7
   Insn 331: point = 1096, n_alt = 8
   Insn 330: point = 1097, n_alt = 2
   Insn 329: point = 1099, n_alt = 7
   Insn 328: point = 1100, n_alt = 8
   Insn 327: point = 1101, n_alt = 1
   Insn 326: point = 1103, n_alt = 7
   Insn 325: point = 1104, n_alt = 8
   Insn 324: point = 1105, n_alt = 1
   Insn 323: point = 1107, n_alt = 7
   Insn 322: point = 1108, n_alt = 8
   Insn 321: point = 1109, n_alt = 1
   Insn 320: point = 1111, n_alt = 7
   Insn 319: point = 1112, n_alt = 8
   Insn 318: point = 1113, n_alt = 0
   Insn 317: point = 1115, n_alt = 2
   Insn 316: point = 1116, n_alt = 1
   Insn 1129: point = 1118, n_alt = -1
	Hard reg 21 is preferable by r878 with profit 1
   Insn 315: point = 1120, n_alt = 2
   Insn 1128: point = 1121, n_alt = -1
	Hard reg 21 is preferable by r878 with profit 1
	Hard reg 23 is preferable by r878 with profit 1
   Insn 314: point = 1123, n_alt = 0
   Insn 1127: point = 1125, n_alt = -1
	Hard reg 21 is preferable by r877 with profit 1
   Insn 313: point = 1127, n_alt = 2
   Insn 1126: point = 1128, n_alt = -1
	Hard reg 21 is preferable by r877 with profit 1
	Hard reg 22 is preferable by r877 with profit 1
   Insn 312: point = 1130, n_alt = 7
   Insn 311: point = 1131, n_alt = -1
   Insn 310: point = 1133, n_alt = 2
   Insn 309: point = 1135, n_alt = 7
   Insn 308: point = 1136, n_alt = 7
   Insn 307: point = 1137, n_alt = 1
   Insn 306: point = 1139, n_alt = 7
   Insn 305: point = 1140, n_alt = 8
   Insn 304: point = 1141, n_alt = 1
   Insn 1209: point = 1143, n_alt = 7
	   Creating copy r928<-r929@1
   Insn 303: point = 1145, n_alt = -1
   Insn 302: point = 1146, n_alt = 0
   Insn 301: point = 1146, n_alt = 10
   Insn 300: point = 1147, n_alt = 3
   Insn 299: point = 1148, n_alt = 8
	Hard reg 21 is preferable by r929 with profit 1
   Insn 298: point = 1150, n_alt = 2
   Insn 297: point = 1152, n_alt = 7
   Insn 296: point = 1153, n_alt = 7
   Insn 295: point = 1154, n_alt = 8
   Insn 294: point = 1155, n_alt = 0
   Insn 293: point = 1157, n_alt = 2
   Insn 292: point = 1158, n_alt = 1
   Insn 291: point = 1160, n_alt = 7
   Insn 290: point = 1161, n_alt = 4
   Insn 289: point = 1162, n_alt = 9
   Insn 288: point = 1163, n_alt = 0
   Insn 287: point = 1163, n_alt = -1
   Insn 286: point = 1164, n_alt = 1
   Insn 285: point = 1166, n_alt = 2
   Insn 284: point = 1167, n_alt = 7
   Insn 283: point = 1168, n_alt = 8
  BB 10
   Insn 280: point = 1170, n_alt = 7
  BB 9
   Insn 278: point = 1171, n_alt = -1
   Insn 277: point = 1171, n_alt = 0
   Insn 276: point = 1172, n_alt = 0
   Insn 275: point = 1174, n_alt = 0
   Insn 274: point = 1175, n_alt = 1
   Insn 273: point = 1175, n_alt = 0
   Insn 272: point = 1176, n_alt = 1
   Insn 271: point = 1176, n_alt = 7
   Insn 270: point = 1177, n_alt = 8
   Insn 269: point = 1178, n_alt = 1
   Insn 268: point = 1180, n_alt = -1
   Insn 1124: point = 1182, n_alt = -1
	Hard reg 22 is preferable by r875 with profit 1
   Insn 267: point = 1184, n_alt = 2
   Insn 1123: point = 1185, n_alt = -1
	Hard reg 22 is preferable by r875 with profit 1
	Hard reg 23 is preferable by r875 with profit 1
   Insn 266: point = 1187, n_alt = 7
   Insn 265: point = 1188, n_alt = 2
   Insn 264: point = 1190, n_alt = 7
   Insn 263: point = 1192, n_alt = 3
   Insn 262: point = 1193, n_alt = 7
   Insn 261: point = 1195, n_alt = 3
   Insn 260: point = 1196, n_alt = 1
   Insn 259: point = 1198, n_alt = 7
   Insn 258: point = 1199, n_alt = 7
   Insn 257: point = 1201, n_alt = 3
   Insn 256: point = 1202, n_alt = 8
   Insn 255: point = 1203, n_alt = 1
   Insn 254: point = 1205, n_alt = 7
   Insn 253: point = 1206, n_alt = 1
   Insn 252: point = 1208, n_alt = -1
   Insn 1122: point = 1210, n_alt = -1
	Hard reg 22 is preferable by r874 with profit 1
   Insn 251: point = 1212, n_alt = 2
   Insn 1121: point = 1213, n_alt = -1
	Hard reg 22 is preferable by r874 with profit 1
	Hard reg 23 is preferable by r874 with profit 1
   Insn 250: point = 1215, n_alt = 7
   Insn 249: point = 1216, n_alt = 2
   Insn 248: point = 1218, n_alt = 7
   Insn 247: point = 1220, n_alt = 3
   Insn 246: point = 1221, n_alt = 7
   Insn 245: point = 1223, n_alt = 3
   Insn 244: point = 1224, n_alt = 1
   Insn 243: point = 1226, n_alt = 7
   Insn 242: point = 1227, n_alt = 7
   Insn 241: point = 1229, n_alt = 3
   Insn 240: point = 1230, n_alt = 8
   Insn 239: point = 1231, n_alt = 2
   Insn 238: point = 1233, n_alt = -1
   Insn 237: point = 1235, n_alt = 2
   Insn 236: point = 1237, n_alt = 1
   Insn 235: point = 1239, n_alt = 7
   Insn 234: point = 1240, n_alt = 2
   Insn 233: point = 1242, n_alt = 7
   Insn 232: point = 1244, n_alt = 3
   Insn 231: point = 1245, n_alt = 1
   Insn 230: point = 1247, n_alt = 7
   Insn 229: point = 1249, n_alt = 3
   Insn 228: point = 1250, n_alt = 8
   Insn 227: point = 1251, n_alt = 2
   Insn 226: point = 1253, n_alt = -1
   Insn 225: point = 1255, n_alt = 2
   Insn 224: point = 1257, n_alt = 1
   Insn 223: point = 1259, n_alt = 7
   Insn 222: point = 1260, n_alt = 2
   Insn 221: point = 1262, n_alt = 7
   Insn 220: point = 1264, n_alt = 3
   Insn 219: point = 1265, n_alt = 1
   Insn 218: point = 1267, n_alt = 7
   Insn 217: point = 1269, n_alt = 3
   Insn 216: point = 1270, n_alt = 8
   Insn 215: point = 1271, n_alt = 2
   Insn 214: point = 1273, n_alt = -1
   Insn 213: point = 1275, n_alt = 2
   Insn 212: point = 1277, n_alt = 1
   Insn 211: point = 1279, n_alt = 7
   Insn 210: point = 1280, n_alt = 2
   Insn 209: point = 1282, n_alt = 7
   Insn 208: point = 1284, n_alt = 3
   Insn 207: point = 1285, n_alt = 1
   Insn 206: point = 1287, n_alt = 7
   Insn 205: point = 1289, n_alt = 3
   Insn 204: point = 1290, n_alt = 8
   Insn 203: point = 1291, n_alt = 2
   Insn 202: point = 1293, n_alt = 7
   Insn 201: point = 1295, n_alt = 3
   Insn 200: point = 1296, n_alt = 1
   Insn 199: point = 1298, n_alt = 7
   Insn 198: point = 1300, n_alt = 3
   Insn 197: point = 1301, n_alt = 2
   Insn 196: point = 1303, n_alt = 7
  BB 7
   Insn 171: point = 1304, n_alt = -1
   Insn 170: point = 1304, n_alt = 1
   Insn 169: point = 1305, n_alt = 7
  BB 6
   Insn 168: point = 1306, n_alt = -1
   Insn 167: point = 1306, n_alt = 1
   Insn 166: point = 1307, n_alt = 7
   Insn 165: point = 1308, n_alt = 8
   Insn 164: point = 1309, n_alt = 1
   Insn 163: point = 1311, n_alt = 1
   Insn 162: point = 1313, n_alt = 1
   Insn 161: point = 1315, n_alt = 7
   Insn 160: point = 1316, n_alt = 7
   Insn 159: point = 1317, n_alt = 1
   Insn 158: point = 1319, n_alt = 7
   Insn 157: point = 1320, n_alt = 7
   Insn 156: point = 1321, n_alt = 8
   Insn 155: point = 1322, n_alt = 1
   Insn 154: point = 1324, n_alt = 7
   Insn 153: point = 1325, n_alt = 1
   Insn 152: point = 1327, n_alt = 7
   Insn 151: point = 1328, n_alt = 7
   Insn 150: point = 1329, n_alt = 8
   Insn 149: point = 1330, n_alt = 0
   Insn 148: point = 1332, n_alt = 2
   Insn 147: point = 1333, n_alt = 1
   Insn 146: point = 1335, n_alt = 1
   Insn 145: point = 1337, n_alt = 7
   Insn 144: point = 1338, n_alt = 7
   Insn 143: point = 1339, n_alt = 8
   Insn 142: point = 1340, n_alt = 1
   Insn 141: point = 1342, n_alt = 1
   Insn 140: point = 1344, n_alt = 1
   Insn 139: point = 1346, n_alt = 7
   Insn 138: point = 1347, n_alt = 7
   Insn 137: point = 1348, n_alt = 1
   Insn 136: point = 1350, n_alt = 7
   Insn 135: point = 1351, n_alt = 7
   Insn 134: point = 1352, n_alt = 8
   Insn 133: point = 1353, n_alt = 1
   Insn 132: point = 1355, n_alt = 7
   Insn 131: point = 1356, n_alt = 1
   Insn 130: point = 1358, n_alt = 7
   Insn 129: point = 1359, n_alt = 7
   Insn 128: point = 1360, n_alt = 8
   Insn 127: point = 1361, n_alt = 1
   Insn 126: point = 1363, n_alt = 1
   Insn 125: point = 1365, n_alt = 1
   Insn 124: point = 1367, n_alt = 7
   Insn 123: point = 1368, n_alt = 7
   Insn 122: point = 1369, n_alt = 1
   Insn 121: point = 1371, n_alt = 7
   Insn 120: point = 1372, n_alt = 7
   Insn 119: point = 1373, n_alt = 8
   Insn 118: point = 1374, n_alt = 1
   Insn 117: point = 1376, n_alt = 7
   Insn 116: point = 1377, n_alt = 1
   Insn 115: point = 1379, n_alt = 7
   Insn 114: point = 1380, n_alt = 7
   Insn 113: point = 1381, n_alt = 8
   Insn 112: point = 1382, n_alt = 1
   Insn 111: point = 1384, n_alt = 1
   Insn 110: point = 1386, n_alt = 1
   Insn 109: point = 1388, n_alt = 7
   Insn 108: point = 1389, n_alt = 7
   Insn 107: point = 1390, n_alt = 1
   Insn 106: point = 1392, n_alt = 7
   Insn 105: point = 1393, n_alt = 7
   Insn 104: point = 1394, n_alt = 4
   Insn 103: point = 1395, n_alt = 9
   Insn 102: point = 1396, n_alt = 0
   Insn 101: point = 1396, n_alt = 10
   Insn 100: point = 1397, n_alt = 3
   Insn 99: point = 1398, n_alt = 4
   Insn 98: point = 1399, n_alt = 9
   Insn 97: point = 1400, n_alt = 0
   Insn 96: point = 1400, n_alt = 10
   Insn 95: point = 1401, n_alt = 3
  BB 4
   Insn 88: point = 1402, n_alt = 1
   Insn 87: point = 1402, n_alt = 1
   Insn 86: point = 1403, n_alt = 3
   Insn 85: point = 1404, n_alt = 8
  BB 3
   Insn 82: point = 1406, n_alt = 7
  BB 2
   Insn 80: point = 1407, n_alt = -1
   Insn 79: point = 1407, n_alt = 0
   Insn 78: point = 1408, n_alt = 0
   Insn 77: point = 1410, n_alt = 0
   Insn 76: point = 1411, n_alt = 1
   Insn 75: point = 1411, n_alt = 0
   Insn 74: point = 1412, n_alt = 1
   Insn 73: point = 1413, n_alt = 7
   Insn 72: point = 1414, n_alt = 7
   Insn 71: point = 1415, n_alt = 8
   Insn 70: point = 1416, n_alt = 1
   Insn 69: point = 1418, n_alt = 2
   Insn 68: point = 1420, n_alt = 7
   Insn 67: point = 1422, n_alt = 3
   Insn 66: point = 1423, n_alt = 7
   Insn 65: point = 1425, n_alt = 3
   Insn 64: point = 1426, n_alt = 7
   Insn 63: point = 1428, n_alt = 3
   Insn 62: point = 1429, n_alt = 4
   Insn 61: point = 1430, n_alt = 9
   Insn 60: point = 1431, n_alt = 0
   Insn 59: point = 1431, n_alt = 10
   Insn 58: point = 1432, n_alt = -1
   Insn 57: point = 1433, n_alt = 3
   Insn 56: point = 1434, n_alt = 7
   Insn 55: point = 1435, n_alt = 8
   Insn 54: point = 1436, n_alt = 1
   Insn 53: point = 1438, n_alt = 7
   Insn 52: point = 1439, n_alt = -1
   Insn 51: point = 1441, n_alt = 2
   Insn 50: point = 1443, n_alt = 7
   Insn 49: point = 1444, n_alt = 8
   Insn 48: point = 1445, n_alt = 1
   Insn 47: point = 1447, n_alt = 7
   Insn 46: point = 1448, n_alt = -1
   Insn 45: point = 1450, n_alt = 2
   Insn 44: point = 1452, n_alt = 7
   Insn 43: point = 1453, n_alt = 8
   Insn 42: point = 1454, n_alt = 0
   Insn 41: point = 1456, n_alt = 1
   Insn 40: point = 1458, n_alt = 1
   Insn 39: point = 1460, n_alt = 7
   Insn 1120: point = 1461, n_alt = -1
	Hard reg 22 is preferable by r873 with profit 1
   Insn 38: point = 1463, n_alt = 1
   Insn 1119: point = 1464, n_alt = -1
	Hard reg 22 is preferable by r873 with profit 1
	Hard reg 21 is preferable by r873 with profit 1
   Insn 37: point = 1465, n_alt = 7
   Insn 36: point = 1466, n_alt = 8
   Insn 35: point = 1467, n_alt = 7
   Insn 34: point = 1468, n_alt = 8
   Insn 33: point = 1469, n_alt = 7
   Insn 32: point = 1471, n_alt = 3
   Insn 31: point = 1472, n_alt = 8
   Insn 30: point = 1473, n_alt = 2
   Insn 29: point = 1475, n_alt = 1
   Insn 28: point = 1477, n_alt = 7
   Insn 27: point = 1479, n_alt = 3
   Insn 26: point = 1480, n_alt = 7
   Insn 25: point = 1482, n_alt = 3
   Insn 24: point = 1483, n_alt = 8
   Insn 23: point = 1484, n_alt = 7
   Insn 22: point = 1485, n_alt = 8
   Insn 21: point = 1486, n_alt = 7
   Insn 20: point = 1487, n_alt = 8
   Insn 19: point = 1488, n_alt = 1
   Insn 18: point = 1490, n_alt = 7
   Insn 17: point = 1491, n_alt = 7
   Insn 16: point = 1493, n_alt = 3
   Insn 15: point = 1494, n_alt = 8
   Insn 14: point = 1495, n_alt = 7
   Insn 13: point = 1496, n_alt = 8
   Insn 12: point = 1497, n_alt = 7
   Insn 7: point = 1498, n_alt = 5
   Insn 6: point = 1498, n_alt = 5
   Insn 5: point = 1498, n_alt = 5
   Insn 4: point = 1498, n_alt = 5
   Insn 3: point = 1498, n_alt = 5
   Insn 2: point = 1498, n_alt = 5
 r87: [1489..1491]
 r88: [1476..1480]
 r89: [1476..1477]
 r90: [1474..1475]
 r91: [1455..1456]
 r92: [1449..1450]
 r93: [1446..1448]
 r94: [1440..1441]
 r95: [1437..1439]
 r96: [1417..1426]
 r97: [1419..1423]
 r98: [1419..1420]
 r99: [1417..1418]
 r100: [1409..1411]
 r101: [1409..1410]
 r102: [1407..1408]
 r103: [1383..1390]
 r104: [1385..1386]
 r105: [1383..1384]
 r106: [1375..1377]
 r107: [1362..1369]
 r108: [1364..1365]
 r109: [1362..1363]
 r110: [1354..1356]
 r111: [1341..1348]
 r112: [1343..1344]
 r113: [1341..1342]
 r114: [1334..1335]
 r115: [1331..1333]
 r116: [1323..1325]
 r117: [1310..1317]
 r118: [1312..1313]
 r119: [1310..1311]
 r120: [1297..1301]
 r121: [1297..1298]
 r122: [1292..1296]
 r123: [1292..1293]
 r124: [1286..1287]
 r125: [1281..1285]
 r126: [1281..1282]
 r127: [1276..1280]
 r128: [1276..1277]
 r129: [1274..1275]
 r130: [1272..1273]
 r131: [1266..1267]
 r132: [1261..1265]
 r133: [1261..1262]
 r134: [1256..1260]
 r135: [1256..1257]
 r136: [1254..1255]
 r137: [1252..1253]
 r138: [1246..1247]
 r139: [1241..1245]
 r140: [1241..1242]
 r141: [1236..1240]
 r142: [1236..1237]
 r143: [1234..1235]
 r144: [1232..1233]
 r145: [1225..1227]
 r146: [1207..1224]
 r147: [1217..1221]
 r148: [1217..1218]
 r149: [1212..1216]
 r150: [1209..1210]
 r151: [1207..1208]
 r152: [1204..1206]
 r153: [1197..1199]
 r154: [1179..1196]
 r155: [1189..1193]
 r156: [1189..1190]
 r157: [1184..1188]
 r158: [1181..1182]
 r159: [1179..1180]
 r160: [1173..1175]
 r161: [1173..1174]
 r162: [1171..1172]
 r163: [1163..1164]
 r164: [1156..1158]
 r165: [1151..1153]
 r166: [1149..1150]
 r168: [1142..1145]
 r169: [1134..1136]
 r170: [1132..1133]
 r171: [1122..1131]
 r172: [1124..1125]
 r173: [1120..1123]
 r174: [1117..1118]
 r175: [1114..1116]
 r176: [1085..1087]
 r177: [1072..1074]
 r178: [1059..1061]
 r179: [1036..1038]
 r180: [1029..1031]
 r181: [1021..1023]
 r182: [1010..1012]
 r183: [1005..1007]
 r184: [1000..1002]
 r185: [993..995]
 r186: [993..994]
 r187: [991..992]
 r188: [982..983]
 r189: [980..981]
 r190: [978..979]
 r191: [972..973]
 r192: [966..967]
 r193: [964..965]
 r194: [958..959]
 r195: [937..941]
 r196: [937..938]
 r197: [935..936]
 r198: [932..934]
 r199: [921..927]
 r200: [923..924]
 r201: [921..922]
 r202: [919..920]
 r203: [917..918]
 r204: [915..916]
 r205: [901..912]
 r206: [905..909]
 r207: [905..906]
 r208: [903..904]
 r209: [901..902]
 r210: [895..896]
 r211: [886..892]
 r212: [888..889]
 r213: [886..887]
 r214: [884..885]
 r215: [882..883]
 r216: [880..881]
 r217: [866..877]
 r218: [870..874]
 r219: [870..871]
 r220: [868..869]
 r221: [866..867]
 r222: [863..865]
 r223: [859..860]
 r224: [850..856]
 r225: [852..853]
 r226: [850..851]
 r227: [848..849]
 r228: [846..847]
 r229: [844..845]
 r230: [830..841]
 r231: [834..838]
 r232: [834..835]
 r233: [832..833]
 r234: [830..831]
 r235: [827..829]
 r236: [805..809]
 r237: [805..806]
 r238: [803..804]
 r239: [801..802]
 r240: [790..794]
 r241: [790..791]
 r242: [788..789]
 r243: [786..787]
 r244: [775..779]
 r245: [775..776]
 r246: [773..774]
 r247: [771..772]
 r249: [756..759]
 r250: [753..754]
 r251: [746..750]
 r252: [746..747]
 r253: [744..745]
 r254: [742..743]
 r255: [733..737]
 r256: [733..734]
 r257: [731..732]
 r258: [729..730]
 r259: [720..724]
 r260: [720..721]
 r261: [718..719]
 r262: [716..717]
 r263: [689..690]
 r264: [687..688]
 r265: [674..675]
 r266: [672..673]
 r267: [659..660]
 r268: [657..658]
 r269: [652..654]
 r270: [640..641]
 r271: [635..639]
 r272: [622..628]
 r273: [624..625]
 r274: [622..623]
 r275: [603..605]
 r276: [603..604]
 r277: [598..602]
 r278: [598..599]
 r279: [596..597]
 r280: [594..595]
 r281: [591..593]
 r282: [587..588]
 r283: [585..586]
 r284: [566..582]
 r285: [577..579]
 r286: [577..578]
 r287: [572..576]
 r288: [572..573]
 r289: [570..571]
 r290: [568..569]
 r291: [566..567]
 r292: [560..561]
 r293: [558..559]
 r294: [539..555]
 r295: [550..552]
 r296: [550..551]
 r297: [545..549]
 r298: [545..546]
 r299: [543..544]
 r300: [541..542]
 r301: [539..540]
 r302: [536..538]
 r303: [532..533]
 r304: [530..531]
 r305: [511..527]
 r306: [522..524]
 r307: [522..523]
 r308: [517..521]
 r309: [517..518]
 r310: [515..516]
 r311: [513..514]
 r312: [511..512]
 r313: [508..510]
 r314: [504..505]
 r315: [502..503]
 r316: [499..501]
 r317: [490..494]
 r318: [490..491]
 r319: [412..416]
 r320: [412..413]
 r322: [403..404]
 r323: [401..402]
 r324: [397..400]
 r325: [394..396]
 r327: [386..388]
 r328: [384..385]
 r329: [380..383]
 r330: [369..371]
 r331: [364..366]
 r332: [359..361]
 r333: [483..487]
 r334: [483..484]
 r335: [474..478]
 r336: [474..475]
 r338: [465..466]
 r339: [463..464]
 r340: [459..462]
 r341: [456..458]
 r343: [448..450]
 r344: [446..447]
 r345: [442..445]
 r346: [431..433]
 r347: [426..428]
 r348: [421..423]
 r349: [342..356]
 r350: [351..353]
 r351: [346..350]
 r352: [346..347]
 r353: [344..345]
 r354: [340..343]
 r355: [337..338]
 r356: [332..334]
 r357: [316..331]
 r358: [327..328]
 r359: [320..324]
 r360: [320..321]
 r361: [318..319]
 r362: [316..317]
 r363: [311..315]
 r364: [280..305]
 r365: [300..302]
 r366: [282..299]
 r367: [295..296]
 r368: [286..292]
 r369: [288..289]
 r370: [286..287]
 r371: [284..285]
 r372: [282..283]
 r373: [278..281]
 r374: [247..272]
 r375: [267..269]
 r376: [249..266]
 r377: [262..263]
 r378: [253..259]
 r379: [255..256]
 r380: [253..254]
 r381: [251..252]
 r382: [249..250]
 r383: [245..248]
 r384: [237..239]
 r385: [235..236]
 r386: [232..234]
 r387: [225..227]
 r388: [220..224]
 r389: [220..221]
 r390: [218..219]
 r391: [215..217]
 r392: [211..212]
 r393: [208..210]
 r394: [202..204]
 r395: [202..203]
 r396: [200..201]
 r397: [194..196]
 r398: [194..195]
 r399: [192..193]
 r400: [181..183]
 r401: [181..182]
 r402: [148..150]
 r403: [141..143]
 r404: [134..136]
 r405: [127..129]
 r406: [118..122]
 r407: [118..119]
 r408: [115..117]
 r409: [108..112]
 r410: [108..109]
 r411: [105..107]
 r412: [100..102]
 r413: [95..97]
 r414: [88..92]
 r415: [88..89]
 r416: [85..87]
 r417: [78..82]
 r418: [78..79]
 r419: [75..77]
 r420: [70..72]
 r421: [65..67]
 r422: [58..62]
 r423: [58..59]
 r424: [55..57]
 r425: [48..52]
 r426: [48..49]
 r427: [45..47]
 r428: [40..42]
 r429: [35..37]
 r430: [28..32]
 r431: [28..29]
 r432: [25..27]
 r433: [18..22]
 r434: [18..19]
 r435: [15..17]
 r436: [10..12]
 r437: [3..7]
 r438: [3..4]
 r439: [0..2]
 r440: [1404..1414]
 r441: [1168..1176]
 r442: [190..205]
 r443: [192..197] [187..189]
 r444: [1463..1465]
 r445: [1457..1461]
 r446: [1459..1460]
 r447: [1457..1458]
 r448: [175..176]
 r449: [1138..1139]
 r450: [1127..1137]
 r451: [1094..1095]
 r452: [1089..1093]
 r453: [1081..1082]
 r454: [1076..1080]
 r455: [1068..1069]
 r456: [1063..1067]
 r457: [988..990]
 r458: [974..986]
 r459: [976..977]
 r460: [974..975]
 r461: [962..963]
 r462: [960..961]
 r463: [824..826]
 r464: [818..822]
 r465: [820..821]
 r466: [818..819]
 r467: [708..709]
 r468: [703..707]
 r469: [695..697]
 r470: [687..693]
 r471: [680..682]
 r472: [672..678]
 r473: [665..667]
 r474: [657..663]
 r475: [1496..1497]
 r476: [1494..1495]
 r477: [1492..1493]
 r478: [1487..1488]
 r479: [1489..1490]
 r480: [1485..1486]
 r481: [1483..1484]
 r482: [1481..1482]
 r483: [1478..1479]
 r484: [1472..1473]
 r485: [1470..1471]
 r486: [1468..1469]
 r487: [1466..1467]
 r488: [1453..1454]
 r489: [1451..1452]
 r490: [1444..1445]
 r491: [1446..1447]
 r492: [1442..1443]
 r493: [1435..1436]
 r494: [1437..1438]
 r495: [1432..1434]
 r496: [1431..1433]
 r497: [1429..1430]
 r498: [1427..1428]
 r499: [1424..1425]
 r500: [1421..1422]
 r501: [1415..1416]
 r502: [1412..1413]
 r503: [1402..1403]
 r504: [1400..1401]
 r505: [1398..1399]
 r506: [1396..1397]
 r507: [1394..1395]
 r508: [1391..1393]
 r509: [1391..1392]
 r510: [1387..1389]
 r511: [1387..1388]
 r512: [1381..1382]
 r513: [1378..1380]
 r514: [1378..1379]
 r515: [1373..1374]
 r516: [1375..1376]
 r517: [1370..1372]
 r518: [1370..1371]
 r519: [1366..1368]
 r520: [1366..1367]
 r521: [1360..1361]
 r522: [1357..1359]
 r523: [1357..1358]
 r524: [1352..1353]
 r525: [1354..1355]
 r526: [1349..1351]
 r527: [1349..1350]
 r528: [1345..1347]
 r529: [1345..1346]
 r530: [1339..1340]
 r531: [1336..1338]
 r532: [1336..1337]
 r533: [1329..1330]
 r534: [1331..1332]
 r535: [1326..1328]
 r536: [1326..1327]
 r537: [1321..1322]
 r538: [1323..1324]
 r539: [1318..1320]
 r540: [1318..1319]
 r541: [1314..1316]
 r542: [1314..1315]
 r543: [1308..1309]
 r544: [1306..1307]
 r545: [1304..1305]
 r546: [1055..1056]
 r547: [1053..1054]
 r548: [1051..1052]
 r549: [1049..1050]
 r550: [1047..1048]
 r551: [1045..1046]
 r552: [1043..1044]
 r553: [1041..1042]
 r554: [1302..1303]
 r555: [1299..1300]
 r556: [1294..1295]
 r557: [1290..1291]
 r558: [1288..1289]
 r559: [1283..1284]
 r560: [1278..1279]
 r561: [1270..1271]
 r562: [1268..1269]
 r563: [1263..1264]
 r564: [1258..1259]
 r565: [1250..1251]
 r566: [1248..1249]
 r567: [1243..1244]
 r568: [1238..1239]
 r569: [1230..1231]
 r570: [1228..1229]
 r571: [1225..1226]
 r572: [1222..1223]
 r573: [1219..1220]
 r574: [1214..1215]
 r575: [1202..1203]
 r576: [1204..1205]
 r577: [1200..1201]
 r578: [1197..1198]
 r579: [1194..1195]
 r580: [1191..1192]
 r581: [1186..1187]
 r582: [1177..1178]
 r583: [1165..1167]
 r584: [1165..1166]
 r585: [1161..1162]
 r586: [1159..1160]
 r587: [1154..1155]
 r588: [1156..1157]
 r589: [1151..1152]
 r590: [1146..1147]
 r591: [1140..1141]
 r592: [1134..1135]
 r593: [1129..1130]
 r594: [1112..1113]
 r595: [1114..1115]
 r596: [1108..1109]
 r597: [1110..1111]
 r598: [1104..1105]
 r599: [1106..1107]
 r600: [1100..1101]
 r601: [1102..1103]
 r602: [1096..1097]
 r603: [1098..1099]
 r604: [1091..1092]
 r605: [1083..1084]
 r606: [1085..1086]
 r607: [1078..1079]
 r608: [1070..1071]
 r609: [1072..1073]
 r610: [1065..1066]
 r611: [1057..1058]
 r612: [1059..1060]
 r613: [1039..1040]
 r614: [1036..1037]
 r615: [1034..1035]
 r616: [1032..1033]
 r617: [1029..1030]
 r618: [1026..1028]
 r619: [1026..1027]
 r620: [1024..1025]
 r621: [1021..1022]
 r622: [1016..1017]
 r623: [1018..1020]
 r624: [1018..1019]
 r625: [1013..1015]
 r626: [1013..1014]
 r627: [1010..1011]
 r628: [1008..1009]
 r629: [1005..1006]
 r630: [1003..1004]
 r631: [998..999]
 r632: [1000..1001]
 r633: [996..997]
 r634: [984..985]
 r635: [970..971]
 r636: [968..969]
 r637: [956..957]
 r638: [952..953]
 r639: [954..955]
 r640: [948..949]
 r641: [950..951]
 r642: [944..945]
 r643: [946..947]
 r644: [942..943]
 r645: [939..940]
 r646: [932..933]
 r647: [930..931]
 r648: [925..926]
 r649: [910..911]
 r650: [907..908]
 r651: [899..900]
 r652: [897..898]
 r653: [890..891]
 r654: [875..876]
 r655: [872..873]
 r656: [863..864]
 r657: [861..862]
 r658: [854..855]
 r659: [839..840]
 r660: [836..837]
 r661: [827..828]
 r662: [816..817]
 r663: [814..815]
 r664: [812..813]
 r665: [807..808]
 r666: [799..800]
 r667: [797..798]
 r668: [792..793]
 r669: [784..785]
 r670: [782..783]
 r671: [777..778]
 r672: [769..770]
 r673: [767..768]
 r674: [761..763]
 r675: [760..762]
 r676: [751..752]
 r677: [748..749]
 r678: [740..741]
 r679: [738..739]
 r680: [735..736]
 r681: [727..728]
 r682: [725..726]
 r683: [722..723]
 r684: [714..715]
 r685: [712..713]
 r686: [710..711]
 r687: [700..701]
 r688: [705..706]
 r689: [698..699]
 r690: [691..692]
 r691: [685..686]
 r692: [683..684]
 r693: [676..677]
 r694: [670..671]
 r695: [668..669]
 r696: [661..662]
 r697: [655..656]
 r698: [652..653]
 r699: [650..651]
 r700: [648..649]
 r701: [646..647]
 r702: [644..645]
 r703: [642..643]
 r704: [632..633]
 r705: [637..638]
 r706: [629..631]
 r707: [629..630]
 r708: [626..627]
 r709: [620..621]
 r710: [616..617]
 r711: [618..619]
 r712: [612..613]
 r713: [614..615]
 r714: [608..609]
 r715: [610..611]
 r716: [606..607]
 r717: [600..601]
 r718: [591..592]
 r719: [589..590]
 r720: [580..581]
 r721: [574..575]
 r722: [564..565]
 r723: [562..563]
 r724: [553..554]
 r725: [547..548]
 r726: [536..537]
 r727: [534..535]
 r728: [525..526]
 r729: [519..520]
 r730: [508..509]
 r731: [506..507]
 r732: [499..500]
 r733: [497..498]
 r734: [495..496]
 r735: [492..493]
 r736: [419..420]
 r737: [417..418]
 r738: [414..415]
 r739: [410..411]
 r740: [408..409]
 r741: [394..395]
 r742: [392..393]
 r743: [386..387]
 r744: [378..379]
 r745: [374..375]
 r746: [376..377]
 r747: [372..373]
 r748: [369..370]
 r749: [367..368]
 r750: [364..365]
 r751: [362..363]
 r752: [359..360]
 r753: [488..489]
 r754: [485..486]
 r755: [481..482]
 r756: [479..480]
 r757: [476..477]
 r758: [472..473]
 r759: [470..471]
 r760: [456..457]
 r761: [454..455]
 r762: [448..449]
 r763: [440..441]
 r764: [436..437]
 r765: [438..439]
 r766: [434..435]
 r767: [431..432]
 r768: [429..430]
 r769: [426..427]
 r770: [424..425]
 r771: [421..422]
 r772: [357..358]
 r773: [354..355]
 r774: [351..352]
 r775: [348..349]
 r776: [335..336]
 r777: [332..333]
 r778: [329..330]
 r779: [322..323]
 r780: [308..309]
 r781: [313..314]
 r782: [306..307]
 r783: [303..304]
 r784: [300..301]
 r785: [297..298]
 r786: [290..291]
 r787: [275..276]
 r788: [273..274]
 r789: [270..271]
 r790: [267..268]
 r791: [264..265]
 r792: [257..258]
 r793: [242..243]
 r794: [240..241]
 r795: [237..238]
 r796: [230..231]
 r797: [232..233]
 r798: [228..229]
 r799: [225..226]
 r800: [222..223]
 r801: [213..214]
 r802: [215..216]
 r803: [206..207]
 r804: [208..209]
 r805: [184..186]
 r806: [184..185]
 r807: [153..154]
 r808: [177..178]
 r809: [179..180]
 r810: [173..174]
 r811: [171..172]
 r812: [169..170]
 r813: [166..168]
 r814: [165..167]
 r815: [162..164]
 r816: [161..163]
 r817: [158..160]
 r818: [157..159]
 r819: [155..156]
 r820: [151..152]
 r821: [146..147]
 r822: [148..149]
 r823: [144..145]
 r824: [139..140]
 r825: [141..142]
 r826: [137..138]
 r827: [132..133]
 r828: [134..135]
 r829: [130..131]
 r830: [125..126]
 r831: [127..128]
 r832: [123..124]
 r833: [120..121]
 r834: [115..116]
 r835: [113..114]
 r836: [110..111]
 r837: [105..106]
 r838: [103..104]
 r839: [100..101]
 r840: [98..99]
 r841: [95..96]
 r842: [93..94]
 r843: [90..91]
 r844: [85..86]
 r845: [83..84]
 r846: [80..81]
 r847: [75..76]
 r848: [73..74]
 r849: [70..71]
 r850: [68..69]
 r851: [65..66]
 r852: [63..64]
 r853: [60..61]
 r854: [55..56]
 r855: [53..54]
 r856: [50..51]
 r857: [45..46]
 r858: [43..44]
 r859: [40..41]
 r860: [38..39]
 r861: [35..36]
 r862: [33..34]
 r863: [30..31]
 r864: [25..26]
 r865: [23..24]
 r866: [20..21]
 r867: [15..16]
 r868: [13..14]
 r869: [10..11]
 r870: [8..9]
 r871: [5..6]
 r872: [0..1]
 r873: [1462..1464]
 r874: [1211..1213]
 r875: [1183..1185]
 r877: [1126..1128]
 r878: [1119..1121]
 r879: [1088..1090]
 r880: [1075..1077]
 r881: [1062..1064]
 r882: [987..989]
 r883: [928..929]
 r884: [913..914]
 r885: [893..894]
 r886: [878..879]
 r887: [857..858]
 r888: [842..843]
 r889: [823..825]
 r890: [810..811]
 r891: [795..796]
 r892: [780..781]
 r893: [765..766]
 r894: [755..757]
 r895: [702..704]
 r896: [694..696]
 r897: [679..681]
 r898: [664..666]
 r899: [634..636]
 r900: [583..584]
 r901: [556..557]
 r902: [528..529]
 r903: [406..407]
 r905: [390..391]
 r907: [468..469]
 r909: [452..453]
 r911: [339..341]
 r912: [325..326]
 r913: [310..312]
 r914: [293..294]
 r915: [277..279]
 r916: [260..261]
 r917: [244..246]
 r924: [442..443]
 r925: [459..460]
 r926: [380..381]
 r927: [397..398]
 r928: [1142..1143]
 r929: [1144..1148]
 r930: [758..764]
 r931: [382..389]
 r932: [399..405]
 r933: [444..451]
 r934: [461..467]
Compressing live ranges: from 1498 to 1260 - 84%
Ranges after the compression:
 r87: [1252..1253]
 r88: [1240..1243]
 r89: [1240..1241]
 r90: [1238..1239]
 r91: [1222..1223]
 r92: [1216..1217]
 r93: [1214..1215]
 r94: [1208..1209]
 r95: [1206..1207]
 r96: [1190..1197]
 r97: [1192..1195]
 r98: [1192..1193]
 r99: [1190..1191]
 r100: [1184..1185]
 r101: [1184..1185]
 r102: [1182..1183]
 r103: [1164..1169]
 r104: [1166..1167]
 r105: [1164..1165]
 r106: [1158..1159]
 r107: [1148..1153]
 r108: [1150..1151]
 r109: [1148..1149]
 r110: [1142..1143]
 r111: [1132..1137]
 r112: [1134..1135]
 r113: [1132..1133]
 r114: [1126..1127]
 r115: [1124..1125]
 r116: [1118..1119]
 r117: [1108..1113]
 r118: [1110..1111]
 r119: [1108..1109]
 r120: [1096..1099]
 r121: [1096..1097]
 r122: [1092..1095]
 r123: [1092..1093]
 r124: [1086..1087]
 r125: [1082..1085]
 r126: [1082..1083]
 r127: [1078..1081]
 r128: [1078..1079]
 r129: [1076..1077]
 r130: [1074..1075]
 r131: [1068..1069]
 r132: [1064..1067]
 r133: [1064..1065]
 r134: [1060..1063]
 r135: [1060..1061]
 r136: [1058..1059]
 r137: [1056..1057]
 r138: [1050..1051]
 r139: [1046..1049]
 r140: [1046..1047]
 r141: [1042..1045]
 r142: [1042..1043]
 r143: [1040..1041]
 r144: [1038..1039]
 r145: [1032..1033]
 r146: [1018..1031]
 r147: [1026..1029]
 r148: [1026..1027]
 r149: [1022..1025]
 r150: [1020..1021]
 r151: [1018..1019]
 r152: [1016..1017]
 r153: [1010..1011]
 r154: [996..1009]
 r155: [1004..1007]
 r156: [1004..1005]
 r157: [1000..1003]
 r158: [998..999]
 r159: [996..997]
 r160: [992..993]
 r161: [992..993]
 r162: [990..991]
 r163: [986..987]
 r164: [980..981]
 r165: [976..977]
 r166: [974..975]
 r168: [968..971]
 r169: [962..963]
 r170: [960..961]
 r171: [952..959]
 r172: [954..955]
 r173: [950..953]
 r174: [948..949]
 r175: [946..947]
 r176: [920..921]
 r177: [910..911]
 r178: [900..901]
 r179: [878..879]
 r180: [872..873]
 r181: [866..867]
 r182: [858..859]
 r183: [854..855]
 r184: [850..851]
 r185: [844..845]
 r186: [844..845]
 r187: [842..843]
 r188: [836..837]
 r189: [834..835]
 r190: [832..833]
 r191: [826..827]
 r192: [820..821]
 r193: [818..819]
 r194: [812..813]
 r195: [792..795]
 r196: [792..793]
 r197: [790..791]
 r198: [788..789]
 r199: [778..783]
 r200: [780..781]
 r201: [778..779]
 r202: [776..777]
 r203: [774..775]
 r204: [772..773]
 r205: [760..769]
 r206: [764..767]
 r207: [764..765]
 r208: [762..763]
 r209: [760..761]
 r210: [754..755]
 r211: [746..751]
 r212: [748..749]
 r213: [746..747]
 r214: [744..745]
 r215: [742..743]
 r216: [740..741]
 r217: [728..737]
 r218: [732..735]
 r219: [732..733]
 r220: [730..731]
 r221: [728..729]
 r222: [726..727]
 r223: [722..723]
 r224: [714..719]
 r225: [716..717]
 r226: [714..715]
 r227: [712..713]
 r228: [710..711]
 r229: [708..709]
 r230: [696..705]
 r231: [700..703]
 r232: [700..701]
 r233: [698..699]
 r234: [696..697]
 r235: [694..695]
 r236: [676..679]
 r237: [676..677]
 r238: [674..675]
 r239: [672..673]
 r240: [662..665]
 r241: [662..663]
 r242: [660..661]
 r243: [658..659]
 r244: [648..651]
 r245: [648..649]
 r246: [646..647]
 r247: [644..645]
 r249: [632..635]
 r250: [630..631]
 r251: [624..627]
 r252: [624..625]
 r253: [622..623]
 r254: [620..621]
 r255: [612..615]
 r256: [612..613]
 r257: [610..611]
 r258: [608..609]
 r259: [600..603]
 r260: [600..601]
 r261: [598..599]
 r262: [596..597]
 r263: [574..575]
 r264: [572..573]
 r265: [562..563]
 r266: [560..561]
 r267: [550..551]
 r268: [548..549]
 r269: [544..545]
 r270: [532..533]
 r271: [528..531]
 r272: [518..523]
 r273: [520..521]
 r274: [518..519]
 r275: [500..501]
 r276: [500..501]
 r277: [496..499]
 r278: [496..497]
 r279: [494..495]
 r280: [492..493]
 r281: [490..491]
 r282: [486..487]
 r283: [484..485]
 r284: [468..481]
 r285: [478..479]
 r286: [478..479]
 r287: [474..477]
 r288: [474..475]
 r289: [472..473]
 r290: [470..471]
 r291: [468..469]
 r292: [462..463]
 r293: [460..461]
 r294: [444..457]
 r295: [454..455]
 r296: [454..455]
 r297: [450..453]
 r298: [450..451]
 r299: [448..449]
 r300: [446..447]
 r301: [444..445]
 r302: [442..443]
 r303: [438..439]
 r304: [436..437]
 r305: [420..433]
 r306: [430..431]
 r307: [430..431]
 r308: [426..429]
 r309: [426..427]
 r310: [424..425]
 r311: [422..423]
 r312: [420..421]
 r313: [418..419]
 r314: [414..415]
 r315: [412..413]
 r316: [410..411]
 r317: [402..405]
 r318: [402..403]
 r319: [334..337]
 r320: [334..335]
 r322: [326..327]
 r323: [324..325]
 r324: [320..323]
 r325: [318..319]
 r327: [312..313]
 r328: [310..311]
 r329: [306..309]
 r330: [296..297]
 r331: [292..293]
 r332: [288..289]
 r333: [396..399]
 r334: [396..397]
 r335: [388..391]
 r336: [388..389]
 r338: [380..381]
 r339: [378..379]
 r340: [374..377]
 r341: [372..373]
 r343: [366..367]
 r344: [364..365]
 r345: [360..363]
 r346: [350..351]
 r347: [346..347]
 r348: [342..343]
 r349: [274..285]
 r350: [282..283]
 r351: [278..281]
 r352: [278..279]
 r353: [276..277]
 r354: [272..275]
 r355: [270..271]
 r356: [266..267]
 r357: [252..265]
 r358: [262..263]
 r359: [256..259]
 r360: [256..257]
 r361: [254..255]
 r362: [252..253]
 r363: [248..251]
 r364: [222..243]
 r365: [240..241]
 r366: [224..239]
 r367: [236..237]
 r368: [228..233]
 r369: [230..231]
 r370: [228..229]
 r371: [226..227]
 r372: [224..225]
 r373: [220..223]
 r374: [194..215]
 r375: [212..213]
 r376: [196..211]
 r377: [208..209]
 r378: [200..205]
 r379: [202..203]
 r380: [200..201]
 r381: [198..199]
 r382: [196..197]
 r383: [192..195]
 r384: [186..187]
 r385: [184..185]
 r386: [182..183]
 r387: [176..177]
 r388: [172..175]
 r389: [172..173]
 r390: [170..171]
 r391: [168..169]
 r392: [164..165]
 r393: [162..163]
 r394: [158..159]
 r395: [158..159]
 r396: [156..157]
 r397: [154..155]
 r398: [154..155]
 r399: [152..153]
 r400: [146..147]
 r401: [146..147]
 r402: [120..121]
 r403: [114..115]
 r404: [108..109]
 r405: [102..103]
 r406: [94..97]
 r407: [94..95]
 r408: [92..93]
 r409: [86..89]
 r410: [86..87]
 r411: [84..85]
 r412: [80..81]
 r413: [76..77]
 r414: [70..73]
 r415: [70..71]
 r416: [68..69]
 r417: [62..65]
 r418: [62..63]
 r419: [60..61]
 r420: [56..57]
 r421: [52..53]
 r422: [46..49]
 r423: [46..47]
 r424: [44..45]
 r425: [38..41]
 r426: [38..39]
 r427: [36..37]
 r428: [32..33]
 r429: [28..29]
 r430: [22..25]
 r431: [22..23]
 r432: [20..21]
 r433: [14..17]
 r434: [14..15]
 r435: [12..13]
 r436: [8..9]
 r437: [2..5]
 r438: [2..3]
 r439: [0..1]
 r440: [1182..1187]
 r441: [990..993]
 r442: [152..159]
 r443: [150..155]
 r444: [1228..1229]
 r445: [1224..1227]
 r446: [1226..1227]
 r447: [1224..1225]
 r448: [140..141]
 r449: [964..965]
 r450: [956..963]
 r451: [926..927]
 r452: [922..925]
 r453: [916..917]
 r454: [912..915]
 r455: [906..907]
 r456: [902..905]
 r457: [840..841]
 r458: [828..839]
 r459: [830..831]
 r460: [828..829]
 r461: [816..817]
 r462: [814..815]
 r463: [692..693]
 r464: [688..691]
 r465: [690..691]
 r466: [688..689]
 r467: [588..589]
 r468: [584..587]
 r469: [578..579]
 r470: [572..577]
 r471: [566..567]
 r472: [560..565]
 r473: [554..555]
 r474: [548..553]
 r475: [1258..1259]
 r476: [1256..1257]
 r477: [1254..1255]
 r478: [1250..1251]
 r479: [1252..1253]
 r480: [1248..1249]
 r481: [1246..1247]
 r482: [1244..1245]
 r483: [1242..1243]
 r484: [1236..1237]
 r485: [1234..1235]
 r486: [1232..1233]
 r487: [1230..1231]
 r488: [1220..1221]
 r489: [1218..1219]
 r490: [1212..1213]
 r491: [1214..1215]
 r492: [1210..1211]
 r493: [1204..1205]
 r494: [1206..1207]
 r495: [1202..1203]
 r496: [1202..1203]
 r497: [1200..1201]
 r498: [1198..1199]
 r499: [1196..1197]
 r500: [1194..1195]
 r501: [1188..1189]
 r502: [1186..1187]
 r503: [1180..1181]
 r504: [1178..1179]
 r505: [1176..1177]
 r506: [1174..1175]
 r507: [1172..1173]
 r508: [1170..1171]
 r509: [1170..1171]
 r510: [1168..1169]
 r511: [1168..1169]
 r512: [1162..1163]
 r513: [1160..1161]
 r514: [1160..1161]
 r515: [1156..1157]
 r516: [1158..1159]
 r517: [1154..1155]
 r518: [1154..1155]
 r519: [1152..1153]
 r520: [1152..1153]
 r521: [1146..1147]
 r522: [1144..1145]
 r523: [1144..1145]
 r524: [1140..1141]
 r525: [1142..1143]
 r526: [1138..1139]
 r527: [1138..1139]
 r528: [1136..1137]
 r529: [1136..1137]
 r530: [1130..1131]
 r531: [1128..1129]
 r532: [1128..1129]
 r533: [1122..1123]
 r534: [1124..1125]
 r535: [1120..1121]
 r536: [1120..1121]
 r537: [1116..1117]
 r538: [1118..1119]
 r539: [1114..1115]
 r540: [1114..1115]
 r541: [1112..1113]
 r542: [1112..1113]
 r543: [1106..1107]
 r544: [1104..1105]
 r545: [1102..1103]
 r546: [896..897]
 r547: [894..895]
 r548: [892..893]
 r549: [890..891]
 r550: [888..889]
 r551: [886..887]
 r552: [884..885]
 r553: [882..883]
 r554: [1100..1101]
 r555: [1098..1099]
 r556: [1094..1095]
 r557: [1090..1091]
 r558: [1088..1089]
 r559: [1084..1085]
 r560: [1080..1081]
 r561: [1072..1073]
 r562: [1070..1071]
 r563: [1066..1067]
 r564: [1062..1063]
 r565: [1054..1055]
 r566: [1052..1053]
 r567: [1048..1049]
 r568: [1044..1045]
 r569: [1036..1037]
 r570: [1034..1035]
 r571: [1032..1033]
 r572: [1030..1031]
 r573: [1028..1029]
 r574: [1024..1025]
 r575: [1014..1015]
 r576: [1016..1017]
 r577: [1012..1013]
 r578: [1010..1011]
 r579: [1008..1009]
 r580: [1006..1007]
 r581: [1002..1003]
 r582: [994..995]
 r583: [988..989]
 r584: [988..989]
 r585: [984..985]
 r586: [982..983]
 r587: [978..979]
 r588: [980..981]
 r589: [976..977]
 r590: [972..973]
 r591: [966..967]
 r592: [962..963]
 r593: [958..959]
 r594: [944..945]
 r595: [946..947]
 r596: [940..941]
 r597: [942..943]
 r598: [936..937]
 r599: [938..939]
 r600: [932..933]
 r601: [934..935]
 r602: [928..929]
 r603: [930..931]
 r604: [924..925]
 r605: [918..919]
 r606: [920..921]
 r607: [914..915]
 r608: [908..909]
 r609: [910..911]
 r610: [904..905]
 r611: [898..899]
 r612: [900..901]
 r613: [880..881]
 r614: [878..879]
 r615: [876..877]
 r616: [874..875]
 r617: [872..873]
 r618: [870..871]
 r619: [870..871]
 r620: [868..869]
 r621: [866..867]
 r622: [862..863]
 r623: [864..865]
 r624: [864..865]
 r625: [860..861]
 r626: [860..861]
 r627: [858..859]
 r628: [856..857]
 r629: [854..855]
 r630: [852..853]
 r631: [848..849]
 r632: [850..851]
 r633: [846..847]
 r634: [838..839]
 r635: [824..825]
 r636: [822..823]
 r637: [810..811]
 r638: [806..807]
 r639: [808..809]
 r640: [802..803]
 r641: [804..805]
 r642: [798..799]
 r643: [800..801]
 r644: [796..797]
 r645: [794..795]
 r646: [788..789]
 r647: [786..787]
 r648: [782..783]
 r649: [768..769]
 r650: [766..767]
 r651: [758..759]
 r652: [756..757]
 r653: [750..751]
 r654: [736..737]
 r655: [734..735]
 r656: [726..727]
 r657: [724..725]
 r658: [718..719]
 r659: [704..705]
 r660: [702..703]
 r661: [694..695]
 r662: [686..687]
 r663: [684..685]
 r664: [682..683]
 r665: [678..679]
 r666: [670..671]
 r667: [668..669]
 r668: [664..665]
 r669: [656..657]
 r670: [654..655]
 r671: [650..651]
 r672: [642..643]
 r673: [640..641]
 r674: [636..637]
 r675: [636..637]
 r676: [628..629]
 r677: [626..627]
 r678: [618..619]
 r679: [616..617]
 r680: [614..615]
 r681: [606..607]
 r682: [604..605]
 r683: [602..603]
 r684: [594..595]
 r685: [592..593]
 r686: [590..591]
 r687: [582..583]
 r688: [586..587]
 r689: [580..581]
 r690: [576..577]
 r691: [570..571]
 r692: [568..569]
 r693: [564..565]
 r694: [558..559]
 r695: [556..557]
 r696: [552..553]
 r697: [546..547]
 r698: [544..545]
 r699: [542..543]
 r700: [540..541]
 r701: [538..539]
 r702: [536..537]
 r703: [534..535]
 r704: [526..527]
 r705: [530..531]
 r706: [524..525]
 r707: [524..525]
 r708: [522..523]
 r709: [516..517]
 r710: [512..513]
 r711: [514..515]
 r712: [508..509]
 r713: [510..511]
 r714: [504..505]
 r715: [506..507]
 r716: [502..503]
 r717: [498..499]
 r718: [490..491]
 r719: [488..489]
 r720: [480..481]
 r721: [476..477]
 r722: [466..467]
 r723: [464..465]
 r724: [456..457]
 r725: [452..453]
 r726: [442..443]
 r727: [440..441]
 r728: [432..433]
 r729: [428..429]
 r730: [418..419]
 r731: [416..417]
 r732: [410..411]
 r733: [408..409]
 r734: [406..407]
 r735: [404..405]
 r736: [340..341]
 r737: [338..339]
 r738: [336..337]
 r739: [332..333]
 r740: [330..331]
 r741: [318..319]
 r742: [316..317]
 r743: [312..313]
 r744: [304..305]
 r745: [300..301]
 r746: [302..303]
 r747: [298..299]
 r748: [296..297]
 r749: [294..295]
 r750: [292..293]
 r751: [290..291]
 r752: [288..289]
 r753: [400..401]
 r754: [398..399]
 r755: [394..395]
 r756: [392..393]
 r757: [390..391]
 r758: [386..387]
 r759: [384..385]
 r760: [372..373]
 r761: [370..371]
 r762: [366..367]
 r763: [358..359]
 r764: [354..355]
 r765: [356..357]
 r766: [352..353]
 r767: [350..351]
 r768: [348..349]
 r769: [346..347]
 r770: [344..345]
 r771: [342..343]
 r772: [286..287]
 r773: [284..285]
 r774: [282..283]
 r775: [280..281]
 r776: [268..269]
 r777: [266..267]
 r778: [264..265]
 r779: [258..259]
 r780: [246..247]
 r781: [250..251]
 r782: [244..245]
 r783: [242..243]
 r784: [240..241]
 r785: [238..239]
 r786: [232..233]
 r787: [218..219]
 r788: [216..217]
 r789: [214..215]
 r790: [212..213]
 r791: [210..211]
 r792: [204..205]
 r793: [190..191]
 r794: [188..189]
 r795: [186..187]
 r796: [180..181]
 r797: [182..183]
 r798: [178..179]
 r799: [176..177]
 r800: [174..175]
 r801: [166..167]
 r802: [168..169]
 r803: [160..161]
 r804: [162..163]
 r805: [148..149]
 r806: [148..149]
 r807: [124..125]
 r808: [142..143]
 r809: [144..145]
 r810: [138..139]
 r811: [136..137]
 r812: [134..135]
 r813: [132..133]
 r814: [132..133]
 r815: [130..131]
 r816: [130..131]
 r817: [128..129]
 r818: [128..129]
 r819: [126..127]
 r820: [122..123]
 r821: [118..119]
 r822: [120..121]
 r823: [116..117]
 r824: [112..113]
 r825: [114..115]
 r826: [110..111]
 r827: [106..107]
 r828: [108..109]
 r829: [104..105]
 r830: [100..101]
 r831: [102..103]
 r832: [98..99]
 r833: [96..97]
 r834: [92..93]
 r835: [90..91]
 r836: [88..89]
 r837: [84..85]
 r838: [82..83]
 r839: [80..81]
 r840: [78..79]
 r841: [76..77]
 r842: [74..75]
 r843: [72..73]
 r844: [68..69]
 r845: [66..67]
 r846: [64..65]
 r847: [60..61]
 r848: [58..59]
 r849: [56..57]
 r850: [54..55]
 r851: [52..53]
 r852: [50..51]
 r853: [48..49]
 r854: [44..45]
 r855: [42..43]
 r856: [40..41]
 r857: [36..37]
 r858: [34..35]
 r859: [32..33]
 r860: [30..31]
 r861: [28..29]
 r862: [26..27]
 r863: [24..25]
 r864: [20..21]
 r865: [18..19]
 r866: [16..17]
 r867: [12..13]
 r868: [10..11]
 r869: [8..9]
 r870: [6..7]
 r871: [4..5]
 r872: [0..1]
 r873: [1228..1229]
 r874: [1022..1023]
 r875: [1000..1001]
 r877: [956..957]
 r878: [950..951]
 r879: [922..923]
 r880: [912..913]
 r881: [902..903]
 r882: [840..841]
 r883: [784..785]
 r884: [770..771]
 r885: [752..753]
 r886: [738..739]
 r887: [720..721]
 r888: [706..707]
 r889: [692..693]
 r890: [680..681]
 r891: [666..667]
 r892: [652..653]
 r893: [638..639]
 r894: [632..633]
 r895: [584..585]
 r896: [578..579]
 r897: [566..567]
 r898: [554..555]
 r899: [528..529]
 r900: [482..483]
 r901: [458..459]
 r902: [434..435]
 r903: [328..329]
 r905: [314..315]
 r907: [382..383]
 r909: [368..369]
 r911: [272..273]
 r912: [260..261]
 r913: [248..249]
 r914: [234..235]
 r915: [220..221]
 r916: [206..207]
 r917: [192..193]
 r924: [360..361]
 r925: [374..375]
 r926: [306..307]
 r927: [320..321]
 r928: [968..969]
 r929: [970..973]
 r930: [634..637]
 r931: [308..313]
 r932: [322..327]
 r933: [362..367]
 r934: [376..381]

********** Assignment #2: **********

	 Assigning to 933 (cl=ALL_SSE_REGS, orig=342, freq=2, tfirst=924, tfreq=2)...
	 Assigning to 924 (cl=SSE_REGS, orig=342, freq=2, tfirst=924, tfreq=2)...
	   Assign 26 to optional reload r924 (freq=2)
	Hard reg 26 is preferable by r933 with profit 1
	 Assigning to 934 (cl=ALL_SSE_REGS, orig=337, freq=2, tfirst=925, tfreq=2)...
	 Assigning to 925 (cl=SSE_REGS, orig=337, freq=2, tfirst=925, tfreq=2)...
	   Assign 28 to optional reload r925 (freq=2)
	Hard reg 28 is preferable by r934 with profit 1
	 Assigning to 931 (cl=ALL_SSE_REGS, orig=326, freq=2, tfirst=926, tfreq=2)...
	 Assigning to 926 (cl=SSE_REGS, orig=326, freq=2, tfirst=926, tfreq=2)...
	   Assign 26 to optional reload r926 (freq=2)
	Hard reg 26 is preferable by r931 with profit 1
	 Assigning to 932 (cl=ALL_SSE_REGS, orig=321, freq=2, tfirst=927, tfreq=2)...
	 Assigning to 927 (cl=SSE_REGS, orig=321, freq=2, tfirst=927, tfreq=2)...
	   Assign 27 to optional reload r927 (freq=2)
	Hard reg 27 is preferable by r932 with profit 1
	 Assigning to 929 (cl=SSE_REGS, orig=167, freq=2, tfirst=928, tfreq=2)...
	 Assigning to 928 (cl=SSE_REGS, orig=167, freq=2, tfirst=928, tfreq=2)...
	   Assign 28 to optional reload r928 (freq=2)
	Hard reg 21 is preferable by r929 with profit 1
	Hard reg 28 is preferable by r929 with profit 1
	 Assigning to 930 (cl=ALL_SSE_REGS, orig=248, freq=2, tfirst=930, tfreq=2)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
 1209: r928:SF=r167:SF
      REG_DEAD r167:SF
   Insn after restoring regs:
  299: r167:SF=r166:SF
      REG_DEAD r166:SF
   Insn after restoring regs:
 1159: r894:SF=r248:SF
      REG_DEAD r248:SF
   Insn after restoring regs:
 1158: r248:SF=r893:SF
      REG_DEAD r893:SF
   Insn after restoring regs:
 1207: r926:SF=r326:SF
      REG_DEAD r326:SF
   Insn after restoring regs:
 1179: r326:SF=r905:SF
      REG_DEAD r905:SF
   Insn after restoring regs:
 1208: r927:SF=r321:SF
      REG_DEAD r321:SF
   Insn after restoring regs:
 1177: r321:SF=r903:SF
      REG_DEAD r903:SF
   Insn after restoring regs:
 1205: r924:SF=r342:SF
      REG_DEAD r342:SF
   Insn after restoring regs:
 1183: r342:SF=r909:SF
      REG_DEAD r909:SF
   Insn after restoring regs:
 1206: r925:SF=r337:SF
      REG_DEAD r337:SF
   Insn after restoring regs:
 1181: r337:SF=r907:SF
      REG_DEAD r907:SF
Keep optional reload reg 876
Keep optional reload reg 904
Keep optional reload reg 906
Keep optional reload reg 908
Keep optional reload reg 910
Remove optional reload reg 924
  Restoring original insn:
  783: r763:SF=r345:SF*r342:SF
      REG_DEAD r342:SF
      REG_DEAD r345:SF
  Deleting move 1205
 1205: r924:SF=r342:SF
      REG_DEAD r342:SF
deleting insn with uid = 1205.
Remove optional reload reg 925
  Restoring original insn:
  772: r341:SF=r340:SF*r337:SF
      REG_DEAD r337:SF
      REG_DEAD r340:SF
  Deleting move 1206
 1206: r925:SF=r337:SF
      REG_DEAD r337:SF
deleting insn with uid = 1206.
Remove optional reload reg 926
  Restoring original insn:
  726: r744:SF=r329:SF*r326:SF
      REG_DEAD r326:SF
      REG_DEAD r329:SF
  Deleting move 1207
 1207: r926:SF=r326:SF
      REG_DEAD r326:SF
deleting insn with uid = 1207.
Remove optional reload reg 927
  Restoring original insn:
  715: r325:SF=r324:SF*r321:SF
      REG_DEAD r321:SF
      REG_DEAD r324:SF
  Deleting move 1208
 1208: r927:SF=r321:SF
      REG_DEAD r321:SF
deleting insn with uid = 1208.
Remove optional reload reg 928
  Restoring original insn:
  304: r591:SF=r168:SF*r167:SF
      REG_DEAD r167:SF
      REG_DEAD r168:SF
  Deleting move 1209
 1209: r928:SF=r167:SF
      REG_DEAD r167:SF
deleting insn with uid = 1209.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 783:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 772:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 726:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 26
   Insn 1104: point = 0, n_alt = -1
   Insn 1082: point = 0, n_alt = 8
   Insn 1081: point = 1, n_alt = 3
   Insn 1080: point = 2, n_alt = 1
   Insn 1079: point = 4, n_alt = 1
   Insn 1078: point = 6, n_alt = 7
   Insn 1077: point = 7, n_alt = 7
   Insn 1076: point = 9, n_alt = 3
   Insn 1075: point = 10, n_alt = 8
   Insn 1074: point = 11, n_alt = 3
   Insn 1073: point = 12, n_alt = 1
   Insn 1072: point = 14, n_alt = 7
   Insn 1071: point = 15, n_alt = 8
   Insn 1070: point = 16, n_alt = 3
   Insn 1069: point = 17, n_alt = 1
   Insn 1068: point = 19, n_alt = 1
   Insn 1067: point = 21, n_alt = 7
   Insn 1066: point = 22, n_alt = 7
   Insn 1065: point = 24, n_alt = 3
   Insn 1064: point = 25, n_alt = 8
   Insn 1063: point = 26, n_alt = 3
   Insn 1062: point = 27, n_alt = 1
   Insn 1061: point = 29, n_alt = 1
   Insn 1060: point = 31, n_alt = 7
   Insn 1059: point = 32, n_alt = 7
   Insn 1058: point = 34, n_alt = 3
   Insn 1057: point = 35, n_alt = 8
   Insn 1056: point = 36, n_alt = 3
   Insn 1055: point = 37, n_alt = 1
   Insn 1054: point = 39, n_alt = 7
   Insn 1053: point = 40, n_alt = 8
   Insn 1052: point = 41, n_alt = 3
   Insn 1051: point = 42, n_alt = 1
   Insn 1050: point = 44, n_alt = 7
   Insn 1049: point = 45, n_alt = 8
   Insn 1048: point = 46, n_alt = 3
   Insn 1047: point = 47, n_alt = 1
   Insn 1046: point = 49, n_alt = 1
   Insn 1045: point = 51, n_alt = 7
   Insn 1044: point = 52, n_alt = 7
   Insn 1043: point = 54, n_alt = 3
   Insn 1042: point = 55, n_alt = 8
   Insn 1041: point = 56, n_alt = 3
   Insn 1040: point = 57, n_alt = 1
   Insn 1039: point = 59, n_alt = 1
   Insn 1038: point = 61, n_alt = 7
   Insn 1037: point = 62, n_alt = 7
   Insn 1036: point = 64, n_alt = 3
   Insn 1035: point = 65, n_alt = 8
   Insn 1034: point = 66, n_alt = 3
   Insn 1033: point = 67, n_alt = 1
   Insn 1032: point = 69, n_alt = 7
   Insn 1031: point = 70, n_alt = 8
   Insn 1030: point = 71, n_alt = 3
   Insn 1029: point = 72, n_alt = 1
   Insn 1028: point = 74, n_alt = 7
   Insn 1027: point = 75, n_alt = 8
   Insn 1026: point = 76, n_alt = 3
   Insn 1025: point = 77, n_alt = 1
   Insn 1024: point = 79, n_alt = 1
   Insn 1023: point = 81, n_alt = 7
   Insn 1022: point = 82, n_alt = 7
   Insn 1021: point = 84, n_alt = 3
   Insn 1020: point = 85, n_alt = 8
   Insn 1019: point = 86, n_alt = 3
   Insn 1018: point = 87, n_alt = 1
   Insn 1017: point = 89, n_alt = 1
   Insn 1016: point = 91, n_alt = 7
   Insn 1015: point = 92, n_alt = 7
   Insn 1014: point = 94, n_alt = 3
   Insn 1013: point = 95, n_alt = 8
   Insn 1012: point = 96, n_alt = 3
   Insn 1011: point = 97, n_alt = 1
   Insn 1010: point = 99, n_alt = 7
   Insn 1009: point = 100, n_alt = 8
   Insn 1008: point = 101, n_alt = 3
   Insn 1007: point = 102, n_alt = 1
   Insn 1006: point = 104, n_alt = 7
   Insn 1005: point = 105, n_alt = 8
   Insn 1004: point = 106, n_alt = 3
   Insn 1003: point = 107, n_alt = 1
   Insn 1002: point = 109, n_alt = 1
   Insn 1001: point = 111, n_alt = 7
   Insn 1000: point = 112, n_alt = 7
   Insn 999: point = 114, n_alt = 3
   Insn 998: point = 115, n_alt = 8
   Insn 997: point = 116, n_alt = 3
   Insn 996: point = 117, n_alt = 1
   Insn 995: point = 119, n_alt = 1
   Insn 994: point = 121, n_alt = 7
   Insn 993: point = 122, n_alt = 7
   Insn 992: point = 124, n_alt = 3
   Insn 991: point = 125, n_alt = 8
   Insn 990: point = 126, n_alt = 0
   Insn 989: point = 128, n_alt = 2
   Insn 988: point = 129, n_alt = 2
   Insn 987: point = 131, n_alt = 7
   Insn 986: point = 132, n_alt = 8
   Insn 985: point = 133, n_alt = 0
   Insn 984: point = 135, n_alt = 2
   Insn 983: point = 136, n_alt = 2
   Insn 982: point = 138, n_alt = 7
   Insn 981: point = 139, n_alt = 8
   Insn 980: point = 140, n_alt = 0
   Insn 979: point = 142, n_alt = 2
   Insn 978: point = 143, n_alt = 2
   Insn 977: point = 145, n_alt = 7
   Insn 976: point = 146, n_alt = 8
   Insn 975: point = 147, n_alt = 0
   Insn 974: point = 149, n_alt = 2
   Insn 973: point = 150, n_alt = 2
   Insn 972: point = 152, n_alt = 7
  BB 23
   Insn 1111: point = 153, n_alt = -1
   Insn 922: point = 153, n_alt = 1
   Insn 921: point = 154, n_alt = 3
  BB 25
   Insn 969: point = 155, n_alt = 0
   Insn 968: point = 155, n_alt = -1
   Insn 967: point = 156, n_alt = 3
   Insn 966: point = 157, n_alt = 0
   Insn 965: point = 157, n_alt = -1
   Insn 964: point = 158, n_alt = -1
   Insn 963: point = 159, n_alt = 0
   Insn 962: point = 159, n_alt = 3
   Insn 961: point = 160, n_alt = 3
   Insn 960: point = 161, n_alt = 0
   Insn 959: point = 161, n_alt = -1
   Insn 958: point = 162, n_alt = -1
   Insn 957: point = 163, n_alt = 0
   Insn 956: point = 163, n_alt = 3
   Insn 955: point = 164, n_alt = 3
   Insn 954: point = 165, n_alt = 0
   Insn 953: point = 165, n_alt = -1
   Insn 952: point = 166, n_alt = -1
   Insn 951: point = 167, n_alt = 0
   Insn 950: point = 167, n_alt = 3
   Insn 949: point = 168, n_alt = 3
   Insn 948: point = 169, n_alt = 0
   Insn 947: point = 169, n_alt = -1
   Insn 946: point = 170, n_alt = 4
   Insn 945: point = 170, n_alt = 0
   Insn 944: point = 170, n_alt = 3
   Insn 943: point = 171, n_alt = 0
   Insn 942: point = 171, n_alt = -1
   Insn 941: point = 172, n_alt = 3
   Insn 940: point = 173, n_alt = 1
   Insn 939: point = 173, n_alt = 1
   Insn 938: point = 173, n_alt = 1
   Insn 937: point = 173, n_alt = 5
   Insn 936: point = 174, n_alt = 4
  BB 27
   Insn 1117: point = 175, n_alt = -1
  BB 5
   Insn 93: point = 175, n_alt = -1
   Insn 92: point = 175, n_alt = 0
   Insn 91: point = 176, n_alt = 0
   Insn 90: point = 177, n_alt = 0
  BB 24
   Insn 1113: point = 177, n_alt = -1
   Insn 930: point = 177, n_alt = 1
   Insn 929: point = 177, n_alt = 8
   Insn 928: point = 178, n_alt = 1
   Insn 927: point = 180, n_alt = 7
  BB 22
   Insn 916: point = 181, n_alt = -1
   Insn 915: point = 181, n_alt = 1
   Insn 914: point = 182, n_alt = 7
   Insn 913: point = 183, n_alt = 1
   Insn 912: point = 185, n_alt = 2
   Insn 911: point = 186, n_alt = 7
   Insn 910: point = 187, n_alt = 8
  BB 21
   Insn 9: point = 189, n_alt = -1
  BB 20
   Insn 906: point = 192, n_alt = -1
   Insn 905: point = 192, n_alt = 0
   Insn 904: point = 193, n_alt = 0
   Insn 903: point = 195, n_alt = 0
   Insn 902: point = 196, n_alt = 1
   Insn 901: point = 196, n_alt = 0
   Insn 900: point = 197, n_alt = 1
   Insn 899: point = 197, n_alt = 7
  BB 19
   Insn 896: point = 199, n_alt = 7
  BB 18
   Insn 894: point = 200, n_alt = -1
   Insn 893: point = 200, n_alt = 0
   Insn 892: point = 201, n_alt = 0
   Insn 891: point = 203, n_alt = 0
   Insn 890: point = 204, n_alt = 1
   Insn 889: point = 204, n_alt = 0
   Insn 888: point = 205, n_alt = 1
   Insn 887: point = 205, n_alt = 7
   Insn 886: point = 206, n_alt = 8
   Insn 885: point = 207, n_alt = 0
   Insn 884: point = 209, n_alt = 2
   Insn 883: point = 210, n_alt = 2
   Insn 882: point = 212, n_alt = 7
   Insn 881: point = 213, n_alt = 8
   Insn 880: point = 214, n_alt = 0
   Insn 879: point = 216, n_alt = 2
   Insn 878: point = 217, n_alt = 1
   Insn 877: point = 219, n_alt = 1
   Insn 876: point = 221, n_alt = 7
   Insn 875: point = 223, n_alt = 3
   Insn 874: point = 224, n_alt = 1
   Insn 873: point = 226, n_alt = 7
   Insn 872: point = 227, n_alt = 7
   Insn 871: point = 229, n_alt = 3
   Insn 870: point = 230, n_alt = 8
   Insn 869: point = 231, n_alt = 0
   Insn 868: point = 233, n_alt = 2
   Insn 867: point = 234, n_alt = 1
   Insn 866: point = 236, n_alt = 1
   Insn 865: point = 238, n_alt = 7
   Insn 864: point = 239, n_alt = 7
   Insn 863: point = 241, n_alt = 3
   Insn 862: point = 242, n_alt = 8
   Insn 1198: point = 243, n_alt = -1
   Insn 861: point = 245, n_alt = 2
   Insn 1197: point = 246, n_alt = -1
   Insn 860: point = 248, n_alt = 1
   Insn 859: point = 250, n_alt = -1
   Insn 858: point = 252, n_alt = 1
   Insn 857: point = 254, n_alt = 1
   Insn 856: point = 256, n_alt = 7
   Insn 855: point = 258, n_alt = 3
   Insn 1196: point = 259, n_alt = -1
   Insn 854: point = 261, n_alt = 1
   Insn 1195: point = 261, n_alt = -1
   Insn 853: point = 263, n_alt = 7
   Insn 852: point = 265, n_alt = 3
   Insn 851: point = 266, n_alt = 1
   Insn 850: point = 268, n_alt = 7
   Insn 849: point = 269, n_alt = 7
   Insn 848: point = 271, n_alt = 3
   Insn 847: point = 272, n_alt = 7
   Insn 846: point = 274, n_alt = 3
   Insn 845: point = 275, n_alt = 8
   Insn 1194: point = 276, n_alt = -1
   Insn 844: point = 278, n_alt = 2
   Insn 1193: point = 279, n_alt = -1
   Insn 843: point = 281, n_alt = 1
   Insn 842: point = 283, n_alt = -1
   Insn 841: point = 285, n_alt = 1
   Insn 840: point = 287, n_alt = 1
   Insn 839: point = 289, n_alt = 7
   Insn 838: point = 291, n_alt = 3
   Insn 1192: point = 292, n_alt = -1
   Insn 837: point = 294, n_alt = 1
   Insn 1191: point = 294, n_alt = -1
   Insn 836: point = 296, n_alt = 7
   Insn 835: point = 298, n_alt = 3
   Insn 834: point = 299, n_alt = 1
   Insn 833: point = 301, n_alt = 7
   Insn 832: point = 302, n_alt = 7
   Insn 831: point = 304, n_alt = 3
   Insn 830: point = 305, n_alt = 7
   Insn 829: point = 307, n_alt = 3
   Insn 828: point = 308, n_alt = 8
   Insn 1190: point = 309, n_alt = -1
   Insn 827: point = 311, n_alt = 2
   Insn 1189: point = 312, n_alt = -1
   Insn 826: point = 314, n_alt = 7
   Insn 825: point = 315, n_alt = 1
   Insn 824: point = 317, n_alt = -1
   Insn 823: point = 319, n_alt = 1
   Insn 822: point = 321, n_alt = 1
   Insn 821: point = 323, n_alt = 7
   Insn 1188: point = 324, n_alt = -1
   Insn 820: point = 326, n_alt = 1
   Insn 1187: point = 326, n_alt = -1
   Insn 819: point = 328, n_alt = 7
   Insn 818: point = 330, n_alt = 3
   Insn 817: point = 331, n_alt = 1
   Insn 816: point = 333, n_alt = 7
   Insn 815: point = 334, n_alt = 7
   Insn 814: point = 336, n_alt = 3
   Insn 813: point = 337, n_alt = 8
   Insn 1186: point = 338, n_alt = -1
   Insn 812: point = 340, n_alt = 2
   Insn 1185: point = 341, n_alt = -1
   Insn 811: point = 343, n_alt = 1
   Insn 810: point = 345, n_alt = 1
   Insn 809: point = 347, n_alt = 7
   Insn 808: point = 349, n_alt = 3
   Insn 807: point = 350, n_alt = 1
   Insn 806: point = 352, n_alt = 7
   Insn 805: point = 353, n_alt = 7
   Insn 804: point = 355, n_alt = 3
   Insn 803: point = 356, n_alt = 7
   Insn 802: point = 358, n_alt = 3
  BB 15
   Insn 1108: point = 359, n_alt = -1
   Insn 742: point = 359, n_alt = 8
   Insn 741: point = 360, n_alt = 3
   Insn 740: point = 361, n_alt = 1
   Insn 739: point = 363, n_alt = 7
   Insn 738: point = 364, n_alt = 8
   Insn 737: point = 365, n_alt = 3
   Insn 736: point = 366, n_alt = 1
   Insn 735: point = 368, n_alt = 7
   Insn 734: point = 369, n_alt = 8
   Insn 733: point = 370, n_alt = 3
   Insn 732: point = 371, n_alt = 1
   Insn 731: point = 373, n_alt = 7
   Insn 730: point = 374, n_alt = 8
   Insn 729: point = 375, n_alt = 1
   Insn 728: point = 377, n_alt = 7
   Insn 727: point = 378, n_alt = 8
   Insn 726: point = 379, n_alt = 1
   Insn 725: point = 381, n_alt = -1
   Insn 724: point = 382, n_alt = 0
   Insn 723: point = 382, n_alt = -1
   Insn 722: point = 383, n_alt = 2
   Insn 721: point = 385, n_alt = 7
   Insn 720: point = 386, n_alt = 7
   Insn 1179: point = 387, n_alt = 8
   Insn 719: point = 389, n_alt = 7
   Insn 718: point = 391, n_alt = 3
   Insn 717: point = 392, n_alt = 8
   Insn 716: point = 393, n_alt = 3
   Insn 715: point = 394, n_alt = 1
   Insn 714: point = 396, n_alt = -1
   Insn 713: point = 397, n_alt = 0
   Insn 712: point = 397, n_alt = -1
   Insn 711: point = 398, n_alt = 2
   Insn 710: point = 400, n_alt = 7
   Insn 1177: point = 401, n_alt = 8
   Insn 709: point = 403, n_alt = 7
   Insn 708: point = 405, n_alt = 3
   Insn 707: point = 406, n_alt = 8
   Insn 706: point = 407, n_alt = 2
   Insn 705: point = 409, n_alt = 7
   Insn 704: point = 411, n_alt = 3
   Insn 703: point = 412, n_alt = 7
   Insn 702: point = 414, n_alt = 3
   Insn 701: point = 415, n_alt = 1
   Insn 700: point = 416, n_alt = 3
  BB 17
   Insn 799: point = 417, n_alt = 8
   Insn 798: point = 418, n_alt = 3
   Insn 797: point = 419, n_alt = 1
   Insn 796: point = 421, n_alt = 7
   Insn 795: point = 422, n_alt = 8
   Insn 794: point = 423, n_alt = 3
   Insn 793: point = 424, n_alt = 1
   Insn 792: point = 426, n_alt = 7
   Insn 791: point = 427, n_alt = 8
   Insn 790: point = 428, n_alt = 3
   Insn 789: point = 429, n_alt = 1
   Insn 788: point = 431, n_alt = 7
   Insn 787: point = 432, n_alt = 8
   Insn 786: point = 433, n_alt = 1
   Insn 785: point = 435, n_alt = 7
   Insn 784: point = 436, n_alt = 8
   Insn 783: point = 437, n_alt = 1
   Insn 782: point = 439, n_alt = -1
   Insn 781: point = 440, n_alt = 0
   Insn 780: point = 440, n_alt = -1
   Insn 779: point = 441, n_alt = 2
   Insn 778: point = 443, n_alt = 7
   Insn 777: point = 444, n_alt = 7
   Insn 1183: point = 445, n_alt = 8
   Insn 776: point = 447, n_alt = 7
   Insn 775: point = 449, n_alt = 3
   Insn 774: point = 450, n_alt = 8
   Insn 773: point = 451, n_alt = 3
   Insn 772: point = 452, n_alt = 1
   Insn 771: point = 454, n_alt = -1
   Insn 770: point = 455, n_alt = 0
   Insn 769: point = 455, n_alt = -1
   Insn 768: point = 456, n_alt = 2
   Insn 767: point = 458, n_alt = 7
   Insn 1181: point = 459, n_alt = 8
   Insn 766: point = 461, n_alt = 7
   Insn 765: point = 463, n_alt = 3
   Insn 764: point = 464, n_alt = 8
   Insn 763: point = 465, n_alt = 2
   Insn 762: point = 467, n_alt = 7
   Insn 761: point = 469, n_alt = 3
   Insn 760: point = 470, n_alt = 7
   Insn 759: point = 472, n_alt = 3
   Insn 758: point = 473, n_alt = 1
   Insn 757: point = 474, n_alt = 3
  BB 16
   Insn 752: point = 475, n_alt = -1
   Insn 751: point = 475, n_alt = 1
   Insn 750: point = 476, n_alt = 7
   Insn 749: point = 478, n_alt = 3
   Insn 748: point = 479, n_alt = 7
   Insn 747: point = 481, n_alt = 3
  BB 14
   Insn 695: point = 482, n_alt = -1
   Insn 694: point = 482, n_alt = 1
   Insn 693: point = 483, n_alt = 7
   Insn 692: point = 485, n_alt = 3
   Insn 691: point = 486, n_alt = 7
   Insn 690: point = 488, n_alt = 3
   Insn 689: point = 489, n_alt = 1
   Insn 688: point = 490, n_alt = 3
   Insn 687: point = 491, n_alt = 8
   Insn 686: point = 492, n_alt = 3
   Insn 685: point = 493, n_alt = 1
   Insn 684: point = 495, n_alt = 1
   Insn 683: point = 497, n_alt = 7
   Insn 682: point = 499, n_alt = 3
   Insn 681: point = 500, n_alt = 8
   Insn 680: point = 501, n_alt = 3
   Insn 679: point = 502, n_alt = 1
   Insn 678: point = 504, n_alt = 1
   Insn 677: point = 506, n_alt = -1
   Insn 676: point = 508, n_alt = 1
   Insn 675: point = 510, n_alt = 7
   Insn 674: point = 512, n_alt = 3
   Insn 673: point = 513, n_alt = 1
   Insn 672: point = 515, n_alt = 7
   Insn 671: point = 516, n_alt = 7
   Insn 670: point = 518, n_alt = 3
   Insn 1176: point = 519, n_alt = -1
   Insn 669: point = 521, n_alt = 1
   Insn 1175: point = 521, n_alt = -1
   Insn 668: point = 523, n_alt = 1
   Insn 667: point = 525, n_alt = 7
   Insn 666: point = 527, n_alt = 3
   Insn 665: point = 528, n_alt = 8
   Insn 664: point = 529, n_alt = 3
   Insn 663: point = 530, n_alt = 1
   Insn 662: point = 532, n_alt = 1
   Insn 661: point = 534, n_alt = -1
   Insn 660: point = 536, n_alt = 1
   Insn 659: point = 538, n_alt = 7
   Insn 658: point = 540, n_alt = 3
   Insn 657: point = 541, n_alt = 1
   Insn 656: point = 543, n_alt = 7
   Insn 655: point = 544, n_alt = 7
   Insn 654: point = 546, n_alt = 3
   Insn 1174: point = 547, n_alt = -1
   Insn 653: point = 549, n_alt = 1
   Insn 1173: point = 549, n_alt = -1
   Insn 652: point = 551, n_alt = 1
   Insn 651: point = 553, n_alt = 7
   Insn 650: point = 555, n_alt = 3
   Insn 649: point = 556, n_alt = 8
   Insn 648: point = 557, n_alt = 1
   Insn 647: point = 559, n_alt = 1
   Insn 646: point = 561, n_alt = -1
   Insn 645: point = 563, n_alt = 1
   Insn 644: point = 565, n_alt = 7
   Insn 643: point = 567, n_alt = 3
   Insn 642: point = 568, n_alt = 1
   Insn 641: point = 570, n_alt = 7
   Insn 640: point = 571, n_alt = 7
   Insn 639: point = 573, n_alt = 3
   Insn 1172: point = 574, n_alt = -1
   Insn 638: point = 576, n_alt = 1
   Insn 1171: point = 576, n_alt = -1
   Insn 637: point = 578, n_alt = 1
   Insn 636: point = 580, n_alt = 7
   Insn 635: point = 582, n_alt = 3
   Insn 634: point = 583, n_alt = 8
   Insn 633: point = 584, n_alt = 3
   Insn 632: point = 585, n_alt = 1
   Insn 631: point = 587, n_alt = -1
   Insn 630: point = 589, n_alt = 1
   Insn 629: point = 591, n_alt = 7
   Insn 628: point = 593, n_alt = 3
   Insn 627: point = 594, n_alt = 1
   Insn 626: point = 596, n_alt = 7
   Insn 625: point = 597, n_alt = 7
   Insn 624: point = 599, n_alt = 3
   Insn 623: point = 600, n_alt = 8
   Insn 622: point = 601, n_alt = 1
   Insn 621: point = 603, n_alt = 7
   Insn 620: point = 604, n_alt = 8
   Insn 619: point = 605, n_alt = 1
   Insn 618: point = 607, n_alt = 7
   Insn 617: point = 608, n_alt = 8
   Insn 616: point = 609, n_alt = 1
   Insn 615: point = 611, n_alt = 7
   Insn 614: point = 612, n_alt = 8
   Insn 613: point = 613, n_alt = 2
   Insn 612: point = 615, n_alt = -1
   Insn 611: point = 617, n_alt = 2
   Insn 610: point = 619, n_alt = 7
   Insn 609: point = 620, n_alt = 1
   Insn 608: point = 622, n_alt = 7
   Insn 607: point = 623, n_alt = 7
   Insn 606: point = 624, n_alt = 8
   Insn 1170: point = 625, n_alt = -1
   Insn 605: point = 627, n_alt = 2
   Insn 1169: point = 628, n_alt = -1
   Insn 604: point = 630, n_alt = 7
   Insn 603: point = 631, n_alt = 0
   Insn 602: point = 633, n_alt = 2
   Insn 601: point = 635, n_alt = 7
  BB 13
   Insn 598: point = 636, n_alt = 8
   Insn 597: point = 637, n_alt = 7
   Insn 596: point = 638, n_alt = 8
   Insn 595: point = 639, n_alt = 7
   Insn 594: point = 640, n_alt = 8
   Insn 593: point = 641, n_alt = 7
   Insn 592: point = 642, n_alt = 8
   Insn 591: point = 643, n_alt = 7
  BB 12
   Insn 586: point = 644, n_alt = -1
   Insn 585: point = 644, n_alt = 1
   Insn 584: point = 645, n_alt = 7
   Insn 583: point = 646, n_alt = 7
   Insn 582: point = 647, n_alt = 8
   Insn 581: point = 648, n_alt = 2
   Insn 580: point = 650, n_alt = 1
   Insn 579: point = 652, n_alt = 1
   Insn 578: point = 654, n_alt = 7
   Insn 1168: point = 655, n_alt = -1
   Insn 577: point = 657, n_alt = 1
   Insn 1167: point = 658, n_alt = -1
   Insn 576: point = 659, n_alt = 7
   Insn 575: point = 661, n_alt = 3
   Insn 574: point = 662, n_alt = 8
   Insn 573: point = 663, n_alt = 2
   Insn 572: point = 665, n_alt = 1
   Insn 571: point = 667, n_alt = 1
   Insn 570: point = 669, n_alt = 7
   Insn 1166: point = 670, n_alt = -1
   Insn 569: point = 672, n_alt = 1
   Insn 1165: point = 673, n_alt = -1
   Insn 568: point = 674, n_alt = 7
   Insn 567: point = 676, n_alt = 3
   Insn 566: point = 677, n_alt = 8
   Insn 565: point = 678, n_alt = 2
   Insn 564: point = 680, n_alt = 1
   Insn 563: point = 682, n_alt = 1
   Insn 562: point = 684, n_alt = 7
   Insn 1164: point = 685, n_alt = -1
   Insn 561: point = 687, n_alt = 1
   Insn 1163: point = 688, n_alt = -1
   Insn 560: point = 689, n_alt = 7
   Insn 559: point = 691, n_alt = 3
   Insn 558: point = 692, n_alt = 8
   Insn 1162: point = 693, n_alt = -1
   Insn 557: point = 695, n_alt = 2
   Insn 1161: point = 696, n_alt = -1
   Insn 556: point = 698, n_alt = 7
   Insn 555: point = 699, n_alt = 1
   Insn 554: point = 701, n_alt = 7
   Insn 553: point = 703, n_alt = 3
   Insn 552: point = 704, n_alt = 8
   Insn 551: point = 705, n_alt = 7
   Insn 550: point = 706, n_alt = 8
   Insn 549: point = 707, n_alt = 2
   Insn 548: point = 709, n_alt = -1
   Insn 547: point = 711, n_alt = 2
   Insn 546: point = 713, n_alt = 1
   Insn 545: point = 715, n_alt = 7
   Insn 544: point = 716, n_alt = 1
   Insn 543: point = 718, n_alt = 7
   Insn 542: point = 719, n_alt = 8
   Insn 541: point = 720, n_alt = 2
   Insn 540: point = 722, n_alt = -1
   Insn 539: point = 724, n_alt = 2
   Insn 538: point = 726, n_alt = 1
   Insn 537: point = 728, n_alt = 7
   Insn 536: point = 729, n_alt = 1
   Insn 535: point = 731, n_alt = 7
   Insn 534: point = 732, n_alt = 8
   Insn 533: point = 733, n_alt = 2
   Insn 532: point = 735, n_alt = -1
   Insn 531: point = 737, n_alt = 2
   Insn 530: point = 739, n_alt = 1
   Insn 529: point = 741, n_alt = 7
   Insn 528: point = 742, n_alt = 1
   Insn 527: point = 744, n_alt = 7
   Insn 526: point = 745, n_alt = 8
   Insn 1160: point = 746, n_alt = -1
   Insn 525: point = 748, n_alt = 2
   Insn 1159: point = 749, n_alt = 7
   Insn 524: point = 751, n_alt = -1
   Insn 523: point = 752, n_alt = 0
   Insn 522: point = 752, n_alt = 10
   Insn 521: point = 753, n_alt = -1
   Insn 520: point = 754, n_alt = 3
   Insn 519: point = 755, n_alt = 7
   Insn 1158: point = 756, n_alt = 8
   Insn 518: point = 758, n_alt = 7
   Insn 517: point = 760, n_alt = 3
   Insn 516: point = 761, n_alt = 8
   Insn 515: point = 762, n_alt = 2
   Insn 514: point = 764, n_alt = -1
   Insn 513: point = 766, n_alt = 1
   Insn 512: point = 768, n_alt = 1
   Insn 511: point = 770, n_alt = 7
   Insn 1157: point = 771, n_alt = -1
   Insn 510: point = 773, n_alt = 1
   Insn 1156: point = 773, n_alt = -1
   Insn 509: point = 775, n_alt = 7
   Insn 508: point = 776, n_alt = 8
   Insn 507: point = 777, n_alt = 2
   Insn 506: point = 779, n_alt = -1
   Insn 505: point = 781, n_alt = 1
   Insn 504: point = 783, n_alt = 1
   Insn 503: point = 785, n_alt = 7
   Insn 1155: point = 786, n_alt = -1
   Insn 502: point = 788, n_alt = 1
   Insn 1154: point = 788, n_alt = -1
   Insn 501: point = 790, n_alt = 7
   Insn 500: point = 791, n_alt = 8
   Insn 499: point = 792, n_alt = 2
   Insn 498: point = 794, n_alt = -1
   Insn 497: point = 796, n_alt = 1
   Insn 496: point = 798, n_alt = 1
   Insn 495: point = 800, n_alt = 7
   Insn 1153: point = 801, n_alt = -1
   Insn 494: point = 803, n_alt = 1
   Insn 1152: point = 803, n_alt = -1
   Insn 493: point = 805, n_alt = 7
   Insn 492: point = 806, n_alt = 8
   Insn 491: point = 807, n_alt = 0
   Insn 490: point = 808, n_alt = 8
   Insn 489: point = 809, n_alt = 1
   Insn 488: point = 811, n_alt = 1
   Insn 487: point = 813, n_alt = 7
   Insn 1151: point = 814, n_alt = -1
   Insn 486: point = 816, n_alt = 1
   Insn 1150: point = 817, n_alt = -1
   Insn 485: point = 818, n_alt = 7
   Insn 484: point = 819, n_alt = 8
   Insn 483: point = 820, n_alt = 3
   Insn 482: point = 821, n_alt = 1
   Insn 481: point = 823, n_alt = 1
   Insn 480: point = 825, n_alt = 1
   Insn 479: point = 827, n_alt = 7
   Insn 478: point = 829, n_alt = 3
   Insn 477: point = 830, n_alt = 1
   Insn 476: point = 832, n_alt = 7
   Insn 1149: point = 833, n_alt = -1
   Insn 475: point = 835, n_alt = 1
   Insn 1148: point = 835, n_alt = -1
   Insn 474: point = 837, n_alt = 1
   Insn 473: point = 839, n_alt = -1
   Insn 472: point = 841, n_alt = 1
   Insn 471: point = 843, n_alt = 1
   Insn 470: point = 845, n_alt = 7
   Insn 469: point = 847, n_alt = 3
   Insn 1147: point = 848, n_alt = -1
   Insn 468: point = 850, n_alt = 1
   Insn 1146: point = 850, n_alt = -1
   Insn 467: point = 852, n_alt = 7
   Insn 466: point = 854, n_alt = 3
   Insn 465: point = 855, n_alt = 8
   Insn 464: point = 856, n_alt = 3
   Insn 463: point = 857, n_alt = 1
   Insn 462: point = 859, n_alt = 1
   Insn 461: point = 861, n_alt = 1
   Insn 460: point = 863, n_alt = 7
   Insn 459: point = 865, n_alt = 3
   Insn 458: point = 866, n_alt = 1
   Insn 457: point = 868, n_alt = 7
   Insn 1145: point = 869, n_alt = -1
   Insn 456: point = 871, n_alt = 1
   Insn 1144: point = 871, n_alt = -1
   Insn 455: point = 873, n_alt = 1
   Insn 454: point = 875, n_alt = -1
   Insn 453: point = 877, n_alt = 1
   Insn 452: point = 879, n_alt = 1
   Insn 451: point = 881, n_alt = 7
   Insn 450: point = 883, n_alt = 3
   Insn 1143: point = 884, n_alt = -1
   Insn 449: point = 886, n_alt = 1
   Insn 1142: point = 886, n_alt = -1
   Insn 448: point = 888, n_alt = 7
   Insn 447: point = 890, n_alt = 3
   Insn 446: point = 891, n_alt = 8
   Insn 445: point = 892, n_alt = 1
   Insn 444: point = 894, n_alt = 1
   Insn 443: point = 896, n_alt = 1
   Insn 442: point = 898, n_alt = 7
   Insn 441: point = 900, n_alt = 3
   Insn 440: point = 901, n_alt = 1
   Insn 439: point = 903, n_alt = 7
   Insn 1141: point = 904, n_alt = -1
   Insn 438: point = 906, n_alt = 1
   Insn 1140: point = 906, n_alt = -1
   Insn 437: point = 908, n_alt = 1
   Insn 436: point = 910, n_alt = -1
   Insn 435: point = 912, n_alt = 1
   Insn 434: point = 914, n_alt = 1
   Insn 433: point = 916, n_alt = 7
   Insn 432: point = 918, n_alt = 3
   Insn 1139: point = 919, n_alt = -1
   Insn 431: point = 921, n_alt = 1
   Insn 1138: point = 921, n_alt = -1
   Insn 430: point = 923, n_alt = 7
   Insn 429: point = 924, n_alt = 8
   Insn 428: point = 925, n_alt = 3
   Insn 427: point = 926, n_alt = 1
   Insn 426: point = 928, n_alt = 1
   Insn 425: point = 930, n_alt = 7
   Insn 424: point = 932, n_alt = 3
   Insn 423: point = 933, n_alt = 1
   Insn 422: point = 935, n_alt = 7
   Insn 421: point = 936, n_alt = 8
   Insn 420: point = 937, n_alt = 1
   Insn 419: point = 939, n_alt = 7
   Insn 418: point = 940, n_alt = 8
   Insn 417: point = 941, n_alt = 1
   Insn 416: point = 943, n_alt = 7
   Insn 415: point = 944, n_alt = 8
   Insn 414: point = 945, n_alt = 1
   Insn 413: point = 947, n_alt = 7
   Insn 412: point = 948, n_alt = 8
   Insn 411: point = 949, n_alt = 2
   Insn 410: point = 951, n_alt = 1
   Insn 409: point = 953, n_alt = 1
   Insn 408: point = 955, n_alt = -1
   Insn 407: point = 957, n_alt = 1
   Insn 406: point = 959, n_alt = 7
   Insn 405: point = 961, n_alt = 3
   Insn 404: point = 962, n_alt = 8
   Insn 403: point = 963, n_alt = 0
   Insn 402: point = 965, n_alt = 1
   Insn 401: point = 967, n_alt = 1
   Insn 400: point = 969, n_alt = -1
   Insn 399: point = 971, n_alt = 1
   Insn 398: point = 973, n_alt = 1
   Insn 397: point = 975, n_alt = 7
   Insn 396: point = 977, n_alt = 3
   Insn 1137: point = 978, n_alt = -1
   Insn 395: point = 980, n_alt = 1
   Insn 1136: point = 981, n_alt = -1
   Insn 394: point = 982, n_alt = -1
   Insn 393: point = 984, n_alt = 1
   Insn 392: point = 986, n_alt = 7
   Insn 391: point = 987, n_alt = 7
   Insn 390: point = 989, n_alt = 3
   Insn 389: point = 990, n_alt = 8
   Insn 388: point = 991, n_alt = 2
   Insn 387: point = 993, n_alt = 7
   Insn 386: point = 994, n_alt = 7
   Insn 385: point = 996, n_alt = 3
   Insn 384: point = 997, n_alt = 8
   Insn 383: point = 998, n_alt = 3
   Insn 382: point = 999, n_alt = 2
   Insn 381: point = 1001, n_alt = 7
   Insn 380: point = 1002, n_alt = 8
   Insn 379: point = 1003, n_alt = 3
   Insn 378: point = 1004, n_alt = 1
   Insn 377: point = 1006, n_alt = 2
   Insn 376: point = 1007, n_alt = 7
   Insn 375: point = 1008, n_alt = 8
   Insn 374: point = 1009, n_alt = 1
   Insn 373: point = 1011, n_alt = 2
   Insn 372: point = 1012, n_alt = 7
   Insn 371: point = 1013, n_alt = 8
   Insn 370: point = 1014, n_alt = 3
   Insn 369: point = 1015, n_alt = 2
   Insn 368: point = 1017, n_alt = 7
   Insn 367: point = 1018, n_alt = 8
   Insn 366: point = 1019, n_alt = 7
   Insn 365: point = 1020, n_alt = 3
   Insn 364: point = 1021, n_alt = 8
   Insn 363: point = 1022, n_alt = 3
   Insn 362: point = 1023, n_alt = 2
   Insn 361: point = 1025, n_alt = 7
   Insn 360: point = 1026, n_alt = 8
   Insn 359: point = 1027, n_alt = 7
   Insn 358: point = 1028, n_alt = 8
   Insn 357: point = 1029, n_alt = 3
   Insn 356: point = 1030, n_alt = 2
   Insn 355: point = 1032, n_alt = 7
  BB 8
   Insn 1105: point = 1033, n_alt = -1
   Insn 191: point = 1033, n_alt = 8
   Insn 190: point = 1034, n_alt = 7
   Insn 189: point = 1035, n_alt = 8
   Insn 188: point = 1036, n_alt = 7
   Insn 187: point = 1037, n_alt = 8
   Insn 186: point = 1038, n_alt = 7
   Insn 185: point = 1039, n_alt = 8
   Insn 184: point = 1040, n_alt = 7
   Insn 183: point = 1041, n_alt = 8
   Insn 182: point = 1042, n_alt = 7
   Insn 181: point = 1043, n_alt = 8
   Insn 180: point = 1044, n_alt = 7
   Insn 179: point = 1045, n_alt = 8
   Insn 178: point = 1046, n_alt = 7
   Insn 177: point = 1047, n_alt = 8
   Insn 176: point = 1048, n_alt = 7
  BB 11
   Insn 352: point = 1049, n_alt = 8
   Insn 351: point = 1050, n_alt = 0
   Insn 350: point = 1052, n_alt = 2
   Insn 1135: point = 1053, n_alt = -1
   Insn 349: point = 1055, n_alt = 2
   Insn 1134: point = 1056, n_alt = -1
   Insn 348: point = 1058, n_alt = 7
   Insn 347: point = 1059, n_alt = 1
   Insn 346: point = 1061, n_alt = 7
   Insn 345: point = 1062, n_alt = 8
   Insn 344: point = 1063, n_alt = 0
   Insn 343: point = 1065, n_alt = 2
   Insn 1133: point = 1066, n_alt = -1
   Insn 342: point = 1068, n_alt = 2
   Insn 1132: point = 1069, n_alt = -1
   Insn 341: point = 1071, n_alt = 7
   Insn 340: point = 1072, n_alt = 1
   Insn 339: point = 1074, n_alt = 7
   Insn 338: point = 1075, n_alt = 8
   Insn 337: point = 1076, n_alt = 0
   Insn 336: point = 1078, n_alt = 2
   Insn 1131: point = 1079, n_alt = -1
   Insn 335: point = 1081, n_alt = 2
   Insn 1130: point = 1082, n_alt = -1
   Insn 334: point = 1084, n_alt = 7
   Insn 333: point = 1085, n_alt = 1
   Insn 332: point = 1087, n_alt = 7
   Insn 331: point = 1088, n_alt = 8
   Insn 330: point = 1089, n_alt = 2
   Insn 329: point = 1091, n_alt = 7
   Insn 328: point = 1092, n_alt = 8
   Insn 327: point = 1093, n_alt = 1
   Insn 326: point = 1095, n_alt = 7
   Insn 325: point = 1096, n_alt = 8
   Insn 324: point = 1097, n_alt = 1
   Insn 323: point = 1099, n_alt = 7
   Insn 322: point = 1100, n_alt = 8
   Insn 321: point = 1101, n_alt = 1
   Insn 320: point = 1103, n_alt = 7
   Insn 319: point = 1104, n_alt = 8
   Insn 318: point = 1105, n_alt = 0
   Insn 317: point = 1107, n_alt = 2
   Insn 316: point = 1108, n_alt = 1
   Insn 1129: point = 1110, n_alt = -1
   Insn 315: point = 1112, n_alt = 2
   Insn 1128: point = 1113, n_alt = -1
   Insn 314: point = 1115, n_alt = 0
   Insn 1127: point = 1117, n_alt = -1
   Insn 313: point = 1119, n_alt = 2
   Insn 1126: point = 1120, n_alt = -1
   Insn 312: point = 1122, n_alt = 7
   Insn 311: point = 1123, n_alt = -1
   Insn 310: point = 1125, n_alt = 2
   Insn 309: point = 1127, n_alt = 7
   Insn 308: point = 1128, n_alt = 7
   Insn 307: point = 1129, n_alt = 1
   Insn 306: point = 1131, n_alt = 7
   Insn 305: point = 1132, n_alt = 8
   Insn 304: point = 1133, n_alt = 1
   Insn 303: point = 1135, n_alt = -1
   Insn 302: point = 1136, n_alt = 0
   Insn 301: point = 1136, n_alt = 10
   Insn 300: point = 1137, n_alt = 3
   Insn 299: point = 1138, n_alt = 8
   Insn 298: point = 1140, n_alt = 2
   Insn 297: point = 1142, n_alt = 7
   Insn 296: point = 1143, n_alt = 7
   Insn 295: point = 1144, n_alt = 8
   Insn 294: point = 1145, n_alt = 0
   Insn 293: point = 1147, n_alt = 2
   Insn 292: point = 1148, n_alt = 1
   Insn 291: point = 1150, n_alt = 7
   Insn 290: point = 1151, n_alt = 4
   Insn 289: point = 1152, n_alt = 9
   Insn 288: point = 1153, n_alt = 0
   Insn 287: point = 1153, n_alt = -1
   Insn 286: point = 1154, n_alt = 1
   Insn 285: point = 1156, n_alt = 2
   Insn 284: point = 1157, n_alt = 7
   Insn 283: point = 1158, n_alt = 8
  BB 10
   Insn 280: point = 1160, n_alt = 7
  BB 9
   Insn 278: point = 1161, n_alt = -1
   Insn 277: point = 1161, n_alt = 0
   Insn 276: point = 1162, n_alt = 0
   Insn 275: point = 1164, n_alt = 0
   Insn 274: point = 1165, n_alt = 1
   Insn 273: point = 1165, n_alt = 0
   Insn 272: point = 1166, n_alt = 1
   Insn 271: point = 1166, n_alt = 7
   Insn 270: point = 1167, n_alt = 8
   Insn 269: point = 1168, n_alt = 1
   Insn 268: point = 1170, n_alt = -1
   Insn 1124: point = 1172, n_alt = -1
   Insn 267: point = 1174, n_alt = 2
   Insn 1123: point = 1175, n_alt = -1
   Insn 266: point = 1177, n_alt = 7
   Insn 265: point = 1178, n_alt = 2
   Insn 264: point = 1180, n_alt = 7
   Insn 263: point = 1182, n_alt = 3
   Insn 262: point = 1183, n_alt = 7
   Insn 261: point = 1185, n_alt = 3
   Insn 260: point = 1186, n_alt = 1
   Insn 259: point = 1188, n_alt = 7
   Insn 258: point = 1189, n_alt = 7
   Insn 257: point = 1191, n_alt = 3
   Insn 256: point = 1192, n_alt = 8
   Insn 255: point = 1193, n_alt = 1
   Insn 254: point = 1195, n_alt = 7
   Insn 253: point = 1196, n_alt = 1
   Insn 252: point = 1198, n_alt = -1
   Insn 1122: point = 1200, n_alt = -1
   Insn 251: point = 1202, n_alt = 2
   Insn 1121: point = 1203, n_alt = -1
   Insn 250: point = 1205, n_alt = 7
   Insn 249: point = 1206, n_alt = 2
   Insn 248: point = 1208, n_alt = 7
   Insn 247: point = 1210, n_alt = 3
   Insn 246: point = 1211, n_alt = 7
   Insn 245: point = 1213, n_alt = 3
   Insn 244: point = 1214, n_alt = 1
   Insn 243: point = 1216, n_alt = 7
   Insn 242: point = 1217, n_alt = 7
   Insn 241: point = 1219, n_alt = 3
   Insn 240: point = 1220, n_alt = 8
   Insn 239: point = 1221, n_alt = 2
   Insn 238: point = 1223, n_alt = -1
   Insn 237: point = 1225, n_alt = 2
   Insn 236: point = 1227, n_alt = 1
   Insn 235: point = 1229, n_alt = 7
   Insn 234: point = 1230, n_alt = 2
   Insn 233: point = 1232, n_alt = 7
   Insn 232: point = 1234, n_alt = 3
   Insn 231: point = 1235, n_alt = 1
   Insn 230: point = 1237, n_alt = 7
   Insn 229: point = 1239, n_alt = 3
   Insn 228: point = 1240, n_alt = 8
   Insn 227: point = 1241, n_alt = 2
   Insn 226: point = 1243, n_alt = -1
   Insn 225: point = 1245, n_alt = 2
   Insn 224: point = 1247, n_alt = 1
   Insn 223: point = 1249, n_alt = 7
   Insn 222: point = 1250, n_alt = 2
   Insn 221: point = 1252, n_alt = 7
   Insn 220: point = 1254, n_alt = 3
   Insn 219: point = 1255, n_alt = 1
   Insn 218: point = 1257, n_alt = 7
   Insn 217: point = 1259, n_alt = 3
   Insn 216: point = 1260, n_alt = 8
   Insn 215: point = 1261, n_alt = 2
   Insn 214: point = 1263, n_alt = -1
   Insn 213: point = 1265, n_alt = 2
   Insn 212: point = 1267, n_alt = 1
   Insn 211: point = 1269, n_alt = 7
   Insn 210: point = 1270, n_alt = 2
   Insn 209: point = 1272, n_alt = 7
   Insn 208: point = 1274, n_alt = 3
   Insn 207: point = 1275, n_alt = 1
   Insn 206: point = 1277, n_alt = 7
   Insn 205: point = 1279, n_alt = 3
   Insn 204: point = 1280, n_alt = 8
   Insn 203: point = 1281, n_alt = 2
   Insn 202: point = 1283, n_alt = 7
   Insn 201: point = 1285, n_alt = 3
   Insn 200: point = 1286, n_alt = 1
   Insn 199: point = 1288, n_alt = 7
   Insn 198: point = 1290, n_alt = 3
   Insn 197: point = 1291, n_alt = 2
   Insn 196: point = 1293, n_alt = 7
  BB 7
   Insn 171: point = 1294, n_alt = -1
   Insn 170: point = 1294, n_alt = 1
   Insn 169: point = 1295, n_alt = 7
  BB 6
   Insn 168: point = 1296, n_alt = -1
   Insn 167: point = 1296, n_alt = 1
   Insn 166: point = 1297, n_alt = 7
   Insn 165: point = 1298, n_alt = 8
   Insn 164: point = 1299, n_alt = 1
   Insn 163: point = 1301, n_alt = 1
   Insn 162: point = 1303, n_alt = 1
   Insn 161: point = 1305, n_alt = 7
   Insn 160: point = 1306, n_alt = 7
   Insn 159: point = 1307, n_alt = 1
   Insn 158: point = 1309, n_alt = 7
   Insn 157: point = 1310, n_alt = 7
   Insn 156: point = 1311, n_alt = 8
   Insn 155: point = 1312, n_alt = 1
   Insn 154: point = 1314, n_alt = 7
   Insn 153: point = 1315, n_alt = 1
   Insn 152: point = 1317, n_alt = 7
   Insn 151: point = 1318, n_alt = 7
   Insn 150: point = 1319, n_alt = 8
   Insn 149: point = 1320, n_alt = 0
   Insn 148: point = 1322, n_alt = 2
   Insn 147: point = 1323, n_alt = 1
   Insn 146: point = 1325, n_alt = 1
   Insn 145: point = 1327, n_alt = 7
   Insn 144: point = 1328, n_alt = 7
   Insn 143: point = 1329, n_alt = 8
   Insn 142: point = 1330, n_alt = 1
   Insn 141: point = 1332, n_alt = 1
   Insn 140: point = 1334, n_alt = 1
   Insn 139: point = 1336, n_alt = 7
   Insn 138: point = 1337, n_alt = 7
   Insn 137: point = 1338, n_alt = 1
   Insn 136: point = 1340, n_alt = 7
   Insn 135: point = 1341, n_alt = 7
   Insn 134: point = 1342, n_alt = 8
   Insn 133: point = 1343, n_alt = 1
   Insn 132: point = 1345, n_alt = 7
   Insn 131: point = 1346, n_alt = 1
   Insn 130: point = 1348, n_alt = 7
   Insn 129: point = 1349, n_alt = 7
   Insn 128: point = 1350, n_alt = 8
   Insn 127: point = 1351, n_alt = 1
   Insn 126: point = 1353, n_alt = 1
   Insn 125: point = 1355, n_alt = 1
   Insn 124: point = 1357, n_alt = 7
   Insn 123: point = 1358, n_alt = 7
   Insn 122: point = 1359, n_alt = 1
   Insn 121: point = 1361, n_alt = 7
   Insn 120: point = 1362, n_alt = 7
   Insn 119: point = 1363, n_alt = 8
   Insn 118: point = 1364, n_alt = 1
   Insn 117: point = 1366, n_alt = 7
   Insn 116: point = 1367, n_alt = 1
   Insn 115: point = 1369, n_alt = 7
   Insn 114: point = 1370, n_alt = 7
   Insn 113: point = 1371, n_alt = 8
   Insn 112: point = 1372, n_alt = 1
   Insn 111: point = 1374, n_alt = 1
   Insn 110: point = 1376, n_alt = 1
   Insn 109: point = 1378, n_alt = 7
   Insn 108: point = 1379, n_alt = 7
   Insn 107: point = 1380, n_alt = 1
   Insn 106: point = 1382, n_alt = 7
   Insn 105: point = 1383, n_alt = 7
   Insn 104: point = 1384, n_alt = 4
   Insn 103: point = 1385, n_alt = 9
   Insn 102: point = 1386, n_alt = 0
   Insn 101: point = 1386, n_alt = 10
   Insn 100: point = 1387, n_alt = 3
   Insn 99: point = 1388, n_alt = 4
   Insn 98: point = 1389, n_alt = 9
   Insn 97: point = 1390, n_alt = 0
   Insn 96: point = 1390, n_alt = 10
   Insn 95: point = 1391, n_alt = 3
  BB 4
   Insn 88: point = 1392, n_alt = 1
   Insn 87: point = 1392, n_alt = 1
   Insn 86: point = 1393, n_alt = 3
   Insn 85: point = 1394, n_alt = 8
  BB 3
   Insn 82: point = 1396, n_alt = 7
  BB 2
   Insn 80: point = 1397, n_alt = -1
   Insn 79: point = 1397, n_alt = 0
   Insn 78: point = 1398, n_alt = 0
   Insn 77: point = 1400, n_alt = 0
   Insn 76: point = 1401, n_alt = 1
   Insn 75: point = 1401, n_alt = 0
   Insn 74: point = 1402, n_alt = 1
   Insn 73: point = 1403, n_alt = 7
   Insn 72: point = 1404, n_alt = 7
   Insn 71: point = 1405, n_alt = 8
   Insn 70: point = 1406, n_alt = 1
   Insn 69: point = 1408, n_alt = 2
   Insn 68: point = 1410, n_alt = 7
   Insn 67: point = 1412, n_alt = 3
   Insn 66: point = 1413, n_alt = 7
   Insn 65: point = 1415, n_alt = 3
   Insn 64: point = 1416, n_alt = 7
   Insn 63: point = 1418, n_alt = 3
   Insn 62: point = 1419, n_alt = 4
   Insn 61: point = 1420, n_alt = 9
   Insn 60: point = 1421, n_alt = 0
   Insn 59: point = 1421, n_alt = 10
   Insn 58: point = 1422, n_alt = -1
   Insn 57: point = 1423, n_alt = 3
   Insn 56: point = 1424, n_alt = 7
   Insn 55: point = 1425, n_alt = 8
   Insn 54: point = 1426, n_alt = 1
   Insn 53: point = 1428, n_alt = 7
   Insn 52: point = 1429, n_alt = -1
   Insn 51: point = 1431, n_alt = 2
   Insn 50: point = 1433, n_alt = 7
   Insn 49: point = 1434, n_alt = 8
   Insn 48: point = 1435, n_alt = 1
   Insn 47: point = 1437, n_alt = 7
   Insn 46: point = 1438, n_alt = -1
   Insn 45: point = 1440, n_alt = 2
   Insn 44: point = 1442, n_alt = 7
   Insn 43: point = 1443, n_alt = 8
   Insn 42: point = 1444, n_alt = 0
   Insn 41: point = 1446, n_alt = 1
   Insn 40: point = 1448, n_alt = 1
   Insn 39: point = 1450, n_alt = 7
   Insn 1120: point = 1451, n_alt = -1
   Insn 38: point = 1453, n_alt = 1
   Insn 1119: point = 1454, n_alt = -1
   Insn 37: point = 1455, n_alt = 7
   Insn 36: point = 1456, n_alt = 8
   Insn 35: point = 1457, n_alt = 7
   Insn 34: point = 1458, n_alt = 8
   Insn 33: point = 1459, n_alt = 7
   Insn 32: point = 1461, n_alt = 3
   Insn 31: point = 1462, n_alt = 8
   Insn 30: point = 1463, n_alt = 2
   Insn 29: point = 1465, n_alt = 1
   Insn 28: point = 1467, n_alt = 7
   Insn 27: point = 1469, n_alt = 3
   Insn 26: point = 1470, n_alt = 7
   Insn 25: point = 1472, n_alt = 3
   Insn 24: point = 1473, n_alt = 8
   Insn 23: point = 1474, n_alt = 7
   Insn 22: point = 1475, n_alt = 8
   Insn 21: point = 1476, n_alt = 7
   Insn 20: point = 1477, n_alt = 8
   Insn 19: point = 1478, n_alt = 1
   Insn 18: point = 1480, n_alt = 7
   Insn 17: point = 1481, n_alt = 7
   Insn 16: point = 1483, n_alt = 3
   Insn 15: point = 1484, n_alt = 8
   Insn 14: point = 1485, n_alt = 7
   Insn 13: point = 1486, n_alt = 8
   Insn 12: point = 1487, n_alt = 7
   Insn 7: point = 1488, n_alt = 5
   Insn 6: point = 1488, n_alt = 5
   Insn 5: point = 1488, n_alt = 5
   Insn 4: point = 1488, n_alt = 5
   Insn 3: point = 1488, n_alt = 5
   Insn 2: point = 1488, n_alt = 5
 r167: [1134..1138]
 r248: [750..756]
 r321: [395..401]
 r326: [380..387]
 r337: [453..459]
 r342: [438..445]
Compressing live ranges: from 1488 to 12 - 0%
Ranges after the compression:
 r167: [10..11]
 r248: [8..9]
 r321: [2..3]
 r326: [0..1]
 r337: [6..7]
 r342: [4..5]
  Slot 0 regnos (width = 0):	 167	 342	 337	 326	 321	 248
Changing spilled pseudos to memory in insn #299
Changing spilled pseudos to memory in insn #304
Changing spilled pseudos to memory in insn #1158
Changing spilled pseudos to memory in insn #1159
Changing spilled pseudos to memory in insn #1177
Changing spilled pseudos to memory in insn #715
Changing spilled pseudos to memory in insn #1179
Changing spilled pseudos to memory in insn #726
Changing spilled pseudos to memory in insn #1181
Changing spilled pseudos to memory in insn #772
Changing spilled pseudos to memory in insn #1183
Changing spilled pseudos to memory in insn #783
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #783
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 783:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1183
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1183:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #772
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 772:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1181
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1181:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #726
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1179
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1179:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #715
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 715:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1177
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1177:  (0) m  (1) v {*movsf_internal}
Reusing alternative 7 for insn #1159
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1159:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1158
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1158:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #304
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #299
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 299:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=896, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=880, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 64
changing reg in insn 66
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 116
changing reg in insn 122
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 131
changing reg in insn 137
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 149
changing reg in insn 153
changing reg in insn 159
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 197
changing reg in insn 200
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 203
changing reg in insn 202
changing reg in insn 203
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 210
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 213
changing reg in insn 212
changing reg in insn 213
changing reg in insn 213
changing reg in insn 214
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 222
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 225
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 234
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 237
changing reg in insn 236
changing reg in insn 237
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 239
changing reg in insn 242
changing reg in insn 244
changing reg in insn 253
changing reg in insn 246
changing reg in insn 249
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 258
changing reg in insn 260
changing reg in insn 269
changing reg in insn 262
changing reg in insn 265
changing reg in insn 264
changing reg in insn 265
changing reg in insn 265
changing reg in insn 267
changing reg in insn 268
changing reg in insn 268
changing reg in insn 269
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 286
changing reg in insn 287
changing reg in insn 292
changing reg in insn 294
changing reg in insn 294
changing reg in insn 296
changing reg in insn 298
changing reg in insn 298
changing reg in insn 299
changing reg in insn 303
changing reg in insn 308
changing reg in insn 310
changing reg in insn 310
changing reg in insn 311
changing reg in insn 311
changing reg in insn 314
changing reg in insn 314
changing reg in insn 315
changing reg in insn 316
changing reg in insn 316
changing reg in insn 318
changing reg in insn 318
changing reg in insn 337
changing reg in insn 337
changing reg in insn 344
changing reg in insn 344
changing reg in insn 351
changing reg in insn 351
changing reg in insn 356
changing reg in insn 358
changing reg in insn 362
changing reg in insn 364
changing reg in insn 369
changing reg in insn 371
changing reg in insn 378
changing reg in insn 380
changing reg in insn 382
changing reg in insn 384
changing reg in insn 386
changing reg in insn 388
changing reg in insn 391
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 397
changing reg in insn 398
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 400
changing reg in insn 402
changing reg in insn 403
changing reg in insn 406
changing reg in insn 407
changing reg in insn 407
changing reg in insn 408
changing reg in insn 410
changing reg in insn 411
changing reg in insn 423
changing reg in insn 426
changing reg in insn 425
changing reg in insn 426
changing reg in insn 426
changing reg in insn 427
changing reg in insn 427
changing reg in insn 429
changing reg in insn 433
changing reg in insn 434
changing reg in insn 434
changing reg in insn 435
changing reg in insn 436
changing reg in insn 436
changing reg in insn 437
changing reg in insn 437
changing reg in insn 440
changing reg in insn 443
changing reg in insn 442
changing reg in insn 443
changing reg in insn 443
changing reg in insn 444
changing reg in insn 444
changing reg in insn 448
changing reg in insn 451
changing reg in insn 452
changing reg in insn 452
changing reg in insn 453
changing reg in insn 454
changing reg in insn 454
changing reg in insn 455
changing reg in insn 455
changing reg in insn 458
changing reg in insn 461
changing reg in insn 460
changing reg in insn 461
changing reg in insn 461
changing reg in insn 462
changing reg in insn 462
changing reg in insn 463
changing reg in insn 465
changing reg in insn 467
changing reg in insn 470
changing reg in insn 471
changing reg in insn 471
changing reg in insn 472
changing reg in insn 473
changing reg in insn 473
changing reg in insn 474
changing reg in insn 474
changing reg in insn 477
changing reg in insn 480
changing reg in insn 479
changing reg in insn 480
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 482
changing reg in insn 484
changing reg in insn 496
changing reg in insn 497
changing reg in insn 498
changing reg in insn 498
changing reg in insn 499
changing reg in insn 504
changing reg in insn 505
changing reg in insn 506
changing reg in insn 506
changing reg in insn 507
changing reg in insn 512
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 515
changing reg in insn 524
changing reg in insn 525
changing reg in insn 526
changing reg in insn 528
changing reg in insn 531
changing reg in insn 530
changing reg in insn 531
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 533
changing reg in insn 536
changing reg in insn 539
changing reg in insn 538
changing reg in insn 539
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 544
changing reg in insn 547
changing reg in insn 546
changing reg in insn 547
changing reg in insn 547
changing reg in insn 548
changing reg in insn 548
changing reg in insn 549
changing reg in insn 563
changing reg in insn 564
changing reg in insn 564
changing reg in insn 565
changing reg in insn 571
changing reg in insn 572
changing reg in insn 572
changing reg in insn 573
changing reg in insn 579
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 583
changing reg in insn 585
changing reg in insn 602
changing reg in insn 603
changing reg in insn 603
changing reg in insn 605
changing reg in insn 609
changing reg in insn 613
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 613
changing reg in insn 625
changing reg in insn 626
changing reg in insn 627
changing reg in insn 630
changing reg in insn 629
changing reg in insn 630
changing reg in insn 630
changing reg in insn 631
changing reg in insn 631
changing reg in insn 632
changing reg in insn 632
changing reg in insn 634
changing reg in insn 636
changing reg in insn 637
changing reg in insn 637
changing reg in insn 640
changing reg in insn 641
changing reg in insn 642
changing reg in insn 645
changing reg in insn 644
changing reg in insn 645
changing reg in insn 645
changing reg in insn 646
changing reg in insn 646
changing reg in insn 647
changing reg in insn 647
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 655
changing reg in insn 656
changing reg in insn 657
changing reg in insn 660
changing reg in insn 659
changing reg in insn 660
changing reg in insn 660
changing reg in insn 661
changing reg in insn 661
changing reg in insn 662
changing reg in insn 662
changing reg in insn 663
changing reg in insn 665
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 671
changing reg in insn 672
changing reg in insn 673
changing reg in insn 676
changing reg in insn 675
changing reg in insn 676
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 678
changing reg in insn 678
changing reg in insn 679
changing reg in insn 681
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 685
changing reg in insn 685
changing reg in insn 687
changing reg in insn 691
changing reg in insn 694
changing reg in insn 693
changing reg in insn 694
changing reg in insn 703
changing reg in insn 706
changing reg in insn 705
changing reg in insn 706
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 712
changing reg in insn 714
changing reg in insn 715
changing reg in insn 717
changing reg in insn 720
changing reg in insn 722
changing reg in insn 722
changing reg in insn 723
changing reg in insn 725
changing reg in insn 732
changing reg in insn 734
changing reg in insn 736
changing reg in insn 738
changing reg in insn 740
changing reg in insn 742
changing reg in insn 748
changing reg in insn 751
changing reg in insn 750
changing reg in insn 751
changing reg in insn 760
changing reg in insn 763
changing reg in insn 762
changing reg in insn 763
changing reg in insn 767
changing reg in insn 768
changing reg in insn 768
changing reg in insn 769
changing reg in insn 771
changing reg in insn 772
changing reg in insn 774
changing reg in insn 777
changing reg in insn 779
changing reg in insn 779
changing reg in insn 780
changing reg in insn 782
changing reg in insn 789
changing reg in insn 791
changing reg in insn 793
changing reg in insn 795
changing reg in insn 797
changing reg in insn 799
changing reg in insn 803
changing reg in insn 805
changing reg in insn 807
changing reg in insn 810
changing reg in insn 809
changing reg in insn 810
changing reg in insn 810
changing reg in insn 811
changing reg in insn 811
changing reg in insn 812
changing reg in insn 813
changing reg in insn 815
changing reg in insn 817
changing reg in insn 825
changing reg in insn 819
changing reg in insn 822
changing reg in insn 823
changing reg in insn 824
changing reg in insn 824
changing reg in insn 825
changing reg in insn 825
changing reg in insn 827
changing reg in insn 830
changing reg in insn 832
changing reg in insn 834
changing reg in insn 843
changing reg in insn 836
changing reg in insn 839
changing reg in insn 840
changing reg in insn 840
changing reg in insn 841
changing reg in insn 842
changing reg in insn 842
changing reg in insn 843
changing reg in insn 843
changing reg in insn 844
changing reg in insn 847
changing reg in insn 849
changing reg in insn 851
changing reg in insn 860
changing reg in insn 853
changing reg in insn 856
changing reg in insn 857
changing reg in insn 857
changing reg in insn 858
changing reg in insn 859
changing reg in insn 859
changing reg in insn 860
changing reg in insn 860
changing reg in insn 861
changing reg in insn 864
changing reg in insn 866
changing reg in insn 867
changing reg in insn 867
changing reg in insn 869
changing reg in insn 869
changing reg in insn 872
changing reg in insn 874
changing reg in insn 877
changing reg in insn 876
changing reg in insn 877
changing reg in insn 877
changing reg in insn 878
changing reg in insn 878
changing reg in insn 880
changing reg in insn 880
changing reg in insn 882
changing reg in insn 883
changing reg in insn 883
changing reg in insn 885
changing reg in insn 885
changing reg in insn 889
changing reg in insn 891
changing reg in insn 892
changing reg in insn 893
changing reg in insn 901
changing reg in insn 903
changing reg in insn 904
changing reg in insn 905
changing reg in insn 913
changing reg in insn 915
changing reg in insn 914
changing reg in insn 915
changing reg in insn 973
changing reg in insn 975
changing reg in insn 975
changing reg in insn 978
changing reg in insn 980
changing reg in insn 980
changing reg in insn 983
changing reg in insn 985
changing reg in insn 985
changing reg in insn 988
changing reg in insn 990
changing reg in insn 990
changing reg in insn 993
changing reg in insn 995
changing reg in insn 996
changing reg in insn 998
changing reg in insn 1000
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1005
changing reg in insn 1007
changing reg in insn 1009
changing reg in insn 1011
changing reg in insn 1013
changing reg in insn 1015
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1020
changing reg in insn 1022
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1027
changing reg in insn 1029
changing reg in insn 1031
changing reg in insn 1033
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1039
changing reg in insn 1040
changing reg in insn 1042
changing reg in insn 1044
changing reg in insn 1046
changing reg in insn 1047
changing reg in insn 1049
changing reg in insn 1051
changing reg in insn 1053
changing reg in insn 1055
changing reg in insn 1057
changing reg in insn 1059
changing reg in insn 1061
changing reg in insn 1062
changing reg in insn 1064
changing reg in insn 1066
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1073
changing reg in insn 1075
changing reg in insn 1077
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1082
changing reg in insn 82
changing reg in insn 72
changing reg in insn 85
changing reg in insn 76
changing reg in insn 76
changing reg in insn 74
changing reg in insn 280
changing reg in insn 271
changing reg in insn 283
changing reg in insn 274
changing reg in insn 274
changing reg in insn 272
changing reg in insn 896
changing reg in insn 887
changing reg in insn 9
changing reg in insn 900
changing reg in insn 890
changing reg in insn 890
changing reg in insn 888
changing reg in insn 9
changing reg in insn 899
changing reg in insn 910
changing reg in insn 902
changing reg in insn 902
changing reg in insn 900
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 40
changing reg in insn 91
changing reg in insn 92
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 307
changing reg in insn 313
changing reg in insn 332
changing reg in insn 333
changing reg in insn 333
changing reg in insn 333
changing reg in insn 335
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 340
changing reg in insn 342
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 347
changing reg in insn 349
changing reg in insn 394
changing reg in insn 395
changing reg in insn 400
changing reg in insn 401
changing reg in insn 401
changing reg in insn 401
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 409
changing reg in insn 410
changing reg in insn 485
changing reg in insn 486
changing reg in insn 487
changing reg in insn 488
changing reg in insn 488
changing reg in insn 488
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 555
changing reg in insn 557
changing reg in insn 560
changing reg in insn 561
changing reg in insn 565
changing reg in insn 568
changing reg in insn 569
changing reg in insn 573
changing reg in insn 576
changing reg in insn 577
changing reg in insn 581
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 86
changing reg in insn 87
changing reg in insn 95
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 118
changing reg in insn 119
changing reg in insn 117
changing reg in insn 120
changing reg in insn 122
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 133
changing reg in insn 134
changing reg in insn 132
changing reg in insn 135
changing reg in insn 137
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 149
changing reg in insn 150
changing reg in insn 148
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 154
changing reg in insn 157
changing reg in insn 159
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 196
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 202
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 211
changing reg in insn 212
changing reg in insn 215
changing reg in insn 216
changing reg in insn 217
changing reg in insn 218
changing reg in insn 220
changing reg in insn 221
changing reg in insn 223
changing reg in insn 224
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 232
changing reg in insn 233
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 250
changing reg in insn 255
changing reg in insn 256
changing reg in insn 254
changing reg in insn 257
changing reg in insn 258
changing reg in insn 259
changing reg in insn 261
changing reg in insn 262
changing reg in insn 263
changing reg in insn 264
changing reg in insn 266
changing reg in insn 269
changing reg in insn 270
changing reg in insn 284
changing reg in insn 286
changing reg in insn 286
changing reg in insn 285
changing reg in insn 286
changing reg in insn 289
changing reg in insn 290
changing reg in insn 291
changing reg in insn 292
changing reg in insn 294
changing reg in insn 295
changing reg in insn 293
changing reg in insn 294
changing reg in insn 297
changing reg in insn 298
changing reg in insn 300
changing reg in insn 301
changing reg in insn 304
changing reg in insn 305
changing reg in insn 309
changing reg in insn 310
changing reg in insn 312
changing reg in insn 318
changing reg in insn 319
changing reg in insn 317
changing reg in insn 318
changing reg in insn 321
changing reg in insn 322
changing reg in insn 320
changing reg in insn 321
changing reg in insn 324
changing reg in insn 325
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 328
changing reg in insn 326
changing reg in insn 327
changing reg in insn 330
changing reg in insn 331
changing reg in insn 329
changing reg in insn 330
changing reg in insn 334
changing reg in insn 337
changing reg in insn 338
changing reg in insn 336
changing reg in insn 337
changing reg in insn 341
changing reg in insn 344
changing reg in insn 345
changing reg in insn 343
changing reg in insn 344
changing reg in insn 348
changing reg in insn 351
changing reg in insn 352
changing reg in insn 350
changing reg in insn 351
changing reg in insn 355
changing reg in insn 356
changing reg in insn 357
changing reg in insn 358
changing reg in insn 359
changing reg in insn 360
changing reg in insn 361
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 367
changing reg in insn 366
changing reg in insn 367
changing reg in insn 368
changing reg in insn 369
changing reg in insn 370
changing reg in insn 371
changing reg in insn 374
changing reg in insn 375
changing reg in insn 372
changing reg in insn 374
changing reg in insn 374
changing reg in insn 373
changing reg in insn 374
changing reg in insn 376
changing reg in insn 378
changing reg in insn 378
changing reg in insn 377
changing reg in insn 378
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 388
changing reg in insn 389
changing reg in insn 387
changing reg in insn 388
changing reg in insn 390
changing reg in insn 391
changing reg in insn 396
changing reg in insn 397
changing reg in insn 403
changing reg in insn 404
changing reg in insn 405
changing reg in insn 406
changing reg in insn 411
changing reg in insn 412
changing reg in insn 414
changing reg in insn 415
changing reg in insn 413
changing reg in insn 414
changing reg in insn 417
changing reg in insn 418
changing reg in insn 416
changing reg in insn 417
changing reg in insn 420
changing reg in insn 421
changing reg in insn 419
changing reg in insn 420
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 428
changing reg in insn 429
changing reg in insn 430
changing reg in insn 432
changing reg in insn 433
changing reg in insn 439
changing reg in insn 440
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 446
changing reg in insn 447
changing reg in insn 448
changing reg in insn 450
changing reg in insn 451
changing reg in insn 457
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 464
changing reg in insn 465
changing reg in insn 466
changing reg in insn 467
changing reg in insn 469
changing reg in insn 470
changing reg in insn 476
changing reg in insn 477
changing reg in insn 478
changing reg in insn 479
changing reg in insn 483
changing reg in insn 484
changing reg in insn 489
changing reg in insn 490
changing reg in insn 491
changing reg in insn 492
changing reg in insn 493
changing reg in insn 495
changing reg in insn 496
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 507
changing reg in insn 508
changing reg in insn 509
changing reg in insn 511
changing reg in insn 512
changing reg in insn 515
changing reg in insn 516
changing reg in insn 517
changing reg in insn 518
changing reg in insn 519
changing reg in insn 521
changing reg in insn 520
changing reg in insn 522
changing reg in insn 527
changing reg in insn 528
changing reg in insn 529
changing reg in insn 530
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 537
changing reg in insn 538
changing reg in insn 541
changing reg in insn 542
changing reg in insn 543
changing reg in insn 544
changing reg in insn 545
changing reg in insn 546
changing reg in insn 549
changing reg in insn 550
changing reg in insn 551
changing reg in insn 552
changing reg in insn 553
changing reg in insn 554
changing reg in insn 558
changing reg in insn 556
changing reg in insn 559
changing reg in insn 560
changing reg in insn 562
changing reg in insn 563
changing reg in insn 563
changing reg in insn 565
changing reg in insn 566
changing reg in insn 567
changing reg in insn 568
changing reg in insn 570
changing reg in insn 571
changing reg in insn 571
changing reg in insn 573
changing reg in insn 574
changing reg in insn 575
changing reg in insn 576
changing reg in insn 578
changing reg in insn 579
changing reg in insn 579
changing reg in insn 581
changing reg in insn 582
changing reg in insn 584
changing reg in insn 585
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 594
changing reg in insn 595
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 601
changing reg in insn 602
changing reg in insn 606
changing reg in insn 604
changing reg in insn 607
changing reg in insn 608
changing reg in insn 610
changing reg in insn 611
changing reg in insn 613
changing reg in insn 614
changing reg in insn 616
changing reg in insn 617
changing reg in insn 615
changing reg in insn 616
changing reg in insn 619
changing reg in insn 620
changing reg in insn 618
changing reg in insn 619
changing reg in insn 622
changing reg in insn 623
changing reg in insn 621
changing reg in insn 622
changing reg in insn 624
changing reg in insn 625
changing reg in insn 628
changing reg in insn 629
changing reg in insn 633
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 639
changing reg in insn 640
changing reg in insn 643
changing reg in insn 644
changing reg in insn 648
changing reg in insn 649
changing reg in insn 650
changing reg in insn 651
changing reg in insn 654
changing reg in insn 655
changing reg in insn 658
changing reg in insn 659
changing reg in insn 664
changing reg in insn 665
changing reg in insn 666
changing reg in insn 667
changing reg in insn 670
changing reg in insn 671
changing reg in insn 674
changing reg in insn 675
changing reg in insn 680
changing reg in insn 681
changing reg in insn 682
changing reg in insn 683
changing reg in insn 686
changing reg in insn 687
changing reg in insn 688
changing reg in insn 689
changing reg in insn 690
changing reg in insn 691
changing reg in insn 692
changing reg in insn 693
changing reg in insn 700
changing reg in insn 701
changing reg in insn 702
changing reg in insn 703
changing reg in insn 704
changing reg in insn 705
changing reg in insn 706
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 716
changing reg in insn 717
changing reg in insn 718
changing reg in insn 719
changing reg in insn 721
changing reg in insn 722
changing reg in insn 726
changing reg in insn 727
changing reg in insn 729
changing reg in insn 730
changing reg in insn 728
changing reg in insn 729
changing reg in insn 731
changing reg in insn 732
changing reg in insn 733
changing reg in insn 734
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 740
changing reg in insn 741
changing reg in insn 742
changing reg in insn 747
changing reg in insn 748
changing reg in insn 749
changing reg in insn 750
changing reg in insn 757
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 761
changing reg in insn 762
changing reg in insn 763
changing reg in insn 764
changing reg in insn 765
changing reg in insn 766
changing reg in insn 773
changing reg in insn 774
changing reg in insn 775
changing reg in insn 776
changing reg in insn 778
changing reg in insn 779
changing reg in insn 783
changing reg in insn 784
changing reg in insn 786
changing reg in insn 787
changing reg in insn 785
changing reg in insn 786
changing reg in insn 788
changing reg in insn 789
changing reg in insn 790
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 794
changing reg in insn 795
changing reg in insn 796
changing reg in insn 797
changing reg in insn 798
changing reg in insn 799
changing reg in insn 802
changing reg in insn 803
changing reg in insn 804
changing reg in insn 805
changing reg in insn 806
changing reg in insn 808
changing reg in insn 809
changing reg in insn 814
changing reg in insn 815
changing reg in insn 816
changing reg in insn 818
changing reg in insn 819
changing reg in insn 821
changing reg in insn 822
changing reg in insn 828
changing reg in insn 826
changing reg in insn 829
changing reg in insn 830
changing reg in insn 831
changing reg in insn 832
changing reg in insn 833
changing reg in insn 835
changing reg in insn 836
changing reg in insn 838
changing reg in insn 839
changing reg in insn 845
changing reg in insn 846
changing reg in insn 847
changing reg in insn 848
changing reg in insn 849
changing reg in insn 850
changing reg in insn 852
changing reg in insn 853
changing reg in insn 855
changing reg in insn 856
changing reg in insn 862
changing reg in insn 863
changing reg in insn 864
changing reg in insn 865
changing reg in insn 869
changing reg in insn 870
changing reg in insn 868
changing reg in insn 869
changing reg in insn 871
changing reg in insn 872
changing reg in insn 873
changing reg in insn 875
changing reg in insn 876
changing reg in insn 880
changing reg in insn 881
changing reg in insn 879
changing reg in insn 880
changing reg in insn 885
changing reg in insn 886
changing reg in insn 884
changing reg in insn 885
changing reg in insn 911
changing reg in insn 913
changing reg in insn 913
changing reg in insn 912
changing reg in insn 913
changing reg in insn 921
changing reg in insn 922
changing reg in insn 928
changing reg in insn 929
changing reg in insn 927
changing reg in insn 928
changing reg in insn 936
changing reg in insn 937
changing reg in insn 941
changing reg in insn 942
changing reg in insn 944
changing reg in insn 947
changing reg in insn 949
changing reg in insn 952
changing reg in insn 950
changing reg in insn 953
changing reg in insn 955
changing reg in insn 958
changing reg in insn 956
changing reg in insn 959
changing reg in insn 961
changing reg in insn 964
changing reg in insn 962
changing reg in insn 965
changing reg in insn 967
changing reg in insn 968
changing reg in insn 972
changing reg in insn 973
changing reg in insn 975
changing reg in insn 976
changing reg in insn 974
changing reg in insn 975
changing reg in insn 977
changing reg in insn 978
changing reg in insn 980
changing reg in insn 981
changing reg in insn 979
changing reg in insn 980
changing reg in insn 982
changing reg in insn 983
changing reg in insn 985
changing reg in insn 986
changing reg in insn 984
changing reg in insn 985
changing reg in insn 987
changing reg in insn 988
changing reg in insn 990
changing reg in insn 991
changing reg in insn 989
changing reg in insn 990
changing reg in insn 992
changing reg in insn 993
changing reg in insn 994
changing reg in insn 995
changing reg in insn 997
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1019
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1048
changing reg in insn 1049
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1052
changing reg in insn 1053
changing reg in insn 1054
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1057
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1065
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1075
changing reg in insn 1076
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1079
changing reg in insn 1081
changing reg in insn 1082
deleting insn with uid = 1120.
deleting insn with uid = 214.
deleting insn with uid = 226.
deleting insn with uid = 238.
deleting insn with uid = 1121.
deleting insn with uid = 252.
deleting insn with uid = 1123.
deleting insn with uid = 268.
deleting insn with uid = 287.
deleting insn with uid = 303.
deleting insn with uid = 1126.
deleting insn with uid = 1128.
deleting insn with uid = 1130.
deleting insn with uid = 1132.
deleting insn with uid = 1134.
deleting insn with uid = 394.
deleting insn with uid = 1137.
deleting insn with uid = 400.
deleting insn with uid = 408.
deleting insn with uid = 1139.
deleting insn with uid = 436.
deleting insn with uid = 1141.
deleting insn with uid = 1143.
deleting insn with uid = 454.
deleting insn with uid = 1145.
deleting insn with uid = 1147.
deleting insn with uid = 473.
deleting insn with uid = 1149.
deleting insn with uid = 1151.
deleting insn with uid = 1153.
deleting insn with uid = 498.
deleting insn with uid = 1155.
deleting insn with uid = 506.
deleting insn with uid = 1157.
deleting insn with uid = 514.
deleting insn with uid = 524.
deleting insn with uid = 532.
deleting insn with uid = 540.
deleting insn with uid = 548.
deleting insn with uid = 1161.
deleting insn with uid = 1164.
deleting insn with uid = 1166.
deleting insn with uid = 1168.
deleting insn with uid = 1169.
deleting insn with uid = 612.
deleting insn with uid = 631.
deleting insn with uid = 1172.
deleting insn with uid = 646.
deleting insn with uid = 1174.
deleting insn with uid = 661.
deleting insn with uid = 1176.
deleting insn with uid = 677.
deleting insn with uid = 712.
deleting insn with uid = 714.
deleting insn with uid = 723.
deleting insn with uid = 725.
deleting insn with uid = 769.
deleting insn with uid = 771.
deleting insn with uid = 780.
deleting insn with uid = 782.
deleting insn with uid = 1185.
deleting insn with uid = 1188.
deleting insn with uid = 824.
deleting insn with uid = 1189.
deleting insn with uid = 1192.
deleting insn with uid = 842.
deleting insn with uid = 1193.
deleting insn with uid = 1196.
deleting insn with uid = 859.
deleting insn with uid = 1197.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 288.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 523.
verify found no changes in insn with uid = 713.
verify found no changes in insn with uid = 724.
verify found no changes in insn with uid = 770.
verify found no changes in insn with uid = 781.
verify found no changes in insn with uid = 943.
verify found no changes in insn with uid = 948.
verify found no changes in insn with uid = 954.
verify found no changes in insn with uid = 960.
verify found no changes in insn with uid = 966.
verify found no changes in insn with uid = 969.


gvcalc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  ref usage 	r0={172d,155u} r1={25d,9u} r2={20d,4u} r4={21d,5u} r5={23d,7u} r6={1d,566u} r7={1d,43u} r8={16d} r9={16d} r10={16d} r11={16d} r12={16d} r13={16d} r14={16d} r15={16d} r17={66d,20u} r18={16d} r19={16d} r20={1d,1u} r21={448d,466u,13e} r22={183d,168u,4e} r23={48d,31u} r24={21d,4u} r25={20d,3u} r26={18d,1u} r27={19d,2u} r28={18d,1u} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={17d,1u} r38={17d,1u} r39={16d} r40={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} 
;;    total ref usage 3540{2035d,1488u,17e} in 1030{1014 regular + 16 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 440 444 445 446 447 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])
        (reg:DI 5 di [ chord ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 beta+0 S8 A64])
        (reg:DI 4 si [ beta ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])
        (reg:DI 1 dx [ r ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 blds+0 S8 A64])
        (reg:DI 2 cx [ blds ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])
        (reg:DI 37 r8 [ rad ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [10 vel+0 S8 A64])
        (reg:DI 38 r9 [ vel ])) "../src/gvcalc.f":21 81 {*movdi_internal}
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:SF 21 xmm0 [475])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":74 127 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 u0a+0 S4 A32])
        (reg:SF 21 xmm0 [475])) "../src/gvcalc.f":74 127 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 21 xmm0 [476])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":75 127 {*movsf_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 u0t+0 S4 A32])
        (reg:SF 21 xmm0 [476])) "../src/gvcalc.f":75 127 {*movsf_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [477])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [10 vel+0 S8 A64])) "../src/gvcalc.f":78 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SF 21 xmm0 [orig:87 _1 ] [87])
        (mem:SF (reg/f:DI 0 ax [477]) [1 *vel_397(D)+0 S4 A32])) "../src/gvcalc.f":78 127 {*movsf_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 22 xmm1 [479])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 u0a+0 S4 A32])) "../src/gvcalc.f":78 127 {*movsf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SF 21 xmm0 [478])
        (plus:SF (reg:SF 21 xmm0 [orig:87 _1 ] [87])
            (reg:SF 22 xmm1 [479]))) "../src/gvcalc.f":78 802 {*fop_sf_comm}
     (nil))
(insn 20 19 21 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32])
        (reg:SF 21 xmm0 [478])) "../src/gvcalc.f":78 127 {*movsf_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SF 21 xmm0 [480])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":79 127 {*movsf_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 ua_vel+0 S4 A32])
        (reg:SF 21 xmm0 [480])) "../src/gvcalc.f":79 127 {*movsf_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SF 21 xmm0 [481])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":80 127 {*movsf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 ua_u0a+0 S4 A32])
        (reg:SF 21 xmm0 [481])) "../src/gvcalc.f":80 127 {*movsf_internal}
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 0 ax [482])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [10 omg+0 S8 A64])) "../src/gvcalc.f":82 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SF 22 xmm1 [orig:88 _2 ] [88])
        (mem:SF (reg/f:DI 0 ax [482]) [1 *omg_401(D)+0 S4 A32])) "../src/gvcalc.f":82 127 {*movsf_internal}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 0 ax [483])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":82 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SF 21 xmm0 [orig:89 _3 ] [89])
        (mem:SF (reg/f:DI 0 ax [483]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":82 127 {*movsf_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SF 21 xmm0 [orig:90 _4 ] [90])
        (mult:SF (reg:SF 21 xmm0 [orig:89 _3 ] [89])
            (reg:SF 22 xmm1 [orig:88 _2 ] [88]))) "../src/gvcalc.f":82 802 {*fop_sf_comm}
     (nil))
(insn 30 29 31 2 (set (reg:SF 21 xmm0 [484])
        (minus:SF (reg:SF 21 xmm0 [orig:90 _4 ] [90])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [1 u0t+0 S4 A32]))) "../src/gvcalc.f":82 805 {*fop_sf_1}
     (nil))
(insn 31 30 32 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])
        (reg:SF 21 xmm0 [484])) "../src/gvcalc.f":82 127 {*movsf_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:DI 0 ax [485])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":83 81 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:SF 21 xmm0 [486])
        (mem:SF (reg/f:DI 0 ax [485]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":83 127 {*movsf_internal}
     (nil))
(insn 34 33 35 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 ut_omg+0 S4 A32])
        (reg:SF 21 xmm0 [486])) "../src/gvcalc.f":83 127 {*movsf_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SF 21 xmm0 [487])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":84 127 {*movsf_internal}
     (nil))
(insn 36 35 37 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 ut_u0t+0 S4 A32])
        (reg:SF 21 xmm0 [487])) "../src/gvcalc.f":84 127 {*movsf_internal}
     (nil))
(insn 37 36 1119 2 (set (reg:SF 21 xmm0 [orig:444 _406 ] [444])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32])) "../src/gvcalc.f":87 127 {*movsf_internal}
     (nil))
(insn 1119 37 38 2 (set (reg:SF 22 xmm1 [orig:444 _406 ] [444])
        (reg:SF 21 xmm0 [orig:444 _406 ] [444])) "../src/gvcalc.f":87 127 {*movsf_internal}
     (nil))
(insn 38 1119 39 2 (set (reg:SF 22 xmm1 [orig:444 _406 ] [444])
        (mult:SF (reg:SF 22 xmm1 [orig:444 _406 ] [444])
            (reg:SF 21 xmm0 [orig:444 _406 ] [444]))) "../src/gvcalc.f":87 802 {*fop_sf_comm}
     (nil))
(insn 39 38 40 2 (set (reg:SF 21 xmm0 [orig:446 _408 ] [446])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])) "../src/gvcalc.f":87 127 {*movsf_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SF 21 xmm0 [orig:447 _409 ] [447])
        (mult:SF (reg:SF 21 xmm0 [orig:446 _408 ] [446])
            (reg:SF 21 xmm0 [orig:446 _408 ] [446]))) "../src/gvcalc.f":87 802 {*fop_sf_comm}
     (nil))
(insn 41 40 42 2 (set (reg:SF 21 xmm0 [orig:91 _5 ] [91])
        (plus:SF (reg:SF 21 xmm0 [orig:447 _409 ] [447])
            (reg:SF 22 xmm1 [orig:445 _407 ] [445]))) "../src/gvcalc.f":87 802 {*fop_sf_comm}
     (nil))
(insn 42 41 43 2 (set (reg:SF 21 xmm0 [488])
        (sqrt:SF (reg:SF 21 xmm0 [orig:91 _5 ] [91]))) "../src/gvcalc.f":87 836 {*sqrtsf2_sse}
     (nil))
(insn 43 42 44 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32])
        (reg:SF 21 xmm0 [488])) "../src/gvcalc.f":87 127 {*movsf_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SF 21 xmm0 [489])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32])) "../src/gvcalc.f":88 127 {*movsf_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SF 21 xmm0 [orig:92 _6 ] [92])
        (div:SF (reg:SF 21 xmm0 [489])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32]))) "../src/gvcalc.f":88 805 {*fop_sf_1}
     (nil))
(insn 46 45 47 2 (set (reg:SF 22 xmm1 [orig:93 _7 ] [93])
        (reg:SF 21 xmm0 [orig:92 _6 ] [92])) "../src/gvcalc.f":88 127 {*movsf_internal}
     (nil))
(insn 47 46 48 2 (set (reg:SF 21 xmm0 [491])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 ua_vel+0 S4 A32])) "../src/gvcalc.f":88 127 {*movsf_internal}
     (nil))
(insn 48 47 49 2 (set (reg:SF 21 xmm0 [490])
        (mult:SF (reg:SF 21 xmm0 [491])
            (reg:SF 22 xmm1 [orig:93 _7 ] [93]))) "../src/gvcalc.f":88 802 {*fop_sf_comm}
     (nil))
(insn 49 48 50 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 wz_vel+0 S4 A32])
        (reg:SF 21 xmm0 [490])) "../src/gvcalc.f":88 127 {*movsf_internal}
     (nil))
(insn 50 49 51 2 (set (reg:SF 21 xmm0 [492])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])) "../src/gvcalc.f":89 127 {*movsf_internal}
     (nil))
(insn 51 50 52 2 (set (reg:SF 21 xmm0 [orig:94 _8 ] [94])
        (div:SF (reg:SF 21 xmm0 [492])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32]))) "../src/gvcalc.f":89 805 {*fop_sf_1}
     (nil))
(insn 52 51 53 2 (set (reg:SF 22 xmm1 [orig:95 _9 ] [95])
        (reg:SF 21 xmm0 [orig:94 _8 ] [94])) "../src/gvcalc.f":89 127 {*movsf_internal}
     (nil))
(insn 53 52 54 2 (set (reg:SF 21 xmm0 [494])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 ut_omg+0 S4 A32])) "../src/gvcalc.f":89 127 {*movsf_internal}
     (nil))
(insn 54 53 55 2 (set (reg:SF 21 xmm0 [493])
        (mult:SF (reg:SF 21 xmm0 [494])
            (reg:SF 22 xmm1 [orig:95 _9 ] [95]))) "../src/gvcalc.f":89 802 {*fop_sf_comm}
     (nil))
(insn 55 54 56 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 wz_omg+0 S4 A32])
        (reg:SF 21 xmm0 [493])) "../src/gvcalc.f":89 127 {*movsf_internal}
     (nil))
(insn 56 55 57 2 (set (reg:SF 21 xmm0 [495])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SF 0 ax [496])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32])) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [495])) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [496])) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(call_insn/u 60 59 61 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":92 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 61 60 62 2 (set (reg:SF 0 ax [497])
        (reg:SF 21 xmm0)) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(insn 62 61 63 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 psi1+0 S4 A32])
        (reg:SF 0 ax [497])) "../src/gvcalc.f":92 127 {*movsf_internal}
     (nil))
(insn 63 62 64 2 (set (reg/f:DI 0 ax [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 beta+0 S8 A64])) "../src/gvcalc.f":93 81 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:SF 22 xmm1 [orig:96 _10 ] [96])
        (mem:SF (reg/f:DI 0 ax [498]) [1 *beta_414(D)+0 S4 A32])) "../src/gvcalc.f":93 127 {*movsf_internal}
     (nil))
(insn 65 64 66 2 (set (reg/f:DI 0 ax [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":93 81 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:SF 21 xmm0 [orig:97 _11 ] [97])
        (mem:SF (reg/f:DI 0 ax [499]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":93 127 {*movsf_internal}
     (nil))
(insn 67 66 68 2 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":93 81 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SF 23 xmm2 [orig:98 _12 ] [98])
        (mem:SF (reg/f:DI 0 ax [500]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":93 127 {*movsf_internal}
     (nil))
(insn 69 68 70 2 (set (reg:SF 21 xmm0 [orig:99 _13 ] [99])
        (div:SF (reg:SF 21 xmm0 [orig:97 _11 ] [97])
            (reg:SF 23 xmm2 [orig:98 _12 ] [98]))) "../src/gvcalc.f":93 805 {*fop_sf_1}
     (nil))
(insn 70 69 71 2 (set (reg:SF 21 xmm0 [501])
        (plus:SF (reg:SF 21 xmm0 [orig:99 _13 ] [99])
            (reg:SF 22 xmm1 [orig:96 _10 ] [96]))) "../src/gvcalc.f":93 802 {*fop_sf_comm}
     (nil))
(insn 71 70 72 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 psi2+0 S4 A32])
        (reg:SF 21 xmm0 [501])) "../src/gvcalc.f":93 127 {*movsf_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 psi1+0 S4 A32])) "../src/gvcalc.f":94 127 {*movsf_internal}
     (nil))
(insn 73 72 74 2 (set (reg:SF 22 xmm1 [502])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 psi2+0 S4 A32])) "../src/gvcalc.f":94 127 {*movsf_internal}
     (nil))
(insn 74 73 75 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [502])
            (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440]))) "../src/gvcalc.f":94 51 {*cmpiusf}
     (nil))
(insn 75 74 76 2 (set (reg:QI 1 dx [orig:100 _14 ] [100])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":94 613 {*setcc_qi}
     (nil))
(insn 76 75 77 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440])
            (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440]))) "../src/gvcalc.f":94 51 {*cmpiusf}
     (nil))
(insn 77 76 78 2 (set (reg:QI 0 ax [orig:101 _15 ] [101])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":94 613 {*setcc_qi}
     (nil))
(insn 78 77 79 2 (parallel [
            (set (reg:QI 0 ax [orig:102 _16 ] [102])
                (ior:QI (reg:QI 0 ax [orig:101 _15 ] [101])
                    (reg:QI 1 dx [orig:100 _14 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":94 423 {*iorqi_1}
     (nil))
(insn 79 78 80 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:102 _16 ] [102])
            (const_int 0 [0]))) "../src/gvcalc.f":94 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 80 79 81 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "../src/gvcalc.f":94 617 {*jcc_1}
     (nil)
 -> 83)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 440

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 440
(note 81 80 82 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 3 (set (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 psi2+0 S4 A32])) "../src/gvcalc.f":94 127 {*movsf_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 440

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 440
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 440
;; lr  def 	 503
(code_label 83 82 84 4 2 (nil) [1 uses])
(note 84 83 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 psi+0 S4 A32])
        (reg:SF 21 xmm0 [orig:440 M.0_387 ] [440])) "../src/gvcalc.f":94 127 {*movsf_internal}
     (nil))
(insn 86 85 87 4 (set (reg/f:DI 0 ax [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 240 [0xf0])) [11 lconv+0 S8 A64])) "../src/gvcalc.f":97 81 {*movdi_internal}
     (nil))
(insn 87 86 88 4 (set (mem:SI (reg/f:DI 0 ax [503]) [12 *lconv_421(D)+0 S4 A32])
        (const_int 0 [0])) "../src/gvcalc.f":97 82 {*movsi_internal}
     (nil))
(insn 88 87 931 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/gvcalc.f":98 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              24 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 448
(code_label 931 88 89 5 19 (nil) [1 uses])
(note 89 931 90 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 iter+0 S4 A32])
            (const_int 20 [0x14]))) "../src/gvcalc.f":98 7 {*cmpsi_1}
     (nil))
(insn 91 90 92 5 (set (reg:QI 0 ax [orig:448 _433 ] [448])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":98 613 {*setcc_qi}
     (nil))
(insn 92 91 93 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:448 _433 ] [448])
            (const_int 0 [0]))) "../src/gvcalc.f":98 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 93 92 94 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1116)
            (pc))) "../src/gvcalc.f":98 617 {*jcc_1}
     (nil)
 -> 1116)
;;  succ:       27
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544
(note 94 93 95 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 6 (set (reg:SF 0 ax [504])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 psi+0 S4 A32])) "../src/gvcalc.f":99 127 {*movsf_internal}
     (nil))
(insn 96 95 97 6 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [504])) "../src/gvcalc.f":99 127 {*movsf_internal}
     (nil))
(call_insn/u 97 96 98 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":99 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 98 97 99 6 (set (reg:SF 0 ax [505])
        (reg:SF 21 xmm0)) "../src/gvcalc.f":99 127 {*movsf_internal}
     (nil))
(insn 99 98 100 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 cosp+0 S4 A32])
        (reg:SF 0 ax [505])) "../src/gvcalc.f":99 127 {*movsf_internal}
     (nil))
(insn 100 99 101 6 (set (reg:SF 0 ax [506])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 psi+0 S4 A32])) "../src/gvcalc.f":100 127 {*movsf_internal}
     (nil))
(insn 101 100 102 6 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [506])) "../src/gvcalc.f":100 127 {*movsf_internal}
     (nil))
(call_insn/u 102 101 103 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":100 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 103 102 104 6 (set (reg:SF 0 ax [507])
        (reg:SF 21 xmm0)) "../src/gvcalc.f":100 127 {*movsf_internal}
     (nil))
(insn 104 103 105 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 sinp+0 S4 A32])
        (reg:SF 0 ax [507])) "../src/gvcalc.f":100 127 {*movsf_internal}
     (nil))
(insn 105 104 106 6 (set (reg:SF 22 xmm1 [508])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32])) "../src/gvcalc.f":103 127 {*movsf_internal}
     (nil))
(insn 106 105 107 6 (set (reg:SF 21 xmm0 [509])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":103 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 107 106 108 6 (set (reg:SF 22 xmm1 [orig:103 _17 ] [103])
        (mult:SF (reg:SF 22 xmm1 [508])
            (reg:SF 21 xmm0 [509]))) "../src/gvcalc.f":103 802 {*fop_sf_comm}
     (nil))
(insn 108 107 109 6 (set (reg:SF 23 xmm2 [510])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32])) "../src/gvcalc.f":103 127 {*movsf_internal}
     (nil))
(insn 109 108 110 6 (set (reg:SF 21 xmm0 [511])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":103 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 110 109 111 6 (set (reg:SF 21 xmm0 [orig:104 _18 ] [104])
        (mult:SF (reg:SF 21 xmm0 [511])
            (reg:SF 23 xmm2 [510]))) "../src/gvcalc.f":103 802 {*fop_sf_comm}
     (nil))
(insn 111 110 112 6 (set (reg:SF 21 xmm0 [orig:105 _19 ] [105])
        (mult:SF (reg:SF 21 xmm0 [orig:104 _18 ] [104])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 sinp+0 S4 A32]))) "../src/gvcalc.f":103 802 {*fop_sf_comm}
     (nil))
(insn 112 111 113 6 (set (reg:SF 21 xmm0 [512])
        (plus:SF (reg:SF 21 xmm0 [orig:105 _19 ] [105])
            (reg:SF 22 xmm1 [orig:103 _17 ] [103]))) "../src/gvcalc.f":103 802 {*fop_sf_comm}
     (nil))
(insn 113 112 114 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])
        (reg:SF 21 xmm0 [512])) "../src/gvcalc.f":103 127 {*movsf_internal}
     (nil))
(insn 114 113 115 6 (set (reg:SF 22 xmm1 [513])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32])) "../src/gvcalc.f":104 127 {*movsf_internal}
     (nil))
(insn 115 114 116 6 (set (reg:SF 21 xmm0 [514])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":104 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 116 115 117 6 (set (reg:SF 21 xmm0 [orig:106 _20 ] [106])
        (mult:SF (reg:SF 21 xmm0 [514])
            (reg:SF 22 xmm1 [513]))) "../src/gvcalc.f":104 802 {*fop_sf_comm}
     (nil))
(insn 117 116 118 6 (set (reg:SF 22 xmm1 [516])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 cosp+0 S4 A32])) "../src/gvcalc.f":104 127 {*movsf_internal}
     (nil))
(insn 118 117 119 6 (set (reg:SF 21 xmm0 [515])
        (mult:SF (reg:SF 21 xmm0 [orig:106 _20 ] [106])
            (reg:SF 22 xmm1 [516]))) "../src/gvcalc.f":104 802 {*fop_sf_comm}
     (nil))
(insn 119 118 120 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 wa_psi+0 S4 A32])
        (reg:SF 21 xmm0 [515])) "../src/gvcalc.f":104 127 {*movsf_internal}
     (nil))
(insn 120 119 121 6 (set (reg:SF 22 xmm1 [517])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 ua_vel+0 S4 A32])) "../src/gvcalc.f":105 127 {*movsf_internal}
     (nil))
(insn 121 120 122 6 (set (reg:SF 21 xmm0 [518])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":105 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 122 121 123 6 (set (reg:SF 22 xmm1 [orig:107 _21 ] [107])
        (mult:SF (reg:SF 22 xmm1 [517])
            (reg:SF 21 xmm0 [518]))) "../src/gvcalc.f":105 802 {*fop_sf_comm}
     (nil))
(insn 123 122 124 6 (set (reg:SF 23 xmm2 [519])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 wz_vel+0 S4 A32])) "../src/gvcalc.f":105 127 {*movsf_internal}
     (nil))
(insn 124 123 125 6 (set (reg:SF 21 xmm0 [520])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":105 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 125 124 126 6 (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
        (mult:SF (reg:SF 21 xmm0 [520])
            (reg:SF 23 xmm2 [519]))) "../src/gvcalc.f":105 802 {*fop_sf_comm}
     (nil))
(insn 126 125 127 6 (set (reg:SF 21 xmm0 [orig:109 _23 ] [109])
        (mult:SF (reg:SF 21 xmm0 [orig:108 _22 ] [108])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 sinp+0 S4 A32]))) "../src/gvcalc.f":105 802 {*fop_sf_comm}
     (nil))
(insn 127 126 128 6 (set (reg:SF 21 xmm0 [521])
        (plus:SF (reg:SF 21 xmm0 [orig:109 _23 ] [109])
            (reg:SF 22 xmm1 [orig:107 _21 ] [107]))) "../src/gvcalc.f":105 802 {*fop_sf_comm}
     (nil))
(insn 128 127 129 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 wa_vel+0 S4 A32])
        (reg:SF 21 xmm0 [521])) "../src/gvcalc.f":105 127 {*movsf_internal}
     (nil))
(insn 129 128 130 6 (set (reg:SF 22 xmm1 [522])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 wz_omg+0 S4 A32])) "../src/gvcalc.f":106 127 {*movsf_internal}
     (nil))
(insn 130 129 131 6 (set (reg:SF 21 xmm0 [523])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":106 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 131 130 132 6 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mult:SF (reg:SF 21 xmm0 [523])
            (reg:SF 22 xmm1 [522]))) "../src/gvcalc.f":106 802 {*fop_sf_comm}
     (nil))
(insn 132 131 133 6 (set (reg:SF 22 xmm1 [525])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 sinp+0 S4 A32])) "../src/gvcalc.f":106 127 {*movsf_internal}
     (nil))
(insn 133 132 134 6 (set (reg:SF 21 xmm0 [524])
        (mult:SF (reg:SF 21 xmm0 [orig:110 _24 ] [110])
            (reg:SF 22 xmm1 [525]))) "../src/gvcalc.f":106 802 {*fop_sf_comm}
     (nil))
(insn 134 133 135 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [1 wa_omg+0 S4 A32])
        (reg:SF 21 xmm0 [524])) "../src/gvcalc.f":106 127 {*movsf_internal}
     (nil))
(insn 135 134 136 6 (set (reg:SF 22 xmm1 [526])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])) "../src/gvcalc.f":108 127 {*movsf_internal}
     (nil))
(insn 136 135 137 6 (set (reg:SF 21 xmm0 [527])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":108 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 137 136 138 6 (set (reg:SF 22 xmm1 [orig:111 _25 ] [111])
        (mult:SF (reg:SF 22 xmm1 [526])
            (reg:SF 21 xmm0 [527]))) "../src/gvcalc.f":108 802 {*fop_sf_comm}
     (nil))
(insn 138 137 139 6 (set (reg:SF 23 xmm2 [528])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32])) "../src/gvcalc.f":108 127 {*movsf_internal}
     (nil))
(insn 139 138 140 6 (set (reg:SF 21 xmm0 [529])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":108 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 140 139 141 6 (set (reg:SF 21 xmm0 [orig:112 _26 ] [112])
        (mult:SF (reg:SF 21 xmm0 [529])
            (reg:SF 23 xmm2 [528]))) "../src/gvcalc.f":108 802 {*fop_sf_comm}
     (nil))
(insn 141 140 142 6 (set (reg:SF 21 xmm0 [orig:113 _27 ] [113])
        (mult:SF (reg:SF 21 xmm0 [orig:112 _26 ] [112])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])) [1 cosp+0 S4 A32]))) "../src/gvcalc.f":108 802 {*fop_sf_comm}
     (nil))
(insn 142 141 143 6 (set (reg:SF 21 xmm0 [530])
        (plus:SF (reg:SF 21 xmm0 [orig:113 _27 ] [113])
            (reg:SF 22 xmm1 [orig:111 _25 ] [111]))) "../src/gvcalc.f":108 802 {*fop_sf_comm}
     (nil))
(insn 143 142 144 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])
        (reg:SF 21 xmm0 [530])) "../src/gvcalc.f":108 127 {*movsf_internal}
     (nil))
(insn 144 143 145 6 (set (reg:SF 22 xmm1 [531])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 wz+0 S4 A32])) "../src/gvcalc.f":109 127 {*movsf_internal}
     (nil))
(insn 145 144 146 6 (set (reg:SF 21 xmm0 [532])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":109 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 146 145 147 6 (set (reg:SF 21 xmm0 [orig:114 _28 ] [114])
        (mult:SF (reg:SF 21 xmm0 [532])
            (reg:SF 22 xmm1 [531]))) "../src/gvcalc.f":109 802 {*fop_sf_comm}
     (nil))
(insn 147 146 148 6 (set (reg:SF 21 xmm0 [orig:115 _29 ] [115])
        (mult:SF (reg:SF 21 xmm0 [orig:114 _28 ] [114])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 sinp+0 S4 A32]))) "../src/gvcalc.f":109 802 {*fop_sf_comm}
     (nil))
(insn 148 147 149 6 (set (reg:V4SF 22 xmm1 [534])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":109 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 149 148 150 6 (parallel [
            (set (reg:SF 21 xmm0 [533])
                (neg:SF (reg:SF 21 xmm0 [orig:115 _29 ] [115])))
            (use (reg:V4SF 22 xmm1 [534]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":109 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:115 _29 ] [115]))
        (nil)))
(insn 150 149 151 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 wt_psi+0 S4 A32])
        (reg:SF 21 xmm0 [533])) "../src/gvcalc.f":109 127 {*movsf_internal}
     (nil))
(insn 151 150 152 6 (set (reg:SF 22 xmm1 [535])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 wz_vel+0 S4 A32])) "../src/gvcalc.f":110 127 {*movsf_internal}
     (nil))
(insn 152 151 153 6 (set (reg:SF 21 xmm0 [536])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":110 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 153 152 154 6 (set (reg:SF 21 xmm0 [orig:116 _30 ] [116])
        (mult:SF (reg:SF 21 xmm0 [536])
            (reg:SF 22 xmm1 [535]))) "../src/gvcalc.f":110 802 {*fop_sf_comm}
     (nil))
(insn 154 153 155 6 (set (reg:SF 22 xmm1 [538])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 cosp+0 S4 A32])) "../src/gvcalc.f":110 127 {*movsf_internal}
     (nil))
(insn 155 154 156 6 (set (reg:SF 21 xmm0 [537])
        (mult:SF (reg:SF 21 xmm0 [orig:116 _30 ] [116])
            (reg:SF 22 xmm1 [538]))) "../src/gvcalc.f":110 802 {*fop_sf_comm}
     (nil))
(insn 156 155 157 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 wt_vel+0 S4 A32])
        (reg:SF 21 xmm0 [537])) "../src/gvcalc.f":110 127 {*movsf_internal}
     (nil))
(insn 157 156 158 6 (set (reg:SF 22 xmm1 [539])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 ut_omg+0 S4 A32])) "../src/gvcalc.f":111 127 {*movsf_internal}
     (nil))
(insn 158 157 159 6 (set (reg:SF 21 xmm0 [540])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":111 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 159 158 160 6 (set (reg:SF 22 xmm1 [orig:117 _31 ] [117])
        (mult:SF (reg:SF 22 xmm1 [539])
            (reg:SF 21 xmm0 [540]))) "../src/gvcalc.f":111 802 {*fop_sf_comm}
     (nil))
(insn 160 159 161 6 (set (reg:SF 23 xmm2 [541])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 wz_omg+0 S4 A32])) "../src/gvcalc.f":111 127 {*movsf_internal}
     (nil))
(insn 161 160 162 6 (set (reg:SF 21 xmm0 [542])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":111 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 162 161 163 6 (set (reg:SF 21 xmm0 [orig:118 _32 ] [118])
        (mult:SF (reg:SF 21 xmm0 [542])
            (reg:SF 23 xmm2 [541]))) "../src/gvcalc.f":111 802 {*fop_sf_comm}
     (nil))
(insn 163 162 164 6 (set (reg:SF 21 xmm0 [orig:119 _33 ] [119])
        (mult:SF (reg:SF 21 xmm0 [orig:118 _32 ] [118])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])) [1 cosp+0 S4 A32]))) "../src/gvcalc.f":111 802 {*fop_sf_comm}
     (nil))
(insn 164 163 165 6 (set (reg:SF 21 xmm0 [543])
        (plus:SF (reg:SF 21 xmm0 [orig:119 _33 ] [119])
            (reg:SF 22 xmm1 [orig:117 _31 ] [117]))) "../src/gvcalc.f":111 802 {*fop_sf_comm}
     (nil))
(insn 165 164 166 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [1 wt_omg+0 S4 A32])
        (reg:SF 21 xmm0 [543])) "../src/gvcalc.f":111 127 {*movsf_internal}
     (nil))
(insn 166 165 167 6 (set (reg:SF 21 xmm0 [544])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":114 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 167 166 168 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [544])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":114 51 {*cmpiusf}
     (nil))
(jump_insn 168 167 1088 6 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "../src/gvcalc.f":114 617 {*jcc_1}
     (nil)
 -> 194)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 545
(note 1088 168 169 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 169 1088 170 7 (set (reg:SF 21 xmm0 [545])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":114 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 170 169 171 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [545])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":114 51 {*cmpiusf}
     (nil))
(jump_insn 171 170 175 7 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 194)
            (pc))) "../src/gvcalc.f":114 617 {*jcc_1}
     (nil)
 -> 194)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 546 547 548 549 550 551 552 553
(note 175 171 176 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 8 (set (reg:SF 21 xmm0 [546])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":115 127 {*movsf_internal}
     (nil))
(insn 177 176 178 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32])
        (reg:SF 21 xmm0 [546])) "../src/gvcalc.f":115 127 {*movsf_internal}
     (nil))
(insn 178 177 179 8 (set (reg:SF 21 xmm0 [547])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":116 127 {*movsf_internal}
     (nil))
(insn 179 178 180 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 f_psi+0 S4 A32])
        (reg:SF 21 xmm0 [547])) "../src/gvcalc.f":116 127 {*movsf_internal}
     (nil))
(insn 180 179 181 8 (set (reg:SF 21 xmm0 [548])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":117 127 {*movsf_internal}
     (nil))
(insn 181 180 182 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 f_vel+0 S4 A32])
        (reg:SF 21 xmm0 [548])) "../src/gvcalc.f":117 127 {*movsf_internal}
     (nil))
(insn 182 181 183 8 (set (reg:SF 21 xmm0 [549])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":118 127 {*movsf_internal}
     (nil))
(insn 183 182 184 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 f_omg+0 S4 A32])
        (reg:SF 21 xmm0 [549])) "../src/gvcalc.f":118 127 {*movsf_internal}
     (nil))
(insn 184 183 185 8 (set (reg:SF 21 xmm0 [550])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":120 127 {*movsf_internal}
     (nil))
(insn 185 184 186 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 adw+0 S4 A32])
        (reg:SF 21 xmm0 [550])) "../src/gvcalc.f":120 127 {*movsf_internal}
     (nil))
(insn 186 185 187 8 (set (reg:SF 21 xmm0 [551])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":121 127 {*movsf_internal}
     (nil))
(insn 187 186 188 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 adw_psi+0 S4 A32])
        (reg:SF 21 xmm0 [551])) "../src/gvcalc.f":121 127 {*movsf_internal}
     (nil))
(insn 188 187 189 8 (set (reg:SF 21 xmm0 [552])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":122 127 {*movsf_internal}
     (nil))
(insn 189 188 190 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 adw_vel+0 S4 A32])
        (reg:SF 21 xmm0 [552])) "../src/gvcalc.f":122 127 {*movsf_internal}
     (nil))
(insn 190 189 191 8 (set (reg:SF 21 xmm0 [553])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":123 127 {*movsf_internal}
     (nil))
(insn 191 190 1105 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 adw_omg+0 S4 A32])
        (reg:SF 21 xmm0 [553])) "../src/gvcalc.f":123 127 {*movsf_internal}
     (nil))
(jump_insn 1105 191 1106 8 (set (pc)
        (label_ref 353)) 649 {jump}
     (nil)
 -> 353)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1106 1105 194)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       6
;;              7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 441 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582
(code_label 194 1106 195 9 4 (nil) [2 uses])
(note 195 194 196 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 9 (set (reg:SF 21 xmm0 [554])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":126 127 {*movsf_internal}
     (nil))
(insn 197 196 198 9 (set (reg:SF 21 xmm0 [orig:120 _34 ] [120])
        (div:SF (reg:SF 21 xmm0 [554])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":126 805 {*fop_sf_1}
     (nil))
(insn 198 197 199 9 (set (reg/f:DI 0 ax [555])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":126 81 {*movdi_internal}
     (nil))
(insn 199 198 200 9 (set (reg:SF 22 xmm1 [orig:121 _35 ] [121])
        (mem:SF (reg/f:DI 0 ax [555]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":126 127 {*movsf_internal}
     (nil))
(insn 200 199 201 9 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (mult:SF (reg:SF 21 xmm0 [orig:120 _34 ] [120])
            (reg:SF 22 xmm1 [orig:121 _35 ] [121]))) "../src/gvcalc.f":126 802 {*fop_sf_comm}
     (nil))
(insn 201 200 202 9 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":126 81 {*movdi_internal}
     (nil))
(insn 202 201 203 9 (set (reg:SF 22 xmm1 [orig:123 _37 ] [123])
        (mem:SF (reg/f:DI 0 ax [556]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":126 127 {*movsf_internal}
     (nil))
(insn 203 202 204 9 (set (reg:SF 21 xmm0 [557])
        (div:SF (reg:SF 21 xmm0 [orig:122 _36 ] [122])
            (reg:SF 22 xmm1 [orig:123 _37 ] [123]))) "../src/gvcalc.f":126 805 {*fop_sf_1}
     (nil))
(insn 204 203 205 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])
        (reg:SF 21 xmm0 [557])) "../src/gvcalc.f":126 127 {*movsf_internal}
     (nil))
(insn 205 204 206 9 (set (reg/f:DI 0 ax [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":127 81 {*movdi_internal}
     (nil))
(insn 206 205 207 9 (set (reg:SF 21 xmm0 [orig:124 _38 ] [124])
        (mem:SF (reg/f:DI 0 ax [558]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":127 127 {*movsf_internal}
     (nil))
(insn 207 206 208 9 (set (reg:SF 21 xmm0 [orig:125 _39 ] [125])
        (mult:SF (reg:SF 21 xmm0 [orig:124 _38 ] [124])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [1 wt_psi+0 S4 A32]))) "../src/gvcalc.f":127 802 {*fop_sf_comm}
     (nil))
(insn 208 207 209 9 (set (reg/f:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":127 81 {*movdi_internal}
     (nil))
(insn 209 208 210 9 (set (reg:SF 22 xmm1 [orig:126 _40 ] [126])
        (mem:SF (reg/f:DI 0 ax [559]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":127 127 {*movsf_internal}
     (nil))
(insn 210 209 211 9 (set (reg:SF 21 xmm0 [orig:127 _41 ] [127])
        (div:SF (reg:SF 21 xmm0 [orig:125 _39 ] [125])
            (reg:SF 22 xmm1 [orig:126 _40 ] [126]))) "../src/gvcalc.f":127 805 {*fop_sf_1}
     (nil))
(insn 211 210 212 9 (set (reg:SF 22 xmm1 [560])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":127 127 {*movsf_internal}
     (nil))
(insn 212 211 213 9 (set (reg:SF 22 xmm1 [orig:128 _42 ] [128])
        (mult:SF (reg:SF 22 xmm1 [560])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 wa_psi+0 S4 A32]))) "../src/gvcalc.f":127 802 {*fop_sf_comm}
     (nil))
(insn 213 212 215 9 (set (reg:SF 21 xmm0 [orig:129 _43 ] [129])
        (minus:SF (reg:SF 21 xmm0 [orig:127 _41 ] [127])
            (reg:SF 22 xmm1 [orig:128 _42 ] [128]))) "../src/gvcalc.f":127 805 {*fop_sf_1}
     (nil))
(insn 215 213 216 9 (set (reg:SF 21 xmm0 [561])
        (div:SF (reg:SF 21 xmm0 [orig:130 _44 ] [130])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":127 805 {*fop_sf_1}
     (nil))
(insn 216 215 217 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [1 tsr_psi+0 S4 A32])
        (reg:SF 21 xmm0 [561])) "../src/gvcalc.f":127 127 {*movsf_internal}
     (nil))
(insn 217 216 218 9 (set (reg/f:DI 0 ax [562])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":128 81 {*movdi_internal}
     (nil))
(insn 218 217 219 9 (set (reg:SF 21 xmm0 [orig:131 _45 ] [131])
        (mem:SF (reg/f:DI 0 ax [562]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":128 127 {*movsf_internal}
     (nil))
(insn 219 218 220 9 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (mult:SF (reg:SF 21 xmm0 [orig:131 _45 ] [131])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [1 wt_vel+0 S4 A32]))) "../src/gvcalc.f":128 802 {*fop_sf_comm}
     (nil))
(insn 220 219 221 9 (set (reg/f:DI 0 ax [563])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":128 81 {*movdi_internal}
     (nil))
(insn 221 220 222 9 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (mem:SF (reg/f:DI 0 ax [563]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":128 127 {*movsf_internal}
     (nil))
(insn 222 221 223 9 (set (reg:SF 21 xmm0 [orig:134 _48 ] [134])
        (div:SF (reg:SF 21 xmm0 [orig:132 _46 ] [132])
            (reg:SF 22 xmm1 [orig:133 _47 ] [133]))) "../src/gvcalc.f":128 805 {*fop_sf_1}
     (nil))
(insn 223 222 224 9 (set (reg:SF 22 xmm1 [564])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":128 127 {*movsf_internal}
     (nil))
(insn 224 223 225 9 (set (reg:SF 22 xmm1 [orig:135 _49 ] [135])
        (mult:SF (reg:SF 22 xmm1 [564])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [1 wa_vel+0 S4 A32]))) "../src/gvcalc.f":128 802 {*fop_sf_comm}
     (nil))
(insn 225 224 227 9 (set (reg:SF 21 xmm0 [orig:136 _50 ] [136])
        (minus:SF (reg:SF 21 xmm0 [orig:134 _48 ] [134])
            (reg:SF 22 xmm1 [orig:135 _49 ] [135]))) "../src/gvcalc.f":128 805 {*fop_sf_1}
     (nil))
(insn 227 225 228 9 (set (reg:SF 21 xmm0 [565])
        (div:SF (reg:SF 21 xmm0 [orig:137 _51 ] [137])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":128 805 {*fop_sf_1}
     (nil))
(insn 228 227 229 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 tsr_vel+0 S4 A32])
        (reg:SF 21 xmm0 [565])) "../src/gvcalc.f":128 127 {*movsf_internal}
     (nil))
(insn 229 228 230 9 (set (reg/f:DI 0 ax [566])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":129 81 {*movdi_internal}
     (nil))
(insn 230 229 231 9 (set (reg:SF 21 xmm0 [orig:138 _52 ] [138])
        (mem:SF (reg/f:DI 0 ax [566]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":129 127 {*movsf_internal}
     (nil))
(insn 231 230 232 9 (set (reg:SF 21 xmm0 [orig:139 _53 ] [139])
        (mult:SF (reg:SF 21 xmm0 [orig:138 _52 ] [138])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [1 wt_omg+0 S4 A32]))) "../src/gvcalc.f":129 802 {*fop_sf_comm}
     (nil))
(insn 232 231 233 9 (set (reg/f:DI 0 ax [567])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":129 81 {*movdi_internal}
     (nil))
(insn 233 232 234 9 (set (reg:SF 22 xmm1 [orig:140 _54 ] [140])
        (mem:SF (reg/f:DI 0 ax [567]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":129 127 {*movsf_internal}
     (nil))
(insn 234 233 235 9 (set (reg:SF 21 xmm0 [orig:141 _55 ] [141])
        (div:SF (reg:SF 21 xmm0 [orig:139 _53 ] [139])
            (reg:SF 22 xmm1 [orig:140 _54 ] [140]))) "../src/gvcalc.f":129 805 {*fop_sf_1}
     (nil))
(insn 235 234 236 9 (set (reg:SF 22 xmm1 [568])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":129 127 {*movsf_internal}
     (nil))
(insn 236 235 237 9 (set (reg:SF 22 xmm1 [orig:142 _56 ] [142])
        (mult:SF (reg:SF 22 xmm1 [568])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [1 wa_omg+0 S4 A32]))) "../src/gvcalc.f":129 802 {*fop_sf_comm}
     (nil))
(insn 237 236 239 9 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (minus:SF (reg:SF 21 xmm0 [orig:141 _55 ] [141])
            (reg:SF 22 xmm1 [orig:142 _56 ] [142]))) "../src/gvcalc.f":129 805 {*fop_sf_1}
     (nil))
(insn 239 237 240 9 (set (reg:SF 21 xmm0 [569])
        (div:SF (reg:SF 21 xmm0 [orig:144 _58 ] [144])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32]))) "../src/gvcalc.f":129 805 {*fop_sf_1}
     (nil))
(insn 240 239 241 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 tsr_omg+0 S4 A32])
        (reg:SF 21 xmm0 [569])) "../src/gvcalc.f":129 127 {*movsf_internal}
     (nil))
(insn 241 240 242 9 (set (reg/f:DI 0 ax [570])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 blds+0 S8 A64])) "../src/gvcalc.f":131 81 {*movdi_internal}
     (nil))
(insn 242 241 243 9 (set (reg:SF 22 xmm1 [orig:145 _59 ] [145])
        (mem:SF (reg/f:DI 0 ax [570]) [1 *blds_449(D)+0 S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 243 242 244 9 (set (reg:SF 21 xmm0 [571])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 244 243 245 9 (set (reg:SF 21 xmm0 [orig:146 _60 ] [146])
        (mult:SF (reg:SF 21 xmm0 [571])
            (reg:SF 22 xmm1 [orig:145 _59 ] [145]))) "../src/gvcalc.f":131 802 {*fop_sf_comm}
     (nil))
(insn 245 244 246 9 (set (reg/f:DI 0 ax [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":131 81 {*movdi_internal}
     (nil))
(insn 246 245 247 9 (set (reg:SF 22 xmm1 [orig:147 _61 ] [147])
        (mem:SF (reg/f:DI 0 ax [572]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 247 246 248 9 (set (reg/f:DI 0 ax [573])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":131 81 {*movdi_internal}
     (nil))
(insn 248 247 249 9 (set (reg:SF 23 xmm2 [orig:148 _62 ] [148])
        (mem:SF (reg/f:DI 0 ax [573]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 249 248 250 9 (set (reg:SF 22 xmm1 [orig:149 _63 ] [149])
        (div:SF (reg:SF 22 xmm1 [orig:147 _61 ] [147])
            (reg:SF 23 xmm2 [orig:148 _62 ] [148]))) "../src/gvcalc.f":131 805 {*fop_sf_1}
     (nil))
(insn 250 249 251 9 (set (reg:SF 23 xmm2 [574])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 251 250 1122 9 (set (reg:SF 23 xmm2 [574])
        (minus:SF (reg:SF 23 xmm2 [574])
            (reg:SF 22 xmm1 [orig:149 _63 ] [149]))) "../src/gvcalc.f":131 805 {*fop_sf_1}
     (nil))
(insn 1122 251 253 9 (set (reg:SF 22 xmm1 [orig:150 _64 ] [150])
        (reg:SF 23 xmm2 [574])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 253 1122 254 9 (set (reg:SF 21 xmm0 [orig:152 _66 ] [152])
        (mult:SF (reg:SF 21 xmm0 [orig:146 _60 ] [146])
            (reg:SF 22 xmm1 [orig:151 _65 ] [151]))) "../src/gvcalc.f":131 802 {*fop_sf_comm}
     (nil))
(insn 254 253 255 9 (set (reg:SF 22 xmm1 [576])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 255 254 256 9 (set (reg:SF 21 xmm0 [575])
        (mult:SF (reg:SF 21 xmm0 [orig:152 _66 ] [152])
            (reg:SF 22 xmm1 [576]))) "../src/gvcalc.f":131 802 {*fop_sf_comm}
     (nil))
(insn 256 255 257 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 farg+0 S4 A32])
        (reg:SF 21 xmm0 [575])) "../src/gvcalc.f":131 127 {*movsf_internal}
     (nil))
(insn 257 256 258 9 (set (reg/f:DI 0 ax [577])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 blds+0 S8 A64])) "../src/gvcalc.f":132 81 {*movdi_internal}
     (nil))
(insn 258 257 259 9 (set (reg:SF 22 xmm1 [orig:153 _67 ] [153])
        (mem:SF (reg/f:DI 0 ax [577]) [1 *blds_449(D)+0 S4 A32])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (nil))
(insn 259 258 260 9 (set (reg:SF 21 xmm0 [578])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 260 259 261 9 (set (reg:SF 21 xmm0 [orig:154 _68 ] [154])
        (mult:SF (reg:SF 21 xmm0 [578])
            (reg:SF 22 xmm1 [orig:153 _67 ] [153]))) "../src/gvcalc.f":132 802 {*fop_sf_comm}
     (nil))
(insn 261 260 262 9 (set (reg/f:DI 0 ax [579])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":132 81 {*movdi_internal}
     (nil))
(insn 262 261 263 9 (set (reg:SF 22 xmm1 [orig:155 _69 ] [155])
        (mem:SF (reg/f:DI 0 ax [579]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (nil))
(insn 263 262 264 9 (set (reg/f:DI 0 ax [580])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":132 81 {*movdi_internal}
     (nil))
(insn 264 263 265 9 (set (reg:SF 23 xmm2 [orig:156 _70 ] [156])
        (mem:SF (reg/f:DI 0 ax [580]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (nil))
(insn 265 264 266 9 (set (reg:SF 22 xmm1 [orig:157 _71 ] [157])
        (div:SF (reg:SF 22 xmm1 [orig:155 _69 ] [155])
            (reg:SF 23 xmm2 [orig:156 _70 ] [156]))) "../src/gvcalc.f":132 805 {*fop_sf_1}
     (nil))
(insn 266 265 267 9 (set (reg:SF 23 xmm2 [581])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 267 266 1124 9 (set (reg:SF 23 xmm2 [581])
        (minus:SF (reg:SF 23 xmm2 [581])
            (reg:SF 22 xmm1 [orig:157 _71 ] [157]))) "../src/gvcalc.f":132 805 {*fop_sf_1}
     (nil))
(insn 1124 267 269 9 (set (reg:SF 22 xmm1 [orig:158 _72 ] [158])
        (reg:SF 23 xmm2 [581])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (nil))
(insn 269 1124 270 9 (set (reg:SF 21 xmm0 [582])
        (mult:SF (reg:SF 21 xmm0 [orig:154 _68 ] [154])
            (reg:SF 22 xmm1 [orig:159 _73 ] [159]))) "../src/gvcalc.f":132 802 {*fop_sf_comm}
     (nil))
(insn 270 269 271 9 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [1 farg_tsr+0 S4 A32])
        (reg:SF 21 xmm0 [582])) "../src/gvcalc.f":132 127 {*movsf_internal}
     (nil))
(insn 271 270 272 9 (set (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 farg+0 S4 A32])) "../src/gvcalc.f":133 127 {*movsf_internal}
     (nil))
(insn 272 271 273 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441])
            (mem/u/c:SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [1  S4 A32]))) "../src/gvcalc.f":133 51 {*cmpiusf}
     (nil))
(insn 273 272 274 9 (set (reg:QI 1 dx [orig:160 _74 ] [160])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":133 613 {*setcc_qi}
     (nil))
(insn 274 273 275 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441])
            (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441]))) "../src/gvcalc.f":133 51 {*cmpiusf}
     (nil))
(insn 275 274 276 9 (set (reg:QI 0 ax [orig:161 _75 ] [161])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":133 613 {*setcc_qi}
     (nil))
(insn 276 275 277 9 (parallel [
            (set (reg:QI 0 ax [orig:162 _76 ] [162])
                (ior:QI (reg:QI 0 ax [orig:161 _75 ] [161])
                    (reg:QI 1 dx [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":133 423 {*iorqi_1}
     (nil))
(insn 277 276 278 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:162 _76 ] [162])
            (const_int 0 [0]))) "../src/gvcalc.f":133 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 278 277 279 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) "../src/gvcalc.f":133 617 {*jcc_1}
     (nil)
 -> 281)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 441
(note 279 278 280 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 10 (set (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":133 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 441
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 449 450 451 452 453 454 455 456 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612
(code_label 281 280 282 11 7 (nil) [1 uses])
(note 282 281 283 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 farg+0 S4 A32])
        (reg:SF 21 xmm0 [orig:441 M.1_388 ] [441])) "../src/gvcalc.f":133 127 {*movsf_internal}
     (nil))
(insn 284 283 285 11 (set (reg:SF 22 xmm1 [583])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [1 farg+0 S4 A32])) "../src/gvcalc.f":135 127 {*movsf_internal}
     (nil))
(insn 285 284 286 11 (set (reg:V4SF 21 xmm0 [584])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":135 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 286 285 288 11 (parallel [
            (set (reg:SF 21 xmm0 [orig:163 _77 ] [163])
                (neg:SF (reg:SF 22 xmm1 [583])))
            (use (reg:V4SF 21 xmm0 [584]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":135 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 22 xmm1 [583]))
        (nil)))
(call_insn/u 288 286 289 11 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x14263b300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":135 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 289 288 290 11 (set (reg:SF 0 ax [585])
        (reg:SF 21 xmm0)) "../src/gvcalc.f":135 127 {*movsf_internal}
     (nil))
(insn 290 289 291 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [1 fexp+0 S4 A32])
        (reg:SF 0 ax [585])) "../src/gvcalc.f":135 127 {*movsf_internal}
     (nil))
(insn 291 290 292 11 (set (reg:SF 21 xmm0 [586])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [1 fexp+0 S4 A32])) "../src/gvcalc.f":136 127 {*movsf_internal}
     (nil))
(insn 292 291 293 11 (set (reg:SF 21 xmm0 [orig:164 _78 ] [164])
        (mult:SF (reg:SF 21 xmm0 [586])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])) [1 farg_tsr+0 S4 A32]))) "../src/gvcalc.f":136 802 {*fop_sf_comm}
     (nil))
(insn 293 292 294 11 (set (reg:V4SF 22 xmm1 [588])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":136 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 294 293 295 11 (parallel [
            (set (reg:SF 21 xmm0 [587])
                (neg:SF (reg:SF 21 xmm0 [orig:164 _78 ] [164])))
            (use (reg:V4SF 22 xmm1 [588]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":136 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:164 _78 ] [164]))
        (nil)))
(insn 295 294 296 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 fexp_tsr+0 S4 A32])
        (reg:SF 21 xmm0 [587])) "../src/gvcalc.f":136 127 {*movsf_internal}
     (nil))
(insn 296 295 297 11 (set (reg:SF 22 xmm1 [orig:165 pi.5_79 ] [165])
        (mem/c:SF (symbol_ref:DI ("pi.3572") [flags 0x1c02]  <var_decl 0x1427ec000 pi>) [1 pi+0 S4 A32])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (nil))
(insn 297 296 298 11 (set (reg:SF 21 xmm0 [589])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 298 297 299 11 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (div:SF (reg:SF 21 xmm0 [589])
            (reg:SF 22 xmm1 [orig:165 pi.5_79 ] [165]))) "../src/gvcalc.f":138 805 {*fop_sf_1}
     (nil))
(insn 299 298 1210 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 21 xmm0 [orig:166 _80 ] [166])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (nil))
(note 1210 299 1199 11 NOTE_INSN_DELETED)
(note 1199 1210 300 11 NOTE_INSN_DELETED)
(insn 300 1199 301 11 (set (reg:SF 0 ax [590])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [1 fexp+0 S4 A32])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (nil))
(insn 301 300 302 11 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [590])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (nil))
(call_insn/u 302 301 1125 11 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("acosf") [flags 0x41]  <function_decl 0x142637000 __builtin_acosf>) [0 __builtin_acosf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":138 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1125 302 1209 11 NOTE_INSN_DELETED)
(note 1209 1125 304 11 NOTE_INSN_DELETED)
(insn 304 1209 305 11 (set (reg:SF 21 xmm0 [591])
        (mult:SF (reg:SF 21 xmm0 [orig:168 _82 ] [168])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32]))) "../src/gvcalc.f":138 802 {*fop_sf_comm}
     (nil))
(insn 305 304 306 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32])
        (reg:SF 21 xmm0 [591])) "../src/gvcalc.f":138 127 {*movsf_internal}
     (nil))
(insn 306 305 307 11 (set (reg:SF 21 xmm0 [orig:449 _458 ] [449])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [1 fexp+0 S4 A32])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 307 306 308 11 (set (reg:SF 21 xmm0 [orig:450 _459 ] [450])
        (mult:SF (reg:SF 21 xmm0 [orig:449 _458 ] [449])
            (reg:SF 21 xmm0 [orig:449 _458 ] [449]))) "../src/gvcalc.f":139 802 {*fop_sf_comm}
     (nil))
(insn 308 307 309 11 (set (reg:SF 23 xmm2 [orig:169 pi.6_83 ] [169])
        (mem/c:SF (symbol_ref:DI ("pi.3572") [flags 0x1c02]  <var_decl 0x1427ec000 pi>) [1 pi+0 S4 A32])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 309 308 310 11 (set (reg:SF 22 xmm1 [592])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC6") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 310 309 311 11 (set (reg:SF 22 xmm1 [orig:170 _84 ] [170])
        (div:SF (reg:SF 22 xmm1 [592])
            (reg:SF 23 xmm2 [orig:169 pi.6_83 ] [169]))) "../src/gvcalc.f":139 805 {*fop_sf_1}
     (nil))
(insn 311 310 312 11 (set (reg:SF 23 xmm2 [orig:171 _85 ] [171])
        (reg:SF 22 xmm1 [orig:170 _84 ] [170])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 312 311 313 11 (set (reg:SF 22 xmm1 [593])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 313 312 1127 11 (set (reg:SF 22 xmm1 [593])
        (minus:SF (reg:SF 22 xmm1 [593])
            (reg:SF 21 xmm0 [orig:450 _459 ] [450]))) "../src/gvcalc.f":139 805 {*fop_sf_1}
     (nil))
(insn 1127 313 314 11 (set (reg:SF 21 xmm0 [orig:172 _86 ] [172])
        (reg:SF 22 xmm1 [593])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 314 1127 315 11 (set (reg:SF 21 xmm0 [orig:173 _87 ] [173])
        (sqrt:SF (reg:SF 21 xmm0 [orig:172 _86 ] [172]))) "../src/gvcalc.f":139 836 {*sqrtsf2_sse}
     (nil))
(insn 315 314 1129 11 (set (reg:SF 23 xmm2 [orig:171 _85 ] [171])
        (div:SF (reg:SF 23 xmm2 [orig:171 _85 ] [171])
            (reg:SF 21 xmm0 [orig:173 _87 ] [173]))) "../src/gvcalc.f":139 805 {*fop_sf_1}
     (nil))
(insn 1129 315 316 11 (set (reg:SF 21 xmm0 [orig:174 _88 ] [174])
        (reg:SF 23 xmm2 [orig:171 _85 ] [171])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 316 1129 317 11 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (mult:SF (reg:SF 21 xmm0 [orig:174 _88 ] [174])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -216 [0xffffffffffffff28])) [1 fexp_tsr+0 S4 A32]))) "../src/gvcalc.f":139 802 {*fop_sf_comm}
     (nil))
(insn 317 316 318 11 (set (reg:V4SF 22 xmm1 [595])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":139 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 318 317 319 11 (parallel [
            (set (reg:SF 21 xmm0 [594])
                (neg:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175])))
            (use (reg:V4SF 22 xmm1 [595]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":139 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175]))
        (nil)))
(insn 319 318 320 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 f_tsr+0 S4 A32])
        (reg:SF 21 xmm0 [594])) "../src/gvcalc.f":139 127 {*movsf_internal}
     (nil))
(insn 320 319 321 11 (set (reg:SF 21 xmm0 [597])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 f_tsr+0 S4 A32])) "../src/gvcalc.f":141 127 {*movsf_internal}
     (nil))
(insn 321 320 322 11 (set (reg:SF 21 xmm0 [596])
        (mult:SF (reg:SF 21 xmm0 [597])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -192 [0xffffffffffffff40])) [1 tsr_psi+0 S4 A32]))) "../src/gvcalc.f":141 802 {*fop_sf_comm}
     (nil))
(insn 322 321 323 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 f_psi+0 S4 A32])
        (reg:SF 21 xmm0 [596])) "../src/gvcalc.f":141 127 {*movsf_internal}
     (nil))
(insn 323 322 324 11 (set (reg:SF 21 xmm0 [599])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 f_tsr+0 S4 A32])) "../src/gvcalc.f":142 127 {*movsf_internal}
     (nil))
(insn 324 323 325 11 (set (reg:SF 21 xmm0 [598])
        (mult:SF (reg:SF 21 xmm0 [599])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [1 tsr_vel+0 S4 A32]))) "../src/gvcalc.f":142 802 {*fop_sf_comm}
     (nil))
(insn 325 324 326 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 f_vel+0 S4 A32])
        (reg:SF 21 xmm0 [598])) "../src/gvcalc.f":142 127 {*movsf_internal}
     (nil))
(insn 326 325 327 11 (set (reg:SF 21 xmm0 [601])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 f_tsr+0 S4 A32])) "../src/gvcalc.f":143 127 {*movsf_internal}
     (nil))
(insn 327 326 328 11 (set (reg:SF 21 xmm0 [600])
        (mult:SF (reg:SF 21 xmm0 [601])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -200 [0xffffffffffffff38])) [1 tsr_omg+0 S4 A32]))) "../src/gvcalc.f":143 802 {*fop_sf_comm}
     (nil))
(insn 328 327 329 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 f_omg+0 S4 A32])
        (reg:SF 21 xmm0 [600])) "../src/gvcalc.f":143 127 {*movsf_internal}
     (nil))
(insn 329 328 330 11 (set (reg:SF 21 xmm0 [603])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":145 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 330 329 331 11 (set (reg:SF 21 xmm0 [602])
        (div:SF (reg:SF 21 xmm0 [603])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32]))) "../src/gvcalc.f":145 805 {*fop_sf_1}
     (nil))
(insn 331 330 332 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 adw+0 S4 A32])
        (reg:SF 21 xmm0 [602])) "../src/gvcalc.f":145 127 {*movsf_internal}
     (nil))
(insn 332 331 333 11 (set (reg:SF 21 xmm0 [orig:451 _465 ] [451])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":146 127 {*movsf_internal}
     (nil))
(insn 333 332 334 11 (set (reg:SF 21 xmm0 [orig:452 _466 ] [452])
        (mult:SF (reg:SF 21 xmm0 [orig:451 _465 ] [451])
            (reg:SF 21 xmm0 [orig:451 _465 ] [451]))) "../src/gvcalc.f":146 802 {*fop_sf_comm}
     (nil))
(insn 334 333 335 11 (set (reg:SF 22 xmm1 [604])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [1 tsr_psi+0 S4 A32])) "../src/gvcalc.f":146 127 {*movsf_internal}
     (nil))
(insn 335 334 1131 11 (set (reg:SF 22 xmm1 [604])
        (div:SF (reg:SF 22 xmm1 [604])
            (reg:SF 21 xmm0 [orig:452 _466 ] [452]))) "../src/gvcalc.f":146 805 {*fop_sf_1}
     (nil))
(insn 1131 335 336 11 (set (reg:SF 21 xmm0 [orig:176 _90 ] [176])
        (reg:SF 22 xmm1 [604])) "../src/gvcalc.f":146 127 {*movsf_internal}
     (nil))
(insn 336 1131 337 11 (set (reg:V4SF 22 xmm1 [606])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":146 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 337 336 338 11 (parallel [
            (set (reg:SF 21 xmm0 [605])
                (neg:SF (reg:SF 21 xmm0 [orig:176 _90 ] [176])))
            (use (reg:V4SF 22 xmm1 [606]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":146 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:176 _90 ] [176]))
        (nil)))
(insn 338 337 339 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 adw_psi+0 S4 A32])
        (reg:SF 21 xmm0 [605])) "../src/gvcalc.f":146 127 {*movsf_internal}
     (nil))
(insn 339 338 340 11 (set (reg:SF 21 xmm0 [orig:453 _468 ] [453])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":147 127 {*movsf_internal}
     (nil))
(insn 340 339 341 11 (set (reg:SF 21 xmm0 [orig:454 _469 ] [454])
        (mult:SF (reg:SF 21 xmm0 [orig:453 _468 ] [453])
            (reg:SF 21 xmm0 [orig:453 _468 ] [453]))) "../src/gvcalc.f":147 802 {*fop_sf_comm}
     (nil))
(insn 341 340 342 11 (set (reg:SF 22 xmm1 [607])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [1 tsr_vel+0 S4 A32])) "../src/gvcalc.f":147 127 {*movsf_internal}
     (nil))
(insn 342 341 1133 11 (set (reg:SF 22 xmm1 [607])
        (div:SF (reg:SF 22 xmm1 [607])
            (reg:SF 21 xmm0 [orig:454 _469 ] [454]))) "../src/gvcalc.f":147 805 {*fop_sf_1}
     (nil))
(insn 1133 342 343 11 (set (reg:SF 21 xmm0 [orig:177 _91 ] [177])
        (reg:SF 22 xmm1 [607])) "../src/gvcalc.f":147 127 {*movsf_internal}
     (nil))
(insn 343 1133 344 11 (set (reg:V4SF 22 xmm1 [609])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":147 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 344 343 345 11 (parallel [
            (set (reg:SF 21 xmm0 [608])
                (neg:SF (reg:SF 21 xmm0 [orig:177 _91 ] [177])))
            (use (reg:V4SF 22 xmm1 [609]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":147 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:177 _91 ] [177]))
        (nil)))
(insn 345 344 346 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 adw_vel+0 S4 A32])
        (reg:SF 21 xmm0 [608])) "../src/gvcalc.f":147 127 {*movsf_internal}
     (nil))
(insn 346 345 347 11 (set (reg:SF 21 xmm0 [orig:455 _471 ] [455])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [1 tsr+0 S4 A32])) "../src/gvcalc.f":148 127 {*movsf_internal}
     (nil))
(insn 347 346 348 11 (set (reg:SF 21 xmm0 [orig:456 _472 ] [456])
        (mult:SF (reg:SF 21 xmm0 [orig:455 _471 ] [455])
            (reg:SF 21 xmm0 [orig:455 _471 ] [455]))) "../src/gvcalc.f":148 802 {*fop_sf_comm}
     (nil))
(insn 348 347 349 11 (set (reg:SF 22 xmm1 [610])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [1 tsr_omg+0 S4 A32])) "../src/gvcalc.f":148 127 {*movsf_internal}
     (nil))
(insn 349 348 1135 11 (set (reg:SF 22 xmm1 [610])
        (div:SF (reg:SF 22 xmm1 [610])
            (reg:SF 21 xmm0 [orig:456 _472 ] [456]))) "../src/gvcalc.f":148 805 {*fop_sf_1}
     (nil))
(insn 1135 349 350 11 (set (reg:SF 21 xmm0 [orig:178 _92 ] [178])
        (reg:SF 22 xmm1 [610])) "../src/gvcalc.f":148 127 {*movsf_internal}
     (nil))
(insn 350 1135 351 11 (set (reg:V4SF 22 xmm1 [612])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":148 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 351 350 352 11 (parallel [
            (set (reg:SF 21 xmm0 [611])
                (neg:SF (reg:SF 21 xmm0 [orig:178 _92 ] [178])))
            (use (reg:V4SF 22 xmm1 [612]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":148 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:178 _92 ] [178]))
        (nil)))
(insn 352 351 353 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 adw_omg+0 S4 A32])
        (reg:SF 21 xmm0 [611])) "../src/gvcalc.f":148 127 {*movsf_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              8 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698
(code_label 353 352 354 12 6 (nil) [1 uses])
(note 354 353 355 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 12 (set (reg:SF 21 xmm0 [613])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":153 127 {*movsf_internal}
     (nil))
(insn 356 355 357 12 (set (reg:SF 21 xmm0 [orig:179 _93 ] [179])
        (minus:SF (reg:SF 21 xmm0 [613])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [1 ua+0 S4 A32]))) "../src/gvcalc.f":153 805 {*fop_sf_1}
     (nil))
(insn 357 356 358 12 (set (reg/f:DI 0 ax [614])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 112 [0x70])) [10 va+0 S8 A64])) "../src/gvcalc.f":153 81 {*movdi_internal}
     (nil))
(insn 358 357 359 12 (set (mem:SF (reg/f:DI 0 ax [614]) [1 *va_482(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:179 _93 ] [179])) "../src/gvcalc.f":153 127 {*movsf_internal}
     (nil))
(insn 359 358 360 12 (set (reg:SF 21 xmm0 [615])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 wa_psi+0 S4 A32])) "../src/gvcalc.f":154 127 {*movsf_internal}
     (nil))
(insn 360 359 361 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 va_psi+0 S4 A32])
        (reg:SF 21 xmm0 [615])) "../src/gvcalc.f":154 127 {*movsf_internal}
     (nil))
(insn 361 360 362 12 (set (reg:SF 21 xmm0 [616])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 wa_vel+0 S4 A32])) "../src/gvcalc.f":155 127 {*movsf_internal}
     (nil))
(insn 362 361 363 12 (set (reg:SF 21 xmm0 [orig:180 _94 ] [180])
        (minus:SF (reg:SF 21 xmm0 [616])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [1 ua_vel+0 S4 A32]))) "../src/gvcalc.f":155 805 {*fop_sf_1}
     (nil))
(insn 363 362 364 12 (set (reg/f:DI 0 ax [617])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 120 [0x78])) [10 va_vel+0 S8 A64])) "../src/gvcalc.f":155 81 {*movdi_internal}
     (nil))
(insn 364 363 365 12 (set (mem:SF (reg/f:DI 0 ax [617]) [1 *va_vel_485(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:180 _94 ] [180])) "../src/gvcalc.f":155 127 {*movsf_internal}
     (nil))
(insn 365 364 366 12 (set (reg/f:DI 0 ax [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 128 [0x80])) [10 va_omg+0 S8 A64])) "../src/gvcalc.f":156 81 {*movdi_internal}
     (nil))
(insn 366 365 367 12 (set (reg:SF 21 xmm0 [619])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [1 wa_omg+0 S4 A32])) "../src/gvcalc.f":156 127 {*movsf_internal}
     (nil))
(insn 367 366 368 12 (set (mem:SF (reg/f:DI 0 ax [618]) [1 *va_omg_487(D)+0 S4 A32])
        (reg:SF 21 xmm0 [619])) "../src/gvcalc.f":156 127 {*movsf_internal}
     (nil))
(insn 368 367 369 12 (set (reg:SF 21 xmm0 [620])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 ut+0 S4 A32])) "../src/gvcalc.f":158 127 {*movsf_internal}
     (nil))
(insn 369 368 370 12 (set (reg:SF 21 xmm0 [orig:181 _95 ] [181])
        (minus:SF (reg:SF 21 xmm0 [620])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32]))) "../src/gvcalc.f":158 805 {*fop_sf_1}
     (nil))
(insn 370 369 371 12 (set (reg/f:DI 0 ax [621])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":158 81 {*movdi_internal}
     (nil))
(insn 371 370 372 12 (set (mem:SF (reg/f:DI 0 ax [621]) [1 *vt_489(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:181 _95 ] [181])) "../src/gvcalc.f":158 127 {*movsf_internal}
     (nil))
(insn 372 371 373 12 (set (reg:SF 22 xmm1 [623])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 wt_psi+0 S4 A32])) "../src/gvcalc.f":159 127 {*movsf_internal}
     (nil))
(insn 373 372 374 12 (set (reg:V4SF 21 xmm0 [624])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":159 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 374 373 375 12 (parallel [
            (set (reg:SF 21 xmm0 [622])
                (neg:SF (reg:SF 22 xmm1 [623])))
            (use (reg:V4SF 21 xmm0 [624]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":159 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 22 xmm1 [623]))
        (nil)))
(insn 375 374 376 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32])
        (reg:SF 21 xmm0 [622])) "../src/gvcalc.f":159 127 {*movsf_internal}
     (nil))
(insn 376 375 377 12 (set (reg:SF 22 xmm1 [625])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [1 wt_vel+0 S4 A32])) "../src/gvcalc.f":160 127 {*movsf_internal}
     (nil))
(insn 377 376 378 12 (set (reg:V4SF 21 xmm0 [626])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":160 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 378 377 379 12 (parallel [
            (set (reg:SF 21 xmm0 [orig:182 _96 ] [182])
                (neg:SF (reg:SF 22 xmm1 [625])))
            (use (reg:V4SF 21 xmm0 [626]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":160 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 22 xmm1 [625]))
        (nil)))
(insn 379 378 380 12 (set (reg/f:DI 0 ax [627])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 160 [0xa0])) [10 vt_vel+0 S8 A64])) "../src/gvcalc.f":160 81 {*movdi_internal}
     (nil))
(insn 380 379 381 12 (set (mem:SF (reg/f:DI 0 ax [627]) [1 *vt_vel_492(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:182 _96 ] [182])) "../src/gvcalc.f":160 127 {*movsf_internal}
     (nil))
(insn 381 380 382 12 (set (reg:SF 21 xmm0 [628])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 ut_omg+0 S4 A32])) "../src/gvcalc.f":161 127 {*movsf_internal}
     (nil))
(insn 382 381 383 12 (set (reg:SF 21 xmm0 [orig:183 _97 ] [183])
        (minus:SF (reg:SF 21 xmm0 [628])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [1 wt_omg+0 S4 A32]))) "../src/gvcalc.f":161 805 {*fop_sf_1}
     (nil))
(insn 383 382 384 12 (set (reg/f:DI 0 ax [629])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 168 [0xa8])) [10 vt_omg+0 S8 A64])) "../src/gvcalc.f":161 81 {*movdi_internal}
     (nil))
(insn 384 383 385 12 (set (mem:SF (reg/f:DI 0 ax [629]) [1 *vt_omg_494(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:183 _97 ] [183])) "../src/gvcalc.f":161 127 {*movsf_internal}
     (nil))
(insn 385 384 386 12 (set (reg/f:DI 0 ax [630])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [10 blds+0 S8 A64])) "../src/gvcalc.f":164 81 {*movdi_internal}
     (nil))
(insn 386 385 387 12 (set (reg:SF 22 xmm1 [orig:184 _98 ] [184])
        (mem:SF (reg/f:DI 0 ax [630]) [1 *blds_449(D)+0 S4 A32])) "../src/gvcalc.f":164 127 {*movsf_internal}
     (nil))
(insn 387 386 388 12 (set (reg:SF 21 xmm0 [632])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":164 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 388 387 389 12 (set (reg:SF 21 xmm0 [631])
        (div:SF (reg:SF 21 xmm0 [632])
            (reg:SF 22 xmm1 [orig:184 _98 ] [184]))) "../src/gvcalc.f":164 805 {*fop_sf_1}
     (nil))
(insn 389 388 390 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32])
        (reg:SF 21 xmm0 [631])) "../src/gvcalc.f":164 127 {*movsf_internal}
     (nil))
(insn 390 389 391 12 (set (reg/f:DI 0 ax [633])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [10 r+0 S8 A64])) "../src/gvcalc.f":165 81 {*movdi_internal}
     (nil))
(insn 391 390 392 12 (set (reg:SF 22 xmm1 [orig:185 _99 ] [185])
        (mem:SF (reg/f:DI 0 ax [633]) [1 *r_402(D)+0 S4 A32])) "../src/gvcalc.f":165 127 {*movsf_internal}
     (nil))
(insn 392 391 393 12 (set (reg:SF 21 xmm0 [orig:186 pi.7_100 ] [186])
        (mem/c:SF (symbol_ref:DI ("pi.3572") [flags 0x1c02]  <var_decl 0x1427ec000 pi>) [1 pi+0 S4 A32])) "../src/gvcalc.f":165 127 {*movsf_internal}
     (nil))
(insn 393 392 1136 12 (set (reg:SF 21 xmm0 [orig:187 _101 ] [187])
        (mult:SF (reg:SF 21 xmm0 [orig:186 pi.7_100 ] [186])
            (reg:SF 22 xmm1 [orig:185 _99 ] [185]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 1136 393 395 12 (set (reg:SF 22 xmm1 [orig:457 _497 ] [457])
        (reg:SF 21 xmm0 [orig:457 _497 ] [457])) "../src/gvcalc.f":165 127 {*movsf_internal}
     (nil))
(insn 395 1136 396 12 (set (reg:SF 22 xmm1 [orig:457 _497 ] [457])
        (mult:SF (reg:SF 22 xmm1 [orig:457 _497 ] [457])
            (reg:SF 21 xmm0 [orig:457 _497 ] [457]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 396 395 397 12 (set (reg/f:DI 0 ax [634])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":165 81 {*movdi_internal}
     (nil))
(insn 397 396 398 12 (set (reg:SF 21 xmm0 [orig:188 _102 ] [188])
        (mem:SF (reg/f:DI 0 ax [634]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":165 127 {*movsf_internal}
     (nil))
(insn 398 397 399 12 (set (reg:SF 21 xmm0 [orig:189 _103 ] [189])
        (mult:SF (reg:SF 21 xmm0 [orig:188 _102 ] [188])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 399 398 401 12 (set (reg:SF 21 xmm0 [orig:190 _104 ] [190])
        (mult:SF (reg:SF 21 xmm0 [orig:189 _103 ] [189])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 adw+0 S4 A32]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 401 399 402 12 (set (reg:SF 21 xmm0 [orig:460 _500 ] [460])
        (mult:SF (reg:SF 21 xmm0 [orig:459 _499 ] [459])
            (reg:SF 21 xmm0 [orig:459 _499 ] [459]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 402 401 403 12 (set (reg:SF 21 xmm0 [orig:191 _105 ] [191])
        (plus:SF (reg:SF 21 xmm0 [orig:460 _500 ] [460])
            (reg:SF 22 xmm1 [orig:458 _498 ] [458]))) "../src/gvcalc.f":165 802 {*fop_sf_comm}
     (nil))
(insn 403 402 404 12 (set (reg:SF 21 xmm0 [635])
        (sqrt:SF (reg:SF 21 xmm0 [orig:191 _105 ] [191]))) "../src/gvcalc.f":165 836 {*sqrtsf2_sse}
     (nil))
(insn 404 403 405 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32])
        (reg:SF 21 xmm0 [635])) "../src/gvcalc.f":165 127 {*movsf_internal}
     (nil))
(insn 405 404 406 12 (set (reg/f:DI 0 ax [636])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [10 rad+0 S8 A64])) "../src/gvcalc.f":166 81 {*movdi_internal}
     (nil))
(insn 406 405 407 12 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (mem:SF (reg/f:DI 0 ax [636]) [1 *rad_444(D)+0 S4 A32])) "../src/gvcalc.f":166 127 {*movsf_internal}
     (nil))
(insn 407 406 409 12 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (mult:SF (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32]))) "../src/gvcalc.f":166 802 {*fop_sf_comm}
     (nil))
(insn 409 407 410 12 (set (reg:SF 21 xmm0 [orig:462 _503 ] [462])
        (mult:SF (reg:SF 21 xmm0 [orig:461 _502 ] [461])
            (reg:SF 21 xmm0 [orig:461 _502 ] [461]))) "../src/gvcalc.f":166 802 {*fop_sf_comm}
     (nil))
(insn 410 409 411 12 (set (reg:SF 21 xmm0 [orig:194 _108 ] [194])
        (mult:SF (reg:SF 21 xmm0 [orig:462 _503 ] [462])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 adw+0 S4 A32]))) "../src/gvcalc.f":166 802 {*fop_sf_comm}
     (nil))
(insn 411 410 412 12 (set (reg:SF 21 xmm0 [637])
        (div:SF (reg:SF 21 xmm0 [orig:194 _108 ] [194])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32]))) "../src/gvcalc.f":166 805 {*fop_sf_1}
     (nil))
(insn 412 411 413 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 pir_adw+0 S4 A32])
        (reg:SF 21 xmm0 [637])) "../src/gvcalc.f":166 127 {*movsf_internal}
     (nil))
(insn 413 412 414 12 (set (reg:SF 21 xmm0 [639])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 pir_adw+0 S4 A32])) "../src/gvcalc.f":167 127 {*movsf_internal}
     (nil))
(insn 414 413 415 12 (set (reg:SF 21 xmm0 [638])
        (mult:SF (reg:SF 21 xmm0 [639])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [1 adw_psi+0 S4 A32]))) "../src/gvcalc.f":167 802 {*fop_sf_comm}
     (nil))
(insn 415 414 416 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [1 pir_psi+0 S4 A32])
        (reg:SF 21 xmm0 [638])) "../src/gvcalc.f":167 127 {*movsf_internal}
     (nil))
(insn 416 415 417 12 (set (reg:SF 21 xmm0 [641])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 pir_adw+0 S4 A32])) "../src/gvcalc.f":168 127 {*movsf_internal}
     (nil))
(insn 417 416 418 12 (set (reg:SF 21 xmm0 [640])
        (mult:SF (reg:SF 21 xmm0 [641])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [1 adw_vel+0 S4 A32]))) "../src/gvcalc.f":168 802 {*fop_sf_comm}
     (nil))
(insn 418 417 419 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [1 pir_vel+0 S4 A32])
        (reg:SF 21 xmm0 [640])) "../src/gvcalc.f":168 127 {*movsf_internal}
     (nil))
(insn 419 418 420 12 (set (reg:SF 21 xmm0 [643])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 pir_adw+0 S4 A32])) "../src/gvcalc.f":169 127 {*movsf_internal}
     (nil))
(insn 420 419 421 12 (set (reg:SF 21 xmm0 [642])
        (mult:SF (reg:SF 21 xmm0 [643])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 adw_omg+0 S4 A32]))) "../src/gvcalc.f":169 802 {*fop_sf_comm}
     (nil))
(insn 421 420 422 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [1 pir_omg+0 S4 A32])
        (reg:SF 21 xmm0 [642])) "../src/gvcalc.f":169 127 {*movsf_internal}
     (nil))
(insn 422 421 423 12 (set (reg:SF 21 xmm0 [644])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32])) "../src/gvcalc.f":171 127 {*movsf_internal}
     (nil))
(insn 423 422 424 12 (set (reg:SF 21 xmm0 [orig:195 _109 ] [195])
        (mult:SF (reg:SF 21 xmm0 [644])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":171 802 {*fop_sf_comm}
     (nil))
(insn 424 423 425 12 (set (reg/f:DI 0 ax [645])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":171 81 {*movdi_internal}
     (nil))
(insn 425 424 426 12 (set (reg:SF 22 xmm1 [orig:196 _110 ] [196])
        (mem:SF (reg/f:DI 0 ax [645]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":171 127 {*movsf_internal}
     (nil))
(insn 426 425 427 12 (set (reg:SF 21 xmm0 [orig:197 _111 ] [197])
        (mult:SF (reg:SF 21 xmm0 [orig:195 _109 ] [195])
            (reg:SF 22 xmm1 [orig:196 _110 ] [196]))) "../src/gvcalc.f":171 802 {*fop_sf_comm}
     (nil))
(insn 427 426 428 12 (set (reg:SF 21 xmm0 [orig:198 _112 ] [198])
        (mult:SF (reg:SF 21 xmm0 [orig:197 _111 ] [197])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32]))) "../src/gvcalc.f":171 802 {*fop_sf_comm}
     (nil))
(insn 428 427 429 12 (set (reg/f:DI 0 ax [646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [10 gam+0 S8 A64])) "../src/gvcalc.f":171 81 {*movdi_internal}
     (nil))
(insn 429 428 430 12 (set (mem:SF (reg/f:DI 0 ax [646]) [1 *gam_508(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:198 _112 ] [198])) "../src/gvcalc.f":171 127 {*movsf_internal}
     (nil))
(insn 430 429 1138 12 (set (reg:SF 21 xmm0 [647])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 1138 430 431 12 (set (reg:SF 22 xmm1 [647])
        (reg:SF 21 xmm0 [647])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 431 1138 432 12 (set (reg:SF 22 xmm1 [647])
        (mult:SF (reg:SF 22 xmm1 [647])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 432 431 433 12 (set (reg/f:DI 0 ax [648])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":172 81 {*movdi_internal}
     (nil))
(insn 433 432 434 12 (set (reg:SF 21 xmm0 [orig:200 _114 ] [200])
        (mem:SF (reg/f:DI 0 ax [648]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 434 433 435 12 (set (reg:SF 21 xmm0 [orig:201 _115 ] [201])
        (mult:SF (reg:SF 21 xmm0 [orig:200 _114 ] [200])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [1 f_psi+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 435 434 437 12 (set (reg:SF 21 xmm0 [orig:202 _116 ] [202])
        (plus:SF (reg:SF 21 xmm0 [orig:201 _115 ] [201])
            (reg:SF 22 xmm1 [orig:199 _113 ] [199]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 437 435 1140 12 (set (reg:SF 21 xmm0 [orig:204 _118 ] [204])
        (mult:SF (reg:SF 21 xmm0 [orig:203 _117 ] [203])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 1140 437 438 12 (set (reg:SF 22 xmm1 [orig:204 _118 ] [204])
        (reg:SF 21 xmm0 [orig:204 _118 ] [204])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 438 1140 439 12 (set (reg:SF 22 xmm1 [orig:204 _118 ] [204])
        (mult:SF (reg:SF 22 xmm1 [orig:204 _118 ] [204])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 439 438 440 12 (set (reg:SF 21 xmm0 [649])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 440 439 441 12 (set (reg:SF 21 xmm0 [orig:206 _120 ] [206])
        (mult:SF (reg:SF 21 xmm0 [649])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 441 440 442 12 (set (reg/f:DI 0 ax [650])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":172 81 {*movdi_internal}
     (nil))
(insn 442 441 443 12 (set (reg:SF 23 xmm2 [orig:207 _121 ] [207])
        (mem:SF (reg/f:DI 0 ax [650]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 443 442 444 12 (set (reg:SF 21 xmm0 [orig:208 _122 ] [208])
        (mult:SF (reg:SF 21 xmm0 [orig:206 _120 ] [206])
            (reg:SF 23 xmm2 [orig:207 _121 ] [207]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 444 443 445 12 (set (reg:SF 21 xmm0 [orig:209 _123 ] [209])
        (mult:SF (reg:SF 21 xmm0 [orig:208 _122 ] [208])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -236 [0xffffffffffffff14])) [1 pir_psi+0 S4 A32]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 445 444 446 12 (set (reg:SF 21 xmm0 [651])
        (plus:SF (reg:SF 21 xmm0 [orig:209 _123 ] [209])
            (reg:SF 22 xmm1 [orig:205 _119 ] [205]))) "../src/gvcalc.f":172 802 {*fop_sf_comm}
     (nil))
(insn 446 445 447 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])
        (reg:SF 21 xmm0 [651])) "../src/gvcalc.f":172 127 {*movsf_internal}
     (nil))
(insn 447 446 448 12 (set (reg/f:DI 0 ax [652])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 160 [0xa0])) [10 vt_vel+0 S8 A64])) "../src/gvcalc.f":173 81 {*movdi_internal}
     (nil))
(insn 448 447 1142 12 (set (reg:SF 21 xmm0 [orig:210 _124 ] [210])
        (mem:SF (reg/f:DI 0 ax [652]) [1 *vt_vel_492(D)+0 S4 A32])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 1142 448 449 12 (set (reg:SF 22 xmm1 [orig:210 _124 ] [210])
        (reg:SF 21 xmm0 [orig:210 _124 ] [210])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 449 1142 450 12 (set (reg:SF 22 xmm1 [orig:210 _124 ] [210])
        (mult:SF (reg:SF 22 xmm1 [orig:210 _124 ] [210])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 450 449 451 12 (set (reg/f:DI 0 ax [653])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":173 81 {*movdi_internal}
     (nil))
(insn 451 450 452 12 (set (reg:SF 21 xmm0 [orig:212 _126 ] [212])
        (mem:SF (reg/f:DI 0 ax [653]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 452 451 453 12 (set (reg:SF 21 xmm0 [orig:213 _127 ] [213])
        (mult:SF (reg:SF 21 xmm0 [orig:212 _126 ] [212])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 f_vel+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 453 452 455 12 (set (reg:SF 21 xmm0 [orig:214 _128 ] [214])
        (plus:SF (reg:SF 21 xmm0 [orig:213 _127 ] [213])
            (reg:SF 22 xmm1 [orig:211 _125 ] [211]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 455 453 1144 12 (set (reg:SF 21 xmm0 [orig:216 _130 ] [216])
        (mult:SF (reg:SF 21 xmm0 [orig:215 _129 ] [215])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 1144 455 456 12 (set (reg:SF 22 xmm1 [orig:216 _130 ] [216])
        (reg:SF 21 xmm0 [orig:216 _130 ] [216])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 456 1144 457 12 (set (reg:SF 22 xmm1 [orig:216 _130 ] [216])
        (mult:SF (reg:SF 22 xmm1 [orig:216 _130 ] [216])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 457 456 458 12 (set (reg:SF 21 xmm0 [654])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 458 457 459 12 (set (reg:SF 21 xmm0 [orig:218 _132 ] [218])
        (mult:SF (reg:SF 21 xmm0 [654])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 459 458 460 12 (set (reg/f:DI 0 ax [655])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":173 81 {*movdi_internal}
     (nil))
(insn 460 459 461 12 (set (reg:SF 23 xmm2 [orig:219 _133 ] [219])
        (mem:SF (reg/f:DI 0 ax [655]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 461 460 462 12 (set (reg:SF 21 xmm0 [orig:220 _134 ] [220])
        (mult:SF (reg:SF 21 xmm0 [orig:218 _132 ] [218])
            (reg:SF 23 xmm2 [orig:219 _133 ] [219]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 462 461 463 12 (set (reg:SF 21 xmm0 [orig:221 _135 ] [221])
        (mult:SF (reg:SF 21 xmm0 [orig:220 _134 ] [220])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -240 [0xffffffffffffff10])) [1 pir_vel+0 S4 A32]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 463 462 464 12 (set (reg:SF 21 xmm0 [orig:222 _136 ] [222])
        (plus:SF (reg:SF 21 xmm0 [orig:221 _135 ] [221])
            (reg:SF 22 xmm1 [orig:217 _131 ] [217]))) "../src/gvcalc.f":173 802 {*fop_sf_comm}
     (nil))
(insn 464 463 465 12 (set (reg/f:DI 0 ax [656])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [10 gam_vel+0 S8 A64])) "../src/gvcalc.f":173 81 {*movdi_internal}
     (nil))
(insn 465 464 466 12 (set (mem:SF (reg/f:DI 0 ax [656]) [1 *gam_vel_511(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:222 _136 ] [222])) "../src/gvcalc.f":173 127 {*movsf_internal}
     (nil))
(insn 466 465 467 12 (set (reg/f:DI 0 ax [657])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 168 [0xa8])) [10 vt_omg+0 S8 A64])) "../src/gvcalc.f":174 81 {*movdi_internal}
     (nil))
(insn 467 466 1146 12 (set (reg:SF 21 xmm0 [orig:223 _137 ] [223])
        (mem:SF (reg/f:DI 0 ax [657]) [1 *vt_omg_494(D)+0 S4 A32])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 1146 467 468 12 (set (reg:SF 22 xmm1 [orig:223 _137 ] [223])
        (reg:SF 21 xmm0 [orig:223 _137 ] [223])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 468 1146 469 12 (set (reg:SF 22 xmm1 [orig:223 _137 ] [223])
        (mult:SF (reg:SF 22 xmm1 [orig:223 _137 ] [223])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 469 468 470 12 (set (reg/f:DI 0 ax [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":174 81 {*movdi_internal}
     (nil))
(insn 470 469 471 12 (set (reg:SF 21 xmm0 [orig:225 _139 ] [225])
        (mem:SF (reg/f:DI 0 ax [658]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 471 470 472 12 (set (reg:SF 21 xmm0 [orig:226 _140 ] [226])
        (mult:SF (reg:SF 21 xmm0 [orig:225 _139 ] [225])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 f_omg+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 472 471 474 12 (set (reg:SF 21 xmm0 [orig:227 _141 ] [227])
        (plus:SF (reg:SF 21 xmm0 [orig:226 _140 ] [226])
            (reg:SF 22 xmm1 [orig:224 _138 ] [224]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 474 472 1148 12 (set (reg:SF 21 xmm0 [orig:229 _143 ] [229])
        (mult:SF (reg:SF 21 xmm0 [orig:228 _142 ] [228])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 1148 474 475 12 (set (reg:SF 22 xmm1 [orig:229 _143 ] [229])
        (reg:SF 21 xmm0 [orig:229 _143 ] [229])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 475 1148 476 12 (set (reg:SF 22 xmm1 [orig:229 _143 ] [229])
        (mult:SF (reg:SF 22 xmm1 [orig:229 _143 ] [229])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [1 pir+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 476 475 477 12 (set (reg:SF 21 xmm0 [659])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 qbi+0 S4 A32])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 477 476 478 12 (set (reg:SF 21 xmm0 [orig:231 _145 ] [231])
        (mult:SF (reg:SF 21 xmm0 [659])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 f+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 478 477 479 12 (set (reg/f:DI 0 ax [660])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 152 [0x98])) [10 vt+0 S8 A64])) "../src/gvcalc.f":174 81 {*movdi_internal}
     (nil))
(insn 479 478 480 12 (set (reg:SF 23 xmm2 [orig:232 _146 ] [232])
        (mem:SF (reg/f:DI 0 ax [660]) [1 *vt_489(D)+0 S4 A32])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 480 479 481 12 (set (reg:SF 21 xmm0 [orig:233 _147 ] [233])
        (mult:SF (reg:SF 21 xmm0 [orig:231 _145 ] [231])
            (reg:SF 23 xmm2 [orig:232 _146 ] [232]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 481 480 482 12 (set (reg:SF 21 xmm0 [orig:234 _148 ] [234])
        (mult:SF (reg:SF 21 xmm0 [orig:233 _147 ] [233])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -244 [0xffffffffffffff0c])) [1 pir_omg+0 S4 A32]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 482 481 483 12 (set (reg:SF 21 xmm0 [orig:235 _149 ] [235])
        (plus:SF (reg:SF 21 xmm0 [orig:234 _148 ] [234])
            (reg:SF 22 xmm1 [orig:230 _144 ] [230]))) "../src/gvcalc.f":174 802 {*fop_sf_comm}
     (nil))
(insn 483 482 484 12 (set (reg/f:DI 0 ax [661])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [10 gam_omg+0 S8 A64])) "../src/gvcalc.f":174 81 {*movdi_internal}
     (nil))
(insn 484 483 485 12 (set (mem:SF (reg/f:DI 0 ax [661]) [1 *gam_omg_513(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:235 _149 ] [235])) "../src/gvcalc.f":174 127 {*movsf_internal}
     (nil))
(insn 485 484 1150 12 (set (reg:SF 21 xmm0 [orig:463 _515 ] [463])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":177 127 {*movsf_internal}
     (nil))
(insn 1150 485 486 12 (set (reg:SF 22 xmm1 [orig:463 _515 ] [463])
        (reg:SF 21 xmm0 [orig:463 _515 ] [463])) "../src/gvcalc.f":177 127 {*movsf_internal}
     (nil))
(insn 486 1150 487 12 (set (reg:SF 22 xmm1 [orig:463 _515 ] [463])
        (mult:SF (reg:SF 22 xmm1 [orig:463 _515 ] [463])
            (reg:SF 21 xmm0 [orig:463 _515 ] [463]))) "../src/gvcalc.f":177 802 {*fop_sf_comm}
     (nil))
(insn 487 486 488 12 (set (reg:SF 21 xmm0 [orig:465 _517 ] [465])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":177 127 {*movsf_internal}
     (nil))
(insn 488 487 489 12 (set (reg:SF 21 xmm0 [orig:466 _518 ] [466])
        (mult:SF (reg:SF 21 xmm0 [orig:465 _517 ] [465])
            (reg:SF 21 xmm0 [orig:465 _517 ] [465]))) "../src/gvcalc.f":177 802 {*fop_sf_comm}
     (nil))
(insn 489 488 490 12 (set (reg:SF 21 xmm0 [662])
        (plus:SF (reg:SF 21 xmm0 [orig:466 _518 ] [466])
            (reg:SF 22 xmm1 [orig:464 _516 ] [464]))) "../src/gvcalc.f":177 802 {*fop_sf_comm}
     (nil))
(insn 490 489 491 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32])
        (reg:SF 21 xmm0 [662])) "../src/gvcalc.f":177 127 {*movsf_internal}
     (nil))
(insn 491 490 492 12 (set (reg:SF 21 xmm0 [663])
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32]))) "../src/gvcalc.f":178 836 {*sqrtsf2_sse}
     (nil))
(insn 492 491 493 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32])
        (reg:SF 21 xmm0 [663])) "../src/gvcalc.f":178 127 {*movsf_internal}
     (nil))
(insn 493 492 1152 12 (set (reg:SF 21 xmm0 [664])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":179 127 {*movsf_internal}
     (nil))
(insn 1152 493 494 12 (set (reg:SF 22 xmm1 [664])
        (reg:SF 21 xmm0 [664])) "../src/gvcalc.f":179 127 {*movsf_internal}
     (nil))
(insn 494 1152 495 12 (set (reg:SF 22 xmm1 [664])
        (mult:SF (reg:SF 22 xmm1 [664])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 wa_psi+0 S4 A32]))) "../src/gvcalc.f":179 802 {*fop_sf_comm}
     (nil))
(insn 495 494 496 12 (set (reg:SF 21 xmm0 [665])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":179 127 {*movsf_internal}
     (nil))
(insn 496 495 497 12 (set (reg:SF 21 xmm0 [orig:237 _151 ] [237])
        (mult:SF (reg:SF 21 xmm0 [665])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [1 wt_psi+0 S4 A32]))) "../src/gvcalc.f":179 802 {*fop_sf_comm}
     (nil))
(insn 497 496 499 12 (set (reg:SF 21 xmm0 [orig:238 _152 ] [238])
        (plus:SF (reg:SF 21 xmm0 [orig:237 _151 ] [237])
            (reg:SF 22 xmm1 [orig:236 _150 ] [236]))) "../src/gvcalc.f":179 802 {*fop_sf_comm}
     (nil))
(insn 499 497 500 12 (set (reg:SF 21 xmm0 [666])
        (div:SF (reg:SF 21 xmm0 [orig:239 _153 ] [239])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":179 805 {*fop_sf_1}
     (nil))
(insn 500 499 501 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [1 w_psi+0 S4 A32])
        (reg:SF 21 xmm0 [666])) "../src/gvcalc.f":179 127 {*movsf_internal}
     (nil))
(insn 501 500 1154 12 (set (reg:SF 21 xmm0 [667])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":180 127 {*movsf_internal}
     (nil))
(insn 1154 501 502 12 (set (reg:SF 22 xmm1 [667])
        (reg:SF 21 xmm0 [667])) "../src/gvcalc.f":180 127 {*movsf_internal}
     (nil))
(insn 502 1154 503 12 (set (reg:SF 22 xmm1 [667])
        (mult:SF (reg:SF 22 xmm1 [667])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [1 wa_vel+0 S4 A32]))) "../src/gvcalc.f":180 802 {*fop_sf_comm}
     (nil))
(insn 503 502 504 12 (set (reg:SF 21 xmm0 [668])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":180 127 {*movsf_internal}
     (nil))
(insn 504 503 505 12 (set (reg:SF 21 xmm0 [orig:241 _155 ] [241])
        (mult:SF (reg:SF 21 xmm0 [668])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [1 wt_vel+0 S4 A32]))) "../src/gvcalc.f":180 802 {*fop_sf_comm}
     (nil))
(insn 505 504 507 12 (set (reg:SF 21 xmm0 [orig:242 _156 ] [242])
        (plus:SF (reg:SF 21 xmm0 [orig:241 _155 ] [241])
            (reg:SF 22 xmm1 [orig:240 _154 ] [240]))) "../src/gvcalc.f":180 802 {*fop_sf_comm}
     (nil))
(insn 507 505 508 12 (set (reg:SF 21 xmm0 [669])
        (div:SF (reg:SF 21 xmm0 [orig:243 _157 ] [243])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":180 805 {*fop_sf_1}
     (nil))
(insn 508 507 509 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -260 [0xfffffffffffffefc])) [1 w_vel+0 S4 A32])
        (reg:SF 21 xmm0 [669])) "../src/gvcalc.f":180 127 {*movsf_internal}
     (nil))
(insn 509 508 1156 12 (set (reg:SF 21 xmm0 [670])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":181 127 {*movsf_internal}
     (nil))
(insn 1156 509 510 12 (set (reg:SF 22 xmm1 [670])
        (reg:SF 21 xmm0 [670])) "../src/gvcalc.f":181 127 {*movsf_internal}
     (nil))
(insn 510 1156 511 12 (set (reg:SF 22 xmm1 [670])
        (mult:SF (reg:SF 22 xmm1 [670])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [1 wa_omg+0 S4 A32]))) "../src/gvcalc.f":181 802 {*fop_sf_comm}
     (nil))
(insn 511 510 512 12 (set (reg:SF 21 xmm0 [671])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":181 127 {*movsf_internal}
     (nil))
(insn 512 511 513 12 (set (reg:SF 21 xmm0 [orig:245 _159 ] [245])
        (mult:SF (reg:SF 21 xmm0 [671])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [1 wt_omg+0 S4 A32]))) "../src/gvcalc.f":181 802 {*fop_sf_comm}
     (nil))
(insn 513 512 515 12 (set (reg:SF 21 xmm0 [orig:246 _160 ] [246])
        (plus:SF (reg:SF 21 xmm0 [orig:245 _159 ] [245])
            (reg:SF 22 xmm1 [orig:244 _158 ] [244]))) "../src/gvcalc.f":181 802 {*fop_sf_comm}
     (nil))
(insn 515 513 516 12 (set (reg:SF 21 xmm0 [672])
        (div:SF (reg:SF 21 xmm0 [orig:247 _161 ] [247])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":181 805 {*fop_sf_1}
     (nil))
(insn 516 515 517 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [1 w_omg+0 S4 A32])
        (reg:SF 21 xmm0 [672])) "../src/gvcalc.f":181 127 {*movsf_internal}
     (nil))
(insn 517 516 518 12 (set (reg/f:DI 0 ax [673])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [10 beta+0 S8 A64])) "../src/gvcalc.f":184 81 {*movdi_internal}
     (nil))
(insn 518 517 1158 12 (set (reg:SF 25 xmm4 [orig:248 _162 ] [248])
        (mem:SF (reg/f:DI 0 ax [673]) [1 *beta_414(D)+0 S4 A32])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 1158 518 1211 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 25 xmm4 [orig:248 _162 ] [248])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(note 1211 1158 1200 12 NOTE_INSN_DELETED)
(note 1200 1211 519 12 NOTE_INSN_DELETED)
(insn 519 1200 520 12 (set (reg:SF 21 xmm0 [674])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 520 519 521 12 (set (reg:SF 0 ax [675])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 521 520 522 12 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [674])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 522 521 523 12 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [675])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(call_insn/u 523 522 1159 12 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":184 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 1159 523 525 12 (set (reg:SF 25 xmm4 [orig:248 _162 ] [248])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 525 1159 1160 12 (set (reg:SF 25 xmm4 [orig:248 _162 ] [248])
        (minus:SF (reg:SF 25 xmm4 [orig:248 _162 ] [248])
            (reg:SF 21 xmm0 [orig:249 _163 ] [249]))) "../src/gvcalc.f":184 805 {*fop_sf_1}
     (nil))
(insn 1160 525 526 12 (set (reg:SF 21 xmm0 [orig:250 _164 ] [250])
        (reg:SF 25 xmm4 [orig:248 _162 ] [248])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 526 1160 527 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])
        (reg:SF 21 xmm0 [orig:250 _164 ] [250])) "../src/gvcalc.f":184 127 {*movsf_internal}
     (nil))
(insn 527 526 528 12 (set (reg:SF 21 xmm0 [676])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":185 127 {*movsf_internal}
     (nil))
(insn 528 527 529 12 (set (reg:SF 21 xmm0 [orig:251 _165 ] [251])
        (mult:SF (reg:SF 21 xmm0 [676])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [1 wt_psi+0 S4 A32]))) "../src/gvcalc.f":185 802 {*fop_sf_comm}
     (nil))
(insn 529 528 530 12 (set (reg:SF 22 xmm1 [677])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":185 127 {*movsf_internal}
     (nil))
(insn 530 529 531 12 (set (reg:SF 22 xmm1 [orig:252 _166 ] [252])
        (mult:SF (reg:SF 22 xmm1 [677])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 wa_psi+0 S4 A32]))) "../src/gvcalc.f":185 802 {*fop_sf_comm}
     (nil))
(insn 531 530 533 12 (set (reg:SF 21 xmm0 [orig:253 _167 ] [253])
        (minus:SF (reg:SF 21 xmm0 [orig:251 _165 ] [251])
            (reg:SF 22 xmm1 [orig:252 _166 ] [252]))) "../src/gvcalc.f":185 805 {*fop_sf_1}
     (nil))
(insn 533 531 534 12 (set (reg:SF 21 xmm0 [678])
        (div:SF (reg:SF 21 xmm0 [orig:254 _168 ] [254])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32]))) "../src/gvcalc.f":185 805 {*fop_sf_1}
     (nil))
(insn 534 533 535 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 a_psi+0 S4 A32])
        (reg:SF 21 xmm0 [678])) "../src/gvcalc.f":185 127 {*movsf_internal}
     (nil))
(insn 535 534 536 12 (set (reg:SF 21 xmm0 [679])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":186 127 {*movsf_internal}
     (nil))
(insn 536 535 537 12 (set (reg:SF 21 xmm0 [orig:255 _169 ] [255])
        (mult:SF (reg:SF 21 xmm0 [679])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [1 wt_vel+0 S4 A32]))) "../src/gvcalc.f":186 802 {*fop_sf_comm}
     (nil))
(insn 537 536 538 12 (set (reg:SF 22 xmm1 [680])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":186 127 {*movsf_internal}
     (nil))
(insn 538 537 539 12 (set (reg:SF 22 xmm1 [orig:256 _170 ] [256])
        (mult:SF (reg:SF 22 xmm1 [680])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [1 wa_vel+0 S4 A32]))) "../src/gvcalc.f":186 802 {*fop_sf_comm}
     (nil))
(insn 539 538 541 12 (set (reg:SF 21 xmm0 [orig:257 _171 ] [257])
        (minus:SF (reg:SF 21 xmm0 [orig:255 _169 ] [255])
            (reg:SF 22 xmm1 [orig:256 _170 ] [256]))) "../src/gvcalc.f":186 805 {*fop_sf_1}
     (nil))
(insn 541 539 542 12 (set (reg:SF 21 xmm0 [681])
        (div:SF (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32]))) "../src/gvcalc.f":186 805 {*fop_sf_1}
     (nil))
(insn 542 541 543 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 a_vel+0 S4 A32])
        (reg:SF 21 xmm0 [681])) "../src/gvcalc.f":186 127 {*movsf_internal}
     (nil))
(insn 543 542 544 12 (set (reg:SF 21 xmm0 [682])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 wa+0 S4 A32])) "../src/gvcalc.f":187 127 {*movsf_internal}
     (nil))
(insn 544 543 545 12 (set (reg:SF 21 xmm0 [orig:259 _173 ] [259])
        (mult:SF (reg:SF 21 xmm0 [682])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [1 wt_omg+0 S4 A32]))) "../src/gvcalc.f":187 802 {*fop_sf_comm}
     (nil))
(insn 545 544 546 12 (set (reg:SF 22 xmm1 [683])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [1 wt+0 S4 A32])) "../src/gvcalc.f":187 127 {*movsf_internal}
     (nil))
(insn 546 545 547 12 (set (reg:SF 22 xmm1 [orig:260 _174 ] [260])
        (mult:SF (reg:SF 22 xmm1 [683])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [1 wa_omg+0 S4 A32]))) "../src/gvcalc.f":187 802 {*fop_sf_comm}
     (nil))
(insn 547 546 549 12 (set (reg:SF 21 xmm0 [orig:261 _175 ] [261])
        (minus:SF (reg:SF 21 xmm0 [orig:259 _173 ] [259])
            (reg:SF 22 xmm1 [orig:260 _174 ] [260]))) "../src/gvcalc.f":187 805 {*fop_sf_1}
     (nil))
(insn 549 547 550 12 (set (reg:SF 21 xmm0 [684])
        (div:SF (reg:SF 21 xmm0 [orig:262 _176 ] [262])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32]))) "../src/gvcalc.f":187 805 {*fop_sf_1}
     (nil))
(insn 550 549 551 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 a_omg+0 S4 A32])
        (reg:SF 21 xmm0 [684])) "../src/gvcalc.f":187 127 {*movsf_internal}
     (nil))
(insn 551 550 552 12 (set (reg:SF 21 xmm0 [685])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":188 127 {*movsf_internal}
     (nil))
(insn 552 551 553 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 a_be+0 S4 A32])
        (reg:SF 21 xmm0 [685])) "../src/gvcalc.f":188 127 {*movsf_internal}
     (nil))
(insn 553 552 554 12 (set (reg/f:DI 0 ax [686])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [10 vso+0 S8 A64])) "../src/gvcalc.f":191 81 {*movdi_internal}
     (nil))
(insn 554 553 555 12 (set (reg:SF 21 xmm0 [orig:467 _530 ] [467])
        (mem:SF (reg/f:DI 0 ax [686]) [1 *vso_529(D)+0 S4 A32])) "../src/gvcalc.f":191 127 {*movsf_internal}
     (nil))
(insn 555 554 556 12 (set (reg:SF 21 xmm0 [orig:468 _531 ] [468])
        (mult:SF (reg:SF 21 xmm0 [orig:467 _530 ] [467])
            (reg:SF 21 xmm0 [orig:467 _530 ] [467]))) "../src/gvcalc.f":191 802 {*fop_sf_comm}
     (nil))
(insn 556 555 557 12 (set (reg:SF 22 xmm1 [688])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [1 wsq+0 S4 A32])) "../src/gvcalc.f":191 127 {*movsf_internal}
     (nil))
(insn 557 556 1162 12 (set (reg:SF 22 xmm1 [688])
        (div:SF (reg:SF 22 xmm1 [688])
            (reg:SF 21 xmm0 [orig:468 _531 ] [468]))) "../src/gvcalc.f":191 805 {*fop_sf_1}
     (nil))
(insn 1162 557 558 12 (set (reg:SF 21 xmm0 [687])
        (reg:SF 22 xmm1 [688])) "../src/gvcalc.f":191 127 {*movsf_internal}
     (nil))
(insn 558 1162 559 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 msq+0 S4 A32])
        (reg:SF 21 xmm0 [687])) "../src/gvcalc.f":191 127 {*movsf_internal}
     (nil))
(insn 559 558 560 12 (set (reg/f:DI 0 ax [689])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [10 vso+0 S8 A64])) "../src/gvcalc.f":192 81 {*movdi_internal}
     (nil))
(insn 560 559 1163 12 (set (reg:SF 21 xmm0 [orig:469 _533 ] [469])
        (mem:SF (reg/f:DI 0 ax [689]) [1 *vso_529(D)+0 S4 A32])) "../src/gvcalc.f":192 127 {*movsf_internal}
     (nil))
(insn 1163 560 561 12 (set (reg:SF 22 xmm1 [orig:469 _533 ] [469])
        (reg:SF 21 xmm0 [orig:469 _533 ] [469])) "../src/gvcalc.f":192 127 {*movsf_internal}
     (nil))
(insn 561 1163 562 12 (set (reg:SF 22 xmm1 [orig:469 _533 ] [469])
        (mult:SF (reg:SF 22 xmm1 [orig:469 _533 ] [469])
            (reg:SF 21 xmm0 [orig:469 _533 ] [469]))) "../src/gvcalc.f":192 802 {*fop_sf_comm}
     (nil))
(insn 562 561 563 12 (set (reg:SF 21 xmm0 [690])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32])) "../src/gvcalc.f":192 127 {*movsf_internal}
     (nil))
(insn 563 562 564 12 (set (reg:SF 21 xmm0 [orig:263 _177 ] [263])
        (plus:SF (reg:SF 21 xmm0 [690])
            (reg:SF 21 xmm0 [690]))) "../src/gvcalc.f":192 802 {*fop_sf_comm}
     (nil))
(insn 564 563 565 12 (set (reg:SF 21 xmm0 [orig:264 _178 ] [264])
        (mult:SF (reg:SF 21 xmm0 [orig:263 _177 ] [263])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -256 [0xffffffffffffff00])) [1 w_psi+0 S4 A32]))) "../src/gvcalc.f":192 802 {*fop_sf_comm}
     (nil))
(insn 565 564 566 12 (set (reg:SF 21 xmm0 [691])
        (div:SF (reg:SF 21 xmm0 [orig:264 _178 ] [264])
            (reg:SF 22 xmm1 [orig:470 _534 ] [470]))) "../src/gvcalc.f":192 805 {*fop_sf_1}
     (nil))
(insn 566 565 567 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 msq_psi+0 S4 A32])
        (reg:SF 21 xmm0 [691])) "../src/gvcalc.f":192 127 {*movsf_internal}
     (nil))
(insn 567 566 568 12 (set (reg/f:DI 0 ax [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [10 vso+0 S8 A64])) "../src/gvcalc.f":193 81 {*movdi_internal}
     (nil))
(insn 568 567 1165 12 (set (reg:SF 21 xmm0 [orig:471 _536 ] [471])
        (mem:SF (reg/f:DI 0 ax [692]) [1 *vso_529(D)+0 S4 A32])) "../src/gvcalc.f":193 127 {*movsf_internal}
     (nil))
(insn 1165 568 569 12 (set (reg:SF 22 xmm1 [orig:471 _536 ] [471])
        (reg:SF 21 xmm0 [orig:471 _536 ] [471])) "../src/gvcalc.f":193 127 {*movsf_internal}
     (nil))
(insn 569 1165 570 12 (set (reg:SF 22 xmm1 [orig:471 _536 ] [471])
        (mult:SF (reg:SF 22 xmm1 [orig:471 _536 ] [471])
            (reg:SF 21 xmm0 [orig:471 _536 ] [471]))) "../src/gvcalc.f":193 802 {*fop_sf_comm}
     (nil))
(insn 570 569 571 12 (set (reg:SF 21 xmm0 [693])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32])) "../src/gvcalc.f":193 127 {*movsf_internal}
     (nil))
(insn 571 570 572 12 (set (reg:SF 21 xmm0 [orig:265 _179 ] [265])
        (plus:SF (reg:SF 21 xmm0 [693])
            (reg:SF 21 xmm0 [693]))) "../src/gvcalc.f":193 802 {*fop_sf_comm}
     (nil))
(insn 572 571 573 12 (set (reg:SF 21 xmm0 [orig:266 _180 ] [266])
        (mult:SF (reg:SF 21 xmm0 [orig:265 _179 ] [265])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -260 [0xfffffffffffffefc])) [1 w_vel+0 S4 A32]))) "../src/gvcalc.f":193 802 {*fop_sf_comm}
     (nil))
(insn 573 572 574 12 (set (reg:SF 21 xmm0 [694])
        (div:SF (reg:SF 21 xmm0 [orig:266 _180 ] [266])
            (reg:SF 22 xmm1 [orig:472 _537 ] [472]))) "../src/gvcalc.f":193 805 {*fop_sf_1}
     (nil))
(insn 574 573 575 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 msq_vel+0 S4 A32])
        (reg:SF 21 xmm0 [694])) "../src/gvcalc.f":193 127 {*movsf_internal}
     (nil))
(insn 575 574 576 12 (set (reg/f:DI 0 ax [695])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [10 vso+0 S8 A64])) "../src/gvcalc.f":194 81 {*movdi_internal}
     (nil))
(insn 576 575 1167 12 (set (reg:SF 21 xmm0 [orig:473 _539 ] [473])
        (mem:SF (reg/f:DI 0 ax [695]) [1 *vso_529(D)+0 S4 A32])) "../src/gvcalc.f":194 127 {*movsf_internal}
     (nil))
(insn 1167 576 577 12 (set (reg:SF 22 xmm1 [orig:473 _539 ] [473])
        (reg:SF 21 xmm0 [orig:473 _539 ] [473])) "../src/gvcalc.f":194 127 {*movsf_internal}
     (nil))
(insn 577 1167 578 12 (set (reg:SF 22 xmm1 [orig:473 _539 ] [473])
        (mult:SF (reg:SF 22 xmm1 [orig:473 _539 ] [473])
            (reg:SF 21 xmm0 [orig:473 _539 ] [473]))) "../src/gvcalc.f":194 802 {*fop_sf_comm}
     (nil))
(insn 578 577 579 12 (set (reg:SF 21 xmm0 [696])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32])) "../src/gvcalc.f":194 127 {*movsf_internal}
     (nil))
(insn 579 578 580 12 (set (reg:SF 21 xmm0 [orig:267 _181 ] [267])
        (plus:SF (reg:SF 21 xmm0 [696])
            (reg:SF 21 xmm0 [696]))) "../src/gvcalc.f":194 802 {*fop_sf_comm}
     (nil))
(insn 580 579 581 12 (set (reg:SF 21 xmm0 [orig:268 _182 ] [268])
        (mult:SF (reg:SF 21 xmm0 [orig:267 _181 ] [267])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -264 [0xfffffffffffffef8])) [1 w_omg+0 S4 A32]))) "../src/gvcalc.f":194 802 {*fop_sf_comm}
     (nil))
(insn 581 580 582 12 (set (reg:SF 21 xmm0 [697])
        (div:SF (reg:SF 21 xmm0 [orig:268 _182 ] [268])
            (reg:SF 22 xmm1 [orig:474 _540 ] [474]))) "../src/gvcalc.f":194 805 {*fop_sf_1}
     (nil))
(insn 582 581 583 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 msq_omg+0 S4 A32])
        (reg:SF 21 xmm0 [697])) "../src/gvcalc.f":194 127 {*movsf_internal}
     (nil))
(insn 583 582 584 12 (set (reg:SF 22 xmm1 [orig:269 msqmax.8_183 ] [269])
        (mem/c:SF (symbol_ref:DI ("msqmax.3566") [flags 0x1c02]  <var_decl 0x1427ebc60 msqmax>) [1 msqmax+0 S4 A32])) "../src/gvcalc.f":195 127 {*movsf_internal}
     (nil))
(insn 584 583 585 12 (set (reg:SF 21 xmm0 [698])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 msq+0 S4 A32])) "../src/gvcalc.f":195 127 {*movsf_internal}
     (nil))
(insn 585 584 586 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [698])
            (reg:SF 22 xmm1 [orig:269 msqmax.8_183 ] [269]))) "../src/gvcalc.f":195 51 {*cmpiusf}
     (nil))
(jump_insn 586 585 590 12 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 599)
            (pc))) "../src/gvcalc.f":195 617 {*jcc_1}
     (nil)
 -> 599)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 699 700 701 702
(note 590 586 591 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 591 590 592 13 (set (reg:SF 21 xmm0 [699])
        (mem/c:SF (symbol_ref:DI ("msqmax.3566") [flags 0x1c02]  <var_decl 0x1427ebc60 msqmax>) [1 msqmax+0 S4 A32])) "../src/gvcalc.f":196 127 {*movsf_internal}
     (nil))
(insn 592 591 593 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 msq+0 S4 A32])
        (reg:SF 21 xmm0 [699])) "../src/gvcalc.f":196 127 {*movsf_internal}
     (nil))
(insn 593 592 594 13 (set (reg:SF 21 xmm0 [700])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":197 127 {*movsf_internal}
     (nil))
(insn 594 593 595 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 msq_psi+0 S4 A32])
        (reg:SF 21 xmm0 [700])) "../src/gvcalc.f":197 127 {*movsf_internal}
     (nil))
(insn 595 594 596 13 (set (reg:SF 21 xmm0 [701])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":198 127 {*movsf_internal}
     (nil))
(insn 596 595 597 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 msq_vel+0 S4 A32])
        (reg:SF 21 xmm0 [701])) "../src/gvcalc.f":198 127 {*movsf_internal}
     (nil))
(insn 597 596 598 13 (set (reg:SF 21 xmm0 [702])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":199 127 {*movsf_internal}
     (nil))
(insn 598 597 599 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 msq_omg+0 S4 A32])
        (reg:SF 21 xmm0 [702])) "../src/gvcalc.f":199 127 {*movsf_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735
(code_label 599 598 600 14 8 (nil) [1 uses])
(note 600 599 601 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 14 (set (reg:SF 21 xmm0 [703])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":202 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 602 601 603 14 (set (reg:SF 21 xmm0 [orig:270 _184 ] [270])
        (minus:SF (reg:SF 21 xmm0 [703])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 msq+0 S4 A32]))) "../src/gvcalc.f":202 805 {*fop_sf_1}
     (nil))
(insn 603 602 604 14 (set (reg:SF 21 xmm0 [orig:271 _185 ] [271])
        (sqrt:SF (reg:SF 21 xmm0 [orig:270 _184 ] [270]))) "../src/gvcalc.f":202 836 {*sqrtsf2_sse}
     (nil))
(insn 604 603 605 14 (set (reg:SF 22 xmm1 [705])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":202 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 605 604 1170 14 (set (reg:SF 22 xmm1 [705])
        (div:SF (reg:SF 22 xmm1 [705])
            (reg:SF 21 xmm0 [orig:271 _185 ] [271]))) "../src/gvcalc.f":202 805 {*fop_sf_1}
     (nil))
(insn 1170 605 606 14 (set (reg:SF 21 xmm0 [704])
        (reg:SF 22 xmm1 [705])) "../src/gvcalc.f":202 127 {*movsf_internal}
     (nil))
(insn 606 1170 607 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32])
        (reg:SF 21 xmm0 [704])) "../src/gvcalc.f":202 127 {*movsf_internal}
     (nil))
(insn 607 606 608 14 (set (reg:SF 22 xmm1 [706])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32])) "../src/gvcalc.f":203 127 {*movsf_internal}
     (nil))
(insn 608 607 609 14 (set (reg:SF 21 xmm0 [707])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":203 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 609 608 610 14 (set (reg:SF 21 xmm0 [orig:272 _186 ] [272])
        (mult:SF (reg:SF 21 xmm0 [707])
            (reg:SF 22 xmm1 [706]))) "../src/gvcalc.f":203 802 {*fop_sf_comm}
     (nil))
(insn 610 609 611 14 (set (reg:SF 22 xmm1 [708])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":203 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 611 610 613 14 (set (reg:SF 22 xmm1 [orig:273 _187 ] [273])
        (minus:SF (reg:SF 22 xmm1 [708])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 msq+0 S4 A32]))) "../src/gvcalc.f":203 805 {*fop_sf_1}
     (nil))
(insn 613 611 614 14 (set (reg:SF 21 xmm0 [709])
        (div:SF (reg:SF 21 xmm0 [orig:272 _186 ] [272])
            (reg:SF 22 xmm1 [orig:274 _188 ] [274]))) "../src/gvcalc.f":203 805 {*fop_sf_1}
     (nil))
(insn 614 613 615 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 pg_msq+0 S4 A32])
        (reg:SF 21 xmm0 [709])) "../src/gvcalc.f":203 127 {*movsf_internal}
     (nil))
(insn 615 614 616 14 (set (reg:SF 21 xmm0 [711])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 pg_msq+0 S4 A32])) "../src/gvcalc.f":205 127 {*movsf_internal}
     (nil))
(insn 616 615 617 14 (set (reg:SF 21 xmm0 [710])
        (mult:SF (reg:SF 21 xmm0 [711])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 msq_psi+0 S4 A32]))) "../src/gvcalc.f":205 802 {*fop_sf_comm}
     (nil))
(insn 617 616 618 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -292 [0xfffffffffffffedc])) [1 pg_psi+0 S4 A32])
        (reg:SF 21 xmm0 [710])) "../src/gvcalc.f":205 127 {*movsf_internal}
     (nil))
(insn 618 617 619 14 (set (reg:SF 21 xmm0 [713])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 pg_msq+0 S4 A32])) "../src/gvcalc.f":206 127 {*movsf_internal}
     (nil))
(insn 619 618 620 14 (set (reg:SF 21 xmm0 [712])
        (mult:SF (reg:SF 21 xmm0 [713])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 msq_vel+0 S4 A32]))) "../src/gvcalc.f":206 802 {*fop_sf_comm}
     (nil))
(insn 620 619 621 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [1 pg_vel+0 S4 A32])
        (reg:SF 21 xmm0 [712])) "../src/gvcalc.f":206 127 {*movsf_internal}
     (nil))
(insn 621 620 622 14 (set (reg:SF 21 xmm0 [715])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [1 pg_msq+0 S4 A32])) "../src/gvcalc.f":207 127 {*movsf_internal}
     (nil))
(insn 622 621 623 14 (set (reg:SF 21 xmm0 [714])
        (mult:SF (reg:SF 21 xmm0 [715])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 msq_omg+0 S4 A32]))) "../src/gvcalc.f":207 802 {*fop_sf_comm}
     (nil))
(insn 623 622 624 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -300 [0xfffffffffffffed4])) [1 pg_omg+0 S4 A32])
        (reg:SF 21 xmm0 [714])) "../src/gvcalc.f":207 127 {*movsf_internal}
     (nil))
(insn 624 623 625 14 (set (reg/f:DI 0 ax [716])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":210 81 {*movdi_internal}
     (nil))
(insn 625 624 626 14 (set (reg:SF 22 xmm1 [orig:275 _189 ] [275])
        (mem:SF (reg/f:DI 0 ax [716]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":210 127 {*movsf_internal}
     (nil))
(insn 626 625 627 14 (set (reg:SF 21 xmm0 [orig:276 a.9_190 ] [276])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":210 127 {*movsf_internal}
     (nil))
(insn 627 626 628 14 (set (reg:SF 21 xmm0 [orig:277 _191 ] [277])
        (mult:SF (reg:SF 21 xmm0 [orig:276 a.9_190 ] [276])
            (reg:SF 22 xmm1 [orig:275 _189 ] [275]))) "../src/gvcalc.f":210 802 {*fop_sf_comm}
     (nil))
(insn 628 627 629 14 (set (reg/f:DI 0 ax [717])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":210 81 {*movdi_internal}
     (nil))
(insn 629 628 630 14 (set (reg:SF 22 xmm1 [orig:278 _192 ] [278])
        (mem:SF (reg/f:DI 0 ax [717]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":210 127 {*movsf_internal}
     (nil))
(insn 630 629 632 14 (set (reg:SF 21 xmm0 [orig:279 _193 ] [279])
        (plus:SF (reg:SF 21 xmm0 [orig:277 _191 ] [277])
            (reg:SF 22 xmm1 [orig:278 _192 ] [278]))) "../src/gvcalc.f":210 802 {*fop_sf_comm}
     (nil))
(insn 632 630 633 14 (set (reg:SF 21 xmm0 [orig:281 _195 ] [281])
        (mult:SF (reg:SF 21 xmm0 [orig:280 _194 ] [280])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32]))) "../src/gvcalc.f":210 802 {*fop_sf_comm}
     (nil))
(insn 633 632 634 14 (set (reg/f:DI 0 ax [718])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":210 81 {*movdi_internal}
     (nil))
(insn 634 633 635 14 (set (mem:SF (reg/f:DI 0 ax [718]) [1 *cl_551(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:281 _195 ] [281])) "../src/gvcalc.f":210 127 {*movsf_internal}
     (nil))
(insn 635 634 636 14 (set (reg/f:DI 0 ax [719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":211 81 {*movdi_internal}
     (nil))
(insn 636 635 637 14 (set (reg:SF 21 xmm0 [orig:282 _196 ] [282])
        (mem:SF (reg/f:DI 0 ax [719]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 637 636 1171 14 (set (reg:SF 21 xmm0 [orig:283 _197 ] [283])
        (mult:SF (reg:SF 21 xmm0 [orig:282 _196 ] [282])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])) [1 a_psi+0 S4 A32]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 1171 637 638 14 (set (reg:SF 22 xmm1 [orig:283 _197 ] [283])
        (reg:SF 21 xmm0 [orig:283 _197 ] [283])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 638 1171 639 14 (set (reg:SF 22 xmm1 [orig:283 _197 ] [283])
        (mult:SF (reg:SF 22 xmm1 [orig:283 _197 ] [283])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 639 638 640 14 (set (reg/f:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":211 81 {*movdi_internal}
     (nil))
(insn 640 639 641 14 (set (reg:SF 23 xmm2 [orig:285 _199 ] [285])
        (mem:SF (reg/f:DI 0 ax [720]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 641 640 642 14 (set (reg:SF 21 xmm0 [orig:286 a.10_200 ] [286])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 642 641 643 14 (set (reg:SF 21 xmm0 [orig:287 _201 ] [287])
        (mult:SF (reg:SF 21 xmm0 [orig:286 a.10_200 ] [286])
            (reg:SF 23 xmm2 [orig:285 _199 ] [285]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 643 642 644 14 (set (reg/f:DI 0 ax [721])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":211 81 {*movdi_internal}
     (nil))
(insn 644 643 645 14 (set (reg:SF 23 xmm2 [orig:288 _202 ] [288])
        (mem:SF (reg/f:DI 0 ax [721]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 645 644 647 14 (set (reg:SF 21 xmm0 [orig:289 _203 ] [289])
        (plus:SF (reg:SF 21 xmm0 [orig:287 _201 ] [287])
            (reg:SF 23 xmm2 [orig:288 _202 ] [288]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 647 645 648 14 (set (reg:SF 21 xmm0 [orig:291 _205 ] [291])
        (mult:SF (reg:SF 21 xmm0 [orig:290 _204 ] [290])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -292 [0xfffffffffffffedc])) [1 pg_psi+0 S4 A32]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 648 647 649 14 (set (reg:SF 21 xmm0 [722])
        (plus:SF (reg:SF 21 xmm0 [orig:291 _205 ] [291])
            (reg:SF 22 xmm1 [orig:284 _198 ] [284]))) "../src/gvcalc.f":211 802 {*fop_sf_comm}
     (nil))
(insn 649 648 650 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])
        (reg:SF 21 xmm0 [722])) "../src/gvcalc.f":211 127 {*movsf_internal}
     (nil))
(insn 650 649 651 14 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":212 81 {*movdi_internal}
     (nil))
(insn 651 650 652 14 (set (reg:SF 21 xmm0 [orig:292 _206 ] [292])
        (mem:SF (reg/f:DI 0 ax [723]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 652 651 1173 14 (set (reg:SF 21 xmm0 [orig:293 _207 ] [293])
        (mult:SF (reg:SF 21 xmm0 [orig:292 _206 ] [292])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])) [1 a_vel+0 S4 A32]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 1173 652 653 14 (set (reg:SF 22 xmm1 [orig:293 _207 ] [293])
        (reg:SF 21 xmm0 [orig:293 _207 ] [293])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 653 1173 654 14 (set (reg:SF 22 xmm1 [orig:293 _207 ] [293])
        (mult:SF (reg:SF 22 xmm1 [orig:293 _207 ] [293])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 654 653 655 14 (set (reg/f:DI 0 ax [724])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":212 81 {*movdi_internal}
     (nil))
(insn 655 654 656 14 (set (reg:SF 23 xmm2 [orig:295 _209 ] [295])
        (mem:SF (reg/f:DI 0 ax [724]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 656 655 657 14 (set (reg:SF 21 xmm0 [orig:296 a.11_210 ] [296])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 657 656 658 14 (set (reg:SF 21 xmm0 [orig:297 _211 ] [297])
        (mult:SF (reg:SF 21 xmm0 [orig:296 a.11_210 ] [296])
            (reg:SF 23 xmm2 [orig:295 _209 ] [295]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 658 657 659 14 (set (reg/f:DI 0 ax [725])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":212 81 {*movdi_internal}
     (nil))
(insn 659 658 660 14 (set (reg:SF 23 xmm2 [orig:298 _212 ] [298])
        (mem:SF (reg/f:DI 0 ax [725]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 660 659 662 14 (set (reg:SF 21 xmm0 [orig:299 _213 ] [299])
        (plus:SF (reg:SF 21 xmm0 [orig:297 _211 ] [297])
            (reg:SF 23 xmm2 [orig:298 _212 ] [298]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 662 660 663 14 (set (reg:SF 21 xmm0 [orig:301 _215 ] [301])
        (mult:SF (reg:SF 21 xmm0 [orig:300 _214 ] [300])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -296 [0xfffffffffffffed8])) [1 pg_vel+0 S4 A32]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 663 662 664 14 (set (reg:SF 21 xmm0 [orig:302 _216 ] [302])
        (plus:SF (reg:SF 21 xmm0 [orig:301 _215 ] [301])
            (reg:SF 22 xmm1 [orig:294 _208 ] [294]))) "../src/gvcalc.f":212 802 {*fop_sf_comm}
     (nil))
(insn 664 663 665 14 (set (reg/f:DI 0 ax [726])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":212 81 {*movdi_internal}
     (nil))
(insn 665 664 666 14 (set (mem:SF (reg/f:DI 0 ax [726]) [1 *cl_vel_554(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:302 _216 ] [302])) "../src/gvcalc.f":212 127 {*movsf_internal}
     (nil))
(insn 666 665 667 14 (set (reg/f:DI 0 ax [727])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":213 81 {*movdi_internal}
     (nil))
(insn 667 666 668 14 (set (reg:SF 21 xmm0 [orig:303 _217 ] [303])
        (mem:SF (reg/f:DI 0 ax [727]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 668 667 1175 14 (set (reg:SF 21 xmm0 [orig:304 _218 ] [304])
        (mult:SF (reg:SF 21 xmm0 [orig:303 _217 ] [303])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])) [1 a_omg+0 S4 A32]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 1175 668 669 14 (set (reg:SF 22 xmm1 [orig:304 _218 ] [304])
        (reg:SF 21 xmm0 [orig:304 _218 ] [304])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 669 1175 670 14 (set (reg:SF 22 xmm1 [orig:304 _218 ] [304])
        (mult:SF (reg:SF 22 xmm1 [orig:304 _218 ] [304])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 670 669 671 14 (set (reg/f:DI 0 ax [728])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":213 81 {*movdi_internal}
     (nil))
(insn 671 670 672 14 (set (reg:SF 23 xmm2 [orig:306 _220 ] [306])
        (mem:SF (reg/f:DI 0 ax [728]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 672 671 673 14 (set (reg:SF 21 xmm0 [orig:307 a.12_221 ] [307])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 673 672 674 14 (set (reg:SF 21 xmm0 [orig:308 _222 ] [308])
        (mult:SF (reg:SF 21 xmm0 [orig:307 a.12_221 ] [307])
            (reg:SF 23 xmm2 [orig:306 _220 ] [306]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 674 673 675 14 (set (reg/f:DI 0 ax [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":213 81 {*movdi_internal}
     (nil))
(insn 675 674 676 14 (set (reg:SF 23 xmm2 [orig:309 _223 ] [309])
        (mem:SF (reg/f:DI 0 ax [729]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 676 675 678 14 (set (reg:SF 21 xmm0 [orig:310 _224 ] [310])
        (plus:SF (reg:SF 21 xmm0 [orig:308 _222 ] [308])
            (reg:SF 23 xmm2 [orig:309 _223 ] [309]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 678 676 679 14 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (mult:SF (reg:SF 21 xmm0 [orig:311 _225 ] [311])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -300 [0xfffffffffffffed4])) [1 pg_omg+0 S4 A32]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 679 678 680 14 (set (reg:SF 21 xmm0 [orig:313 _227 ] [313])
        (plus:SF (reg:SF 21 xmm0 [orig:312 _226 ] [312])
            (reg:SF 22 xmm1 [orig:305 _219 ] [305]))) "../src/gvcalc.f":213 802 {*fop_sf_comm}
     (nil))
(insn 680 679 681 14 (set (reg/f:DI 0 ax [730])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":213 81 {*movdi_internal}
     (nil))
(insn 681 680 682 14 (set (mem:SF (reg/f:DI 0 ax [730]) [1 *cl_omg_556(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:313 _227 ] [313])) "../src/gvcalc.f":213 127 {*movsf_internal}
     (nil))
(insn 682 681 683 14 (set (reg/f:DI 0 ax [731])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":214 81 {*movdi_internal}
     (nil))
(insn 683 682 684 14 (set (reg:SF 21 xmm0 [orig:314 _228 ] [314])
        (mem:SF (reg/f:DI 0 ax [731]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":214 127 {*movsf_internal}
     (nil))
(insn 684 683 685 14 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (mult:SF (reg:SF 21 xmm0 [orig:314 _228 ] [314])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])) [1 a_be+0 S4 A32]))) "../src/gvcalc.f":214 802 {*fop_sf_comm}
     (nil))
(insn 685 684 686 14 (set (reg:SF 21 xmm0 [orig:316 _230 ] [316])
        (mult:SF (reg:SF 21 xmm0 [orig:315 _229 ] [315])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])) [1 pg+0 S4 A32]))) "../src/gvcalc.f":214 802 {*fop_sf_comm}
     (nil))
(insn 686 685 687 14 (set (reg/f:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":214 81 {*movdi_internal}
     (nil))
(insn 687 686 688 14 (set (mem:SF (reg/f:DI 0 ax [732]) [1 *cl_be_558(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:316 _230 ] [316])) "../src/gvcalc.f":214 127 {*movsf_internal}
     (nil))
(insn 688 687 689 14 (set (reg/f:DI 0 ax [733])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 232 [0xe8])) [11 stall+0 S8 A64])) "../src/gvcalc.f":216 81 {*movdi_internal}
     (nil))
(insn 689 688 690 14 (set (mem:SI (reg/f:DI 0 ax [733]) [12 *stall_560(D)+0 S4 A32])
        (const_int 0 [0])) "../src/gvcalc.f":216 82 {*movsi_internal}
     (nil))
(insn 690 689 691 14 (set (reg/f:DI 0 ax [734])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":217 81 {*movdi_internal}
     (nil))
(insn 691 690 692 14 (set (reg:SF 21 xmm0 [orig:317 _231 ] [317])
        (mem:SF (reg/f:DI 0 ax [734]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":217 127 {*movsf_internal}
     (nil))
(insn 692 691 693 14 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [10 clmax+0 S8 A64])) "../src/gvcalc.f":217 81 {*movdi_internal}
     (nil))
(insn 693 692 694 14 (set (reg:SF 22 xmm1 [orig:318 _232 ] [318])
        (mem:SF (reg/f:DI 0 ax [735]) [1 *clmax_562(D)+0 S4 A32])) "../src/gvcalc.f":217 127 {*movsf_internal}
     (nil))
(insn 694 693 695 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:317 _231 ] [317])
            (reg:SF 22 xmm1 [orig:318 _232 ] [318]))) "../src/gvcalc.f":217 51 {*cmpiusf}
     (nil))
(jump_insn 695 694 699 14 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1107)
            (pc))) "../src/gvcalc.f":217 617 {*jcc_1}
     (nil)
 -> 1107)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 319 320 321 322 323 324 325 326 327 328 329 330 331 332 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752
(note 699 695 700 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 700 699 701 15 (set (reg/f:DI 0 ax [736])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 232 [0xe8])) [11 stall+0 S8 A64])) "../src/gvcalc.f":218 81 {*movdi_internal}
     (nil))
(insn 701 700 702 15 (set (mem:SI (reg/f:DI 0 ax [736]) [12 *stall_560(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/gvcalc.f":218 82 {*movsi_internal}
     (nil))
(insn 702 701 703 15 (set (reg/f:DI 0 ax [737])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":219 81 {*movdi_internal}
     (nil))
(insn 703 702 704 15 (set (reg:SF 21 xmm0 [orig:319 _233 ] [319])
        (mem:SF (reg/f:DI 0 ax [737]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":219 127 {*movsf_internal}
     (nil))
(insn 704 703 705 15 (set (reg/f:DI 0 ax [738])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":219 81 {*movdi_internal}
     (nil))
(insn 705 704 706 15 (set (reg:SF 22 xmm1 [orig:320 _234 ] [320])
        (mem:SF (reg/f:DI 0 ax [738]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":219 127 {*movsf_internal}
     (nil))
(insn 706 705 707 15 (set (reg:SF 21 xmm0 [739])
        (div:SF (reg:SF 21 xmm0 [orig:319 _233 ] [319])
            (reg:SF 22 xmm1 [orig:320 _234 ] [320]))) "../src/gvcalc.f":219 805 {*fop_sf_1}
     (nil))
(insn 707 706 708 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32])
        (reg:SF 21 xmm0 [739])) "../src/gvcalc.f":219 127 {*movsf_internal}
     (nil))
(insn 708 707 709 15 (set (reg/f:DI 0 ax [740])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [10 clmax+0 S8 A64])) "../src/gvcalc.f":221 81 {*movdi_internal}
     (nil))
(insn 709 708 1177 15 (set (reg:SF 27 xmm6 [orig:321 _235 ] [321])
        (mem:SF (reg/f:DI 0 ax [740]) [1 *clmax_562(D)+0 S4 A32])) "../src/gvcalc.f":221 127 {*movsf_internal}
     (nil))
(insn 1177 709 1213 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 27 xmm6 [orig:321 _235 ] [321])) "../src/gvcalc.f":221 127 {*movsf_internal}
     (nil))
(note 1213 1177 1202 15 NOTE_INSN_DELETED)
(note 1202 1213 710 15 NOTE_INSN_DELETED)
(insn 710 1202 711 15 (set (reg:SF 21 xmm0 [orig:322 a.13_236 ] [322])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":221 127 {*movsf_internal}
     (nil))
(insn 711 710 713 15 (set (reg:SF 21 xmm0 [orig:323 _237 ] [323])
        (minus:SF (reg:SF 21 xmm0 [orig:322 a.13_236 ] [322])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32]))) "../src/gvcalc.f":221 805 {*fop_sf_1}
     (nil))
(call_insn/u 713 711 1178 15 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":221 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1178 713 1208 15 NOTE_INSN_DELETED)
(note 1208 1178 715 15 NOTE_INSN_DELETED)
(insn 715 1208 716 15 (set (reg:SF 21 xmm0 [orig:325 _239 ] [325])
        (mult:SF (reg:SF 21 xmm0 [orig:324 _238 ] [324])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32]))) "../src/gvcalc.f":221 802 {*fop_sf_comm}
     (nil))
(insn 716 715 717 15 (set (reg/f:DI 0 ax [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":221 81 {*movdi_internal}
     (nil))
(insn 717 716 718 15 (set (mem:SF (reg/f:DI 0 ax [741]) [1 *cl_551(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:325 _239 ] [325])) "../src/gvcalc.f":221 127 {*movsf_internal}
     (nil))
(insn 718 717 719 15 (set (reg/f:DI 0 ax [742])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [10 clmax+0 S8 A64])) "../src/gvcalc.f":222 81 {*movdi_internal}
     (nil))
(insn 719 718 1179 15 (set (reg:SF 28 xmm7 [orig:326 _240 ] [326])
        (mem:SF (reg/f:DI 0 ax [742]) [1 *clmax_562(D)+0 S4 A32])) "../src/gvcalc.f":222 127 {*movsf_internal}
     (nil))
(insn 1179 719 1212 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 28 xmm7 [orig:326 _240 ] [326])) "../src/gvcalc.f":222 127 {*movsf_internal}
     (nil))
(note 1212 1179 1201 15 NOTE_INSN_DELETED)
(note 1201 1212 720 15 NOTE_INSN_DELETED)
(insn 720 1201 721 15 (set (reg:SF 22 xmm1 [orig:327 a.14_241 ] [327])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":222 127 {*movsf_internal}
     (nil))
(insn 721 720 722 15 (set (reg:SF 21 xmm0 [743])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32])) "../src/gvcalc.f":222 127 {*movsf_internal}
     (nil))
(insn 722 721 724 15 (set (reg:SF 21 xmm0 [orig:328 _242 ] [328])
        (minus:SF (reg:SF 21 xmm0 [743])
            (reg:SF 22 xmm1 [orig:327 a.14_241 ] [327]))) "../src/gvcalc.f":222 805 {*fop_sf_1}
     (nil))
(call_insn/u 724 722 1180 15 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":222 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1180 724 1207 15 NOTE_INSN_DELETED)
(note 1207 1180 726 15 NOTE_INSN_DELETED)
(insn 726 1207 727 15 (set (reg:SF 21 xmm0 [744])
        (mult:SF (reg:SF 21 xmm0 [orig:329 _243 ] [329])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32]))) "../src/gvcalc.f":222 802 {*fop_sf_comm}
     (nil))
(insn 727 726 728 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])
        (reg:SF 21 xmm0 [744])) "../src/gvcalc.f":222 127 {*movsf_internal}
     (nil))
(insn 728 727 729 15 (set (reg:SF 21 xmm0 [746])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":224 127 {*movsf_internal}
     (nil))
(insn 729 728 730 15 (set (reg:SF 21 xmm0 [745])
        (mult:SF (reg:SF 21 xmm0 [746])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])) [1 a_psi+0 S4 A32]))) "../src/gvcalc.f":224 802 {*fop_sf_comm}
     (nil))
(insn 730 729 731 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])
        (reg:SF 21 xmm0 [745])) "../src/gvcalc.f":224 127 {*movsf_internal}
     (nil))
(insn 731 730 732 15 (set (reg:SF 21 xmm0 [747])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":225 127 {*movsf_internal}
     (nil))
(insn 732 731 733 15 (set (reg:SF 21 xmm0 [orig:330 _244 ] [330])
        (mult:SF (reg:SF 21 xmm0 [747])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])) [1 a_vel+0 S4 A32]))) "../src/gvcalc.f":225 802 {*fop_sf_comm}
     (nil))
(insn 733 732 734 15 (set (reg/f:DI 0 ax [748])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":225 81 {*movdi_internal}
     (nil))
(insn 734 733 735 15 (set (mem:SF (reg/f:DI 0 ax [748]) [1 *cl_vel_554(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:330 _244 ] [330])) "../src/gvcalc.f":225 127 {*movsf_internal}
     (nil))
(insn 735 734 736 15 (set (reg:SF 21 xmm0 [749])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":226 127 {*movsf_internal}
     (nil))
(insn 736 735 737 15 (set (reg:SF 21 xmm0 [orig:331 _245 ] [331])
        (mult:SF (reg:SF 21 xmm0 [749])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])) [1 a_omg+0 S4 A32]))) "../src/gvcalc.f":226 802 {*fop_sf_comm}
     (nil))
(insn 737 736 738 15 (set (reg/f:DI 0 ax [750])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":226 81 {*movdi_internal}
     (nil))
(insn 738 737 739 15 (set (mem:SF (reg/f:DI 0 ax [750]) [1 *cl_omg_556(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:331 _245 ] [331])) "../src/gvcalc.f":226 127 {*movsf_internal}
     (nil))
(insn 739 738 740 15 (set (reg:SF 21 xmm0 [751])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":227 127 {*movsf_internal}
     (nil))
(insn 740 739 741 15 (set (reg:SF 21 xmm0 [orig:332 _246 ] [332])
        (mult:SF (reg:SF 21 xmm0 [751])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])) [1 a_be+0 S4 A32]))) "../src/gvcalc.f":227 802 {*fop_sf_comm}
     (nil))
(insn 741 740 742 15 (set (reg/f:DI 0 ax [752])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":227 81 {*movdi_internal}
     (nil))
(insn 742 741 1108 15 (set (mem:SF (reg/f:DI 0 ax [752]) [1 *cl_be_558(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:332 _246 ] [332])) "../src/gvcalc.f":227 127 {*movsf_internal}
     (nil))
(jump_insn 1108 742 1109 15 (set (pc)
        (label_ref 800)) 649 {jump}
     (nil)
 -> 800)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1109 1108 1107)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 333 334 753 754
(code_label 1107 1109 746 16 26 (nil) [1 uses])
(note 746 1107 747 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 747 746 748 16 (set (reg/f:DI 0 ax [753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":228 81 {*movdi_internal}
     (nil))
(insn 748 747 749 16 (set (reg:SF 22 xmm1 [orig:333 _247 ] [333])
        (mem:SF (reg/f:DI 0 ax [753]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":228 127 {*movsf_internal}
     (nil))
(insn 749 748 750 16 (set (reg/f:DI 0 ax [754])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [10 clmin+0 S8 A64])) "../src/gvcalc.f":228 81 {*movdi_internal}
     (nil))
(insn 750 749 751 16 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mem:SF (reg/f:DI 0 ax [754]) [1 *clmin_563(D)+0 S4 A32])) "../src/gvcalc.f":228 127 {*movsf_internal}
     (nil))
(insn 751 750 752 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (reg:SF 22 xmm1 [orig:333 _247 ] [333]))) "../src/gvcalc.f":228 51 {*cmpiusf}
     (nil))
(jump_insn 752 751 756 16 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 800)
            (pc))) "../src/gvcalc.f":228 617 {*jcc_1}
     (nil)
 -> 800)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 335 336 337 338 339 340 341 342 343 344 345 346 347 348 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771
(note 756 752 757 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 17 (set (reg/f:DI 0 ax [755])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 232 [0xe8])) [11 stall+0 S8 A64])) "../src/gvcalc.f":229 81 {*movdi_internal}
     (nil))
(insn 758 757 759 17 (set (mem:SI (reg/f:DI 0 ax [755]) [12 *stall_560(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/gvcalc.f":229 82 {*movsi_internal}
     (nil))
(insn 759 758 760 17 (set (reg/f:DI 0 ax [756])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [10 cl0+0 S8 A64])) "../src/gvcalc.f":230 81 {*movdi_internal}
     (nil))
(insn 760 759 761 17 (set (reg:SF 21 xmm0 [orig:335 _249 ] [335])
        (mem:SF (reg/f:DI 0 ax [756]) [1 *cl0_415(D)+0 S4 A32])) "../src/gvcalc.f":230 127 {*movsf_internal}
     (nil))
(insn 761 760 762 17 (set (reg/f:DI 0 ax [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [10 dclda+0 S8 A64])) "../src/gvcalc.f":230 81 {*movdi_internal}
     (nil))
(insn 762 761 763 17 (set (reg:SF 22 xmm1 [orig:336 _250 ] [336])
        (mem:SF (reg/f:DI 0 ax [757]) [1 *dclda_416(D)+0 S4 A32])) "../src/gvcalc.f":230 127 {*movsf_internal}
     (nil))
(insn 763 762 764 17 (set (reg:SF 21 xmm0 [758])
        (div:SF (reg:SF 21 xmm0 [orig:335 _249 ] [335])
            (reg:SF 22 xmm1 [orig:336 _250 ] [336]))) "../src/gvcalc.f":230 805 {*fop_sf_1}
     (nil))
(insn 764 763 765 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32])
        (reg:SF 21 xmm0 [758])) "../src/gvcalc.f":230 127 {*movsf_internal}
     (nil))
(insn 765 764 766 17 (set (reg/f:DI 0 ax [759])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [10 clmin+0 S8 A64])) "../src/gvcalc.f":232 81 {*movdi_internal}
     (nil))
(insn 766 765 1181 17 (set (reg:SF 26 xmm5 [orig:337 _251 ] [337])
        (mem:SF (reg/f:DI 0 ax [759]) [1 *clmin_563(D)+0 S4 A32])) "../src/gvcalc.f":232 127 {*movsf_internal}
     (nil))
(insn 1181 766 1215 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 26 xmm5 [orig:337 _251 ] [337])) "../src/gvcalc.f":232 127 {*movsf_internal}
     (nil))
(note 1215 1181 1204 17 NOTE_INSN_DELETED)
(note 1204 1215 767 17 NOTE_INSN_DELETED)
(insn 767 1204 768 17 (set (reg:SF 21 xmm0 [orig:338 a.15_252 ] [338])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":232 127 {*movsf_internal}
     (nil))
(insn 768 767 770 17 (set (reg:SF 21 xmm0 [orig:339 _253 ] [339])
        (minus:SF (reg:SF 21 xmm0 [orig:338 a.15_252 ] [338])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32]))) "../src/gvcalc.f":232 805 {*fop_sf_1}
     (nil))
(call_insn/u 770 768 1182 17 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":232 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1182 770 1206 17 NOTE_INSN_DELETED)
(note 1206 1182 772 17 NOTE_INSN_DELETED)
(insn 772 1206 773 17 (set (reg:SF 21 xmm0 [orig:341 _255 ] [341])
        (mult:SF (reg:SF 21 xmm0 [orig:340 _254 ] [340])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32]))) "../src/gvcalc.f":232 802 {*fop_sf_comm}
     (nil))
(insn 773 772 774 17 (set (reg/f:DI 0 ax [760])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":232 81 {*movdi_internal}
     (nil))
(insn 774 773 775 17 (set (mem:SF (reg/f:DI 0 ax [760]) [1 *cl_551(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:341 _255 ] [341])) "../src/gvcalc.f":232 127 {*movsf_internal}
     (nil))
(insn 775 774 776 17 (set (reg/f:DI 0 ax [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [10 clmin+0 S8 A64])) "../src/gvcalc.f":233 81 {*movdi_internal}
     (nil))
(insn 776 775 1183 17 (set (reg:SF 27 xmm6 [orig:342 _256 ] [342])
        (mem:SF (reg/f:DI 0 ax [761]) [1 *clmin_563(D)+0 S4 A32])) "../src/gvcalc.f":233 127 {*movsf_internal}
     (nil))
(insn 1183 776 1214 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32])
        (reg:SF 27 xmm6 [orig:342 _256 ] [342])) "../src/gvcalc.f":233 127 {*movsf_internal}
     (nil))
(note 1214 1183 1203 17 NOTE_INSN_DELETED)
(note 1203 1214 777 17 NOTE_INSN_DELETED)
(insn 777 1203 778 17 (set (reg:SF 22 xmm1 [orig:343 a.16_257 ] [343])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -332 [0xfffffffffffffeb4])) [1 a+0 S4 A32])) "../src/gvcalc.f":233 127 {*movsf_internal}
     (nil))
(insn 778 777 779 17 (set (reg:SF 21 xmm0 [762])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [1 acl0+0 S4 A32])) "../src/gvcalc.f":233 127 {*movsf_internal}
     (nil))
(insn 779 778 781 17 (set (reg:SF 21 xmm0 [orig:344 _258 ] [344])
        (minus:SF (reg:SF 21 xmm0 [762])
            (reg:SF 22 xmm1 [orig:343 a.16_257 ] [343]))) "../src/gvcalc.f":233 805 {*fop_sf_1}
     (nil))
(call_insn/u 781 779 1184 17 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/gvcalc.f":233 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1184 781 1205 17 NOTE_INSN_DELETED)
(note 1205 1184 783 17 NOTE_INSN_DELETED)
(insn 783 1205 784 17 (set (reg:SF 21 xmm0 [763])
        (mult:SF (reg:SF 21 xmm0 [orig:345 _259 ] [345])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -868 [0xfffffffffffffc9c])) [14 %sfp+-868 S4 A32]))) "../src/gvcalc.f":233 802 {*fop_sf_comm}
     (nil))
(insn 784 783 785 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])
        (reg:SF 21 xmm0 [763])) "../src/gvcalc.f":233 127 {*movsf_internal}
     (nil))
(insn 785 784 786 17 (set (reg:SF 21 xmm0 [765])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":235 127 {*movsf_internal}
     (nil))
(insn 786 785 787 17 (set (reg:SF 21 xmm0 [764])
        (mult:SF (reg:SF 21 xmm0 [765])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])) [1 a_psi+0 S4 A32]))) "../src/gvcalc.f":235 802 {*fop_sf_comm}
     (nil))
(insn 787 786 788 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])
        (reg:SF 21 xmm0 [764])) "../src/gvcalc.f":235 127 {*movsf_internal}
     (nil))
(insn 788 787 789 17 (set (reg:SF 21 xmm0 [766])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":236 127 {*movsf_internal}
     (nil))
(insn 789 788 790 17 (set (reg:SF 21 xmm0 [orig:346 _260 ] [346])
        (mult:SF (reg:SF 21 xmm0 [766])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])) [1 a_vel+0 S4 A32]))) "../src/gvcalc.f":236 802 {*fop_sf_comm}
     (nil))
(insn 790 789 791 17 (set (reg/f:DI 0 ax [767])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":236 81 {*movdi_internal}
     (nil))
(insn 791 790 792 17 (set (mem:SF (reg/f:DI 0 ax [767]) [1 *cl_vel_554(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:346 _260 ] [346])) "../src/gvcalc.f":236 127 {*movsf_internal}
     (nil))
(insn 792 791 793 17 (set (reg:SF 21 xmm0 [768])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":237 127 {*movsf_internal}
     (nil))
(insn 793 792 794 17 (set (reg:SF 21 xmm0 [orig:347 _261 ] [347])
        (mult:SF (reg:SF 21 xmm0 [768])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])) [1 a_omg+0 S4 A32]))) "../src/gvcalc.f":237 802 {*fop_sf_comm}
     (nil))
(insn 794 793 795 17 (set (reg/f:DI 0 ax [769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":237 81 {*movdi_internal}
     (nil))
(insn 795 794 796 17 (set (mem:SF (reg/f:DI 0 ax [769]) [1 *cl_omg_556(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:347 _261 ] [347])) "../src/gvcalc.f":237 127 {*movsf_internal}
     (nil))
(insn 796 795 797 17 (set (reg:SF 21 xmm0 [770])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -308 [0xfffffffffffffecc])) [1 cl_a+0 S4 A32])) "../src/gvcalc.f":238 127 {*movsf_internal}
     (nil))
(insn 797 796 798 17 (set (reg:SF 21 xmm0 [orig:348 _262 ] [348])
        (mult:SF (reg:SF 21 xmm0 [770])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])) [1 a_be+0 S4 A32]))) "../src/gvcalc.f":238 802 {*fop_sf_comm}
     (nil))
(insn 798 797 799 17 (set (reg/f:DI 0 ax [771])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":238 81 {*movdi_internal}
     (nil))
(insn 799 798 800 17 (set (mem:SF (reg/f:DI 0 ax [771]) [1 *cl_be_558(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:348 _262 ] [348])) "../src/gvcalc.f":238 127 {*movsf_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;;              15 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 442 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804
(code_label 800 799 801 18 12 (nil) [2 uses])
(note 801 800 802 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 802 801 803 18 (set (reg/f:DI 0 ax [772])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [10 gam+0 S8 A64])) "../src/gvcalc.f":242 81 {*movdi_internal}
     (nil))
(insn 803 802 804 18 (set (reg:SF 22 xmm1 [orig:349 _263 ] [349])
        (mem:SF (reg/f:DI 0 ax [772]) [1 *gam_508(D)+0 S4 A32])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (nil))
(insn 804 803 805 18 (set (reg/f:DI 0 ax [773])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])) "../src/gvcalc.f":242 81 {*movdi_internal}
     (nil))
(insn 805 804 806 18 (set (reg:SF 23 xmm2 [orig:350 _264 ] [350])
        (mem:SF (reg/f:DI 0 ax [773]) [1 *chord_580(D)+0 S4 A32])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (nil))
(insn 806 805 807 18 (set (reg:SF 21 xmm0 [774])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 807 806 808 18 (set (reg:SF 21 xmm0 [orig:351 _265 ] [351])
        (mult:SF (reg:SF 21 xmm0 [774])
            (reg:SF 23 xmm2 [orig:350 _264 ] [350]))) "../src/gvcalc.f":242 802 {*fop_sf_comm}
     (nil))
(insn 808 807 809 18 (set (reg/f:DI 0 ax [775])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":242 81 {*movdi_internal}
     (nil))
(insn 809 808 810 18 (set (reg:SF 23 xmm2 [orig:352 _266 ] [352])
        (mem:SF (reg/f:DI 0 ax [775]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (nil))
(insn 810 809 811 18 (set (reg:SF 21 xmm0 [orig:353 _267 ] [353])
        (mult:SF (reg:SF 21 xmm0 [orig:351 _265 ] [351])
            (reg:SF 23 xmm2 [orig:352 _266 ] [352]))) "../src/gvcalc.f":242 802 {*fop_sf_comm}
     (nil))
(insn 811 810 812 18 (set (reg:SF 21 xmm0 [orig:354 _268 ] [354])
        (mult:SF (reg:SF 21 xmm0 [orig:353 _267 ] [353])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":242 802 {*fop_sf_comm}
     (nil))
(insn 812 811 1186 18 (set (reg:SF 22 xmm1 [orig:349 _263 ] [349])
        (minus:SF (reg:SF 22 xmm1 [orig:349 _263 ] [349])
            (reg:SF 21 xmm0 [orig:354 _268 ] [354]))) "../src/gvcalc.f":242 805 {*fop_sf_1}
     (nil))
(insn 1186 812 813 18 (set (reg:SF 21 xmm0 [orig:355 _269 ] [355])
        (reg:SF 22 xmm1 [orig:349 _263 ] [349])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (nil))
(insn 813 1186 814 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [1 res+0 S4 A64])
        (reg:SF 21 xmm0 [orig:355 _269 ] [355])) "../src/gvcalc.f":242 127 {*movsf_internal}
     (nil))
(insn 814 813 815 18 (set (reg/f:DI 0 ax [776])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])) "../src/gvcalc.f":243 81 {*movdi_internal}
     (nil))
(insn 815 814 816 18 (set (reg:SF 22 xmm1 [orig:356 _270 ] [356])
        (mem:SF (reg/f:DI 0 ax [776]) [1 *chord_580(D)+0 S4 A32])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 816 815 817 18 (set (reg:SF 21 xmm0 [777])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 817 816 818 18 (set (reg:SF 21 xmm0 [orig:357 _271 ] [357])
        (mult:SF (reg:SF 21 xmm0 [777])
            (reg:SF 22 xmm1 [orig:356 _270 ] [356]))) "../src/gvcalc.f":243 802 {*fop_sf_comm}
     (nil))
(insn 818 817 819 18 (set (reg/f:DI 0 ax [778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":243 81 {*movdi_internal}
     (nil))
(insn 819 818 1187 18 (set (reg:SF 22 xmm1 [orig:358 _272 ] [358])
        (mem:SF (reg/f:DI 0 ax [778]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 1187 819 820 18 (set (reg:SF 23 xmm2 [orig:358 _272 ] [358])
        (reg:SF 22 xmm1 [orig:358 _272 ] [358])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 820 1187 821 18 (set (reg:SF 23 xmm2 [orig:358 _272 ] [358])
        (mult:SF (reg:SF 23 xmm2 [orig:358 _272 ] [358])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -256 [0xffffffffffffff00])) [1 w_psi+0 S4 A32]))) "../src/gvcalc.f":243 802 {*fop_sf_comm}
     (nil))
(insn 821 820 822 18 (set (reg:SF 22 xmm1 [779])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 822 821 823 18 (set (reg:SF 22 xmm1 [orig:360 _274 ] [360])
        (mult:SF (reg:SF 22 xmm1 [779])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":243 802 {*fop_sf_comm}
     (nil))
(insn 823 822 825 18 (set (reg:SF 22 xmm1 [orig:361 _275 ] [361])
        (plus:SF (reg:SF 22 xmm1 [orig:360 _274 ] [360])
            (reg:SF 23 xmm2 [orig:359 _273 ] [359]))) "../src/gvcalc.f":243 802 {*fop_sf_comm}
     (nil))
(insn 825 823 826 18 (set (reg:SF 21 xmm0 [orig:363 _277 ] [363])
        (mult:SF (reg:SF 21 xmm0 [orig:357 _271 ] [357])
            (reg:SF 22 xmm1 [orig:362 _276 ] [362]))) "../src/gvcalc.f":243 802 {*fop_sf_comm}
     (nil))
(insn 826 825 827 18 (set (reg:SF 22 xmm1 [781])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 827 826 1190 18 (set (reg:SF 22 xmm1 [781])
        (minus:SF (reg:SF 22 xmm1 [781])
            (reg:SF 21 xmm0 [orig:363 _277 ] [363]))) "../src/gvcalc.f":243 805 {*fop_sf_1}
     (nil))
(insn 1190 827 828 18 (set (reg:SF 21 xmm0 [780])
        (reg:SF 22 xmm1 [781])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 828 1190 829 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32])
        (reg:SF 21 xmm0 [780])) "../src/gvcalc.f":243 127 {*movsf_internal}
     (nil))
(insn 829 828 830 18 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [10 gam_vel+0 S8 A64])) "../src/gvcalc.f":244 81 {*movdi_internal}
     (nil))
(insn 830 829 831 18 (set (reg:SF 24 xmm3 [orig:364 _278 ] [364])
        (mem:SF (reg/f:DI 0 ax [782]) [1 *gam_vel_511(D)+0 S4 A32])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 831 830 832 18 (set (reg/f:DI 0 ax [783])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])) "../src/gvcalc.f":244 81 {*movdi_internal}
     (nil))
(insn 832 831 833 18 (set (reg:SF 22 xmm1 [orig:365 _279 ] [365])
        (mem:SF (reg/f:DI 0 ax [783]) [1 *chord_580(D)+0 S4 A32])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 833 832 834 18 (set (reg:SF 21 xmm0 [784])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 834 833 835 18 (set (reg:SF 21 xmm0 [orig:366 _280 ] [366])
        (mult:SF (reg:SF 21 xmm0 [784])
            (reg:SF 22 xmm1 [orig:365 _279 ] [365]))) "../src/gvcalc.f":244 802 {*fop_sf_comm}
     (nil))
(insn 835 834 836 18 (set (reg/f:DI 0 ax [785])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":244 81 {*movdi_internal}
     (nil))
(insn 836 835 1191 18 (set (reg:SF 22 xmm1 [orig:367 _281 ] [367])
        (mem:SF (reg/f:DI 0 ax [785]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 1191 836 837 18 (set (reg:SF 23 xmm2 [orig:367 _281 ] [367])
        (reg:SF 22 xmm1 [orig:367 _281 ] [367])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 837 1191 838 18 (set (reg:SF 23 xmm2 [orig:367 _281 ] [367])
        (mult:SF (reg:SF 23 xmm2 [orig:367 _281 ] [367])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -260 [0xfffffffffffffefc])) [1 w_vel+0 S4 A32]))) "../src/gvcalc.f":244 802 {*fop_sf_comm}
     (nil))
(insn 838 837 839 18 (set (reg/f:DI 0 ax [786])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":244 81 {*movdi_internal}
     (nil))
(insn 839 838 840 18 (set (reg:SF 22 xmm1 [orig:369 _283 ] [369])
        (mem:SF (reg/f:DI 0 ax [786]) [1 *cl_vel_554(D)+0 S4 A32])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 840 839 841 18 (set (reg:SF 22 xmm1 [orig:370 _284 ] [370])
        (mult:SF (reg:SF 22 xmm1 [orig:369 _283 ] [369])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":244 802 {*fop_sf_comm}
     (nil))
(insn 841 840 843 18 (set (reg:SF 22 xmm1 [orig:371 _285 ] [371])
        (plus:SF (reg:SF 22 xmm1 [orig:370 _284 ] [370])
            (reg:SF 23 xmm2 [orig:368 _282 ] [368]))) "../src/gvcalc.f":244 802 {*fop_sf_comm}
     (nil))
(insn 843 841 844 18 (set (reg:SF 21 xmm0 [orig:373 _287 ] [373])
        (mult:SF (reg:SF 21 xmm0 [orig:366 _280 ] [366])
            (reg:SF 22 xmm1 [orig:372 _286 ] [372]))) "../src/gvcalc.f":244 802 {*fop_sf_comm}
     (nil))
(insn 844 843 1194 18 (set (reg:SF 24 xmm3 [orig:364 _278 ] [364])
        (minus:SF (reg:SF 24 xmm3 [orig:364 _278 ] [364])
            (reg:SF 21 xmm0 [orig:373 _287 ] [373]))) "../src/gvcalc.f":244 805 {*fop_sf_1}
     (nil))
(insn 1194 844 845 18 (set (reg:SF 21 xmm0 [787])
        (reg:SF 24 xmm3 [orig:364 _278 ] [364])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 845 1194 846 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 res_vel+0 S4 A32])
        (reg:SF 21 xmm0 [787])) "../src/gvcalc.f":244 127 {*movsf_internal}
     (nil))
(insn 846 845 847 18 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [10 gam_omg+0 S8 A64])) "../src/gvcalc.f":245 81 {*movdi_internal}
     (nil))
(insn 847 846 848 18 (set (reg:SF 24 xmm3 [orig:374 _288 ] [374])
        (mem:SF (reg/f:DI 0 ax [788]) [1 *gam_omg_513(D)+0 S4 A32])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 848 847 849 18 (set (reg/f:DI 0 ax [789])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])) "../src/gvcalc.f":245 81 {*movdi_internal}
     (nil))
(insn 849 848 850 18 (set (reg:SF 22 xmm1 [orig:375 _289 ] [375])
        (mem:SF (reg/f:DI 0 ax [789]) [1 *chord_580(D)+0 S4 A32])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 850 849 851 18 (set (reg:SF 21 xmm0 [790])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 851 850 852 18 (set (reg:SF 21 xmm0 [orig:376 _290 ] [376])
        (mult:SF (reg:SF 21 xmm0 [790])
            (reg:SF 22 xmm1 [orig:375 _289 ] [375]))) "../src/gvcalc.f":245 802 {*fop_sf_comm}
     (nil))
(insn 852 851 853 18 (set (reg/f:DI 0 ax [791])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":245 81 {*movdi_internal}
     (nil))
(insn 853 852 1195 18 (set (reg:SF 22 xmm1 [orig:377 _291 ] [377])
        (mem:SF (reg/f:DI 0 ax [791]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 1195 853 854 18 (set (reg:SF 23 xmm2 [orig:377 _291 ] [377])
        (reg:SF 22 xmm1 [orig:377 _291 ] [377])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 854 1195 855 18 (set (reg:SF 23 xmm2 [orig:377 _291 ] [377])
        (mult:SF (reg:SF 23 xmm2 [orig:377 _291 ] [377])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -264 [0xfffffffffffffef8])) [1 w_omg+0 S4 A32]))) "../src/gvcalc.f":245 802 {*fop_sf_comm}
     (nil))
(insn 855 854 856 18 (set (reg/f:DI 0 ax [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":245 81 {*movdi_internal}
     (nil))
(insn 856 855 857 18 (set (reg:SF 22 xmm1 [orig:379 _293 ] [379])
        (mem:SF (reg/f:DI 0 ax [792]) [1 *cl_omg_556(D)+0 S4 A32])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 857 856 858 18 (set (reg:SF 22 xmm1 [orig:380 _294 ] [380])
        (mult:SF (reg:SF 22 xmm1 [orig:379 _293 ] [379])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":245 802 {*fop_sf_comm}
     (nil))
(insn 858 857 860 18 (set (reg:SF 22 xmm1 [orig:381 _295 ] [381])
        (plus:SF (reg:SF 22 xmm1 [orig:380 _294 ] [380])
            (reg:SF 23 xmm2 [orig:378 _292 ] [378]))) "../src/gvcalc.f":245 802 {*fop_sf_comm}
     (nil))
(insn 860 858 861 18 (set (reg:SF 21 xmm0 [orig:383 _297 ] [383])
        (mult:SF (reg:SF 21 xmm0 [orig:376 _290 ] [376])
            (reg:SF 22 xmm1 [orig:382 _296 ] [382]))) "../src/gvcalc.f":245 802 {*fop_sf_comm}
     (nil))
(insn 861 860 1198 18 (set (reg:SF 24 xmm3 [orig:374 _288 ] [374])
        (minus:SF (reg:SF 24 xmm3 [orig:374 _288 ] [374])
            (reg:SF 21 xmm0 [orig:383 _297 ] [383]))) "../src/gvcalc.f":245 805 {*fop_sf_1}
     (nil))
(insn 1198 861 862 18 (set (reg:SF 21 xmm0 [793])
        (reg:SF 24 xmm3 [orig:374 _288 ] [374])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 862 1198 863 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 res_omg+0 S4 A32])
        (reg:SF 21 xmm0 [793])) "../src/gvcalc.f":245 127 {*movsf_internal}
     (nil))
(insn 863 862 864 18 (set (reg/f:DI 0 ax [794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":246 81 {*movdi_internal}
     (nil))
(insn 864 863 865 18 (set (reg:SF 22 xmm1 [orig:384 _298 ] [384])
        (mem:SF (reg/f:DI 0 ax [794]) [1 *cl_551(D)+0 S4 A32])) "../src/gvcalc.f":246 127 {*movsf_internal}
     (nil))
(insn 865 864 866 18 (set (reg:SF 21 xmm0 [795])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":246 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 866 865 867 18 (set (reg:SF 21 xmm0 [orig:385 _299 ] [385])
        (mult:SF (reg:SF 21 xmm0 [795])
            (reg:SF 22 xmm1 [orig:384 _298 ] [384]))) "../src/gvcalc.f":246 802 {*fop_sf_comm}
     (nil))
(insn 867 866 868 18 (set (reg:SF 21 xmm0 [orig:386 _300 ] [386])
        (mult:SF (reg:SF 21 xmm0 [orig:385 _299 ] [385])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":246 802 {*fop_sf_comm}
     (nil))
(insn 868 867 869 18 (set (reg:V4SF 22 xmm1 [797])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":246 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 869 868 870 18 (parallel [
            (set (reg:SF 21 xmm0 [796])
                (neg:SF (reg:SF 21 xmm0 [orig:386 _300 ] [386])))
            (use (reg:V4SF 22 xmm1 [797]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":246 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:386 _300 ] [386]))
        (nil)))
(insn 870 869 871 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 res_ch+0 S4 A32])
        (reg:SF 21 xmm0 [796])) "../src/gvcalc.f":246 127 {*movsf_internal}
     (nil))
(insn 871 870 872 18 (set (reg/f:DI 0 ax [798])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [10 chord+0 S8 A64])) "../src/gvcalc.f":247 81 {*movdi_internal}
     (nil))
(insn 872 871 873 18 (set (reg:SF 22 xmm1 [orig:387 _301 ] [387])
        (mem:SF (reg/f:DI 0 ax [798]) [1 *chord_580(D)+0 S4 A32])) "../src/gvcalc.f":247 127 {*movsf_internal}
     (nil))
(insn 873 872 874 18 (set (reg:SF 21 xmm0 [799])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":247 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 874 873 875 18 (set (reg:SF 21 xmm0 [orig:388 _302 ] [388])
        (mult:SF (reg:SF 21 xmm0 [799])
            (reg:SF 22 xmm1 [orig:387 _301 ] [387]))) "../src/gvcalc.f":247 802 {*fop_sf_comm}
     (nil))
(insn 875 874 876 18 (set (reg/f:DI 0 ax [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":247 81 {*movdi_internal}
     (nil))
(insn 876 875 877 18 (set (reg:SF 22 xmm1 [orig:389 _303 ] [389])
        (mem:SF (reg/f:DI 0 ax [800]) [1 *cl_be_558(D)+0 S4 A32])) "../src/gvcalc.f":247 127 {*movsf_internal}
     (nil))
(insn 877 876 878 18 (set (reg:SF 21 xmm0 [orig:390 _304 ] [390])
        (mult:SF (reg:SF 21 xmm0 [orig:388 _302 ] [388])
            (reg:SF 22 xmm1 [orig:389 _303 ] [389]))) "../src/gvcalc.f":247 802 {*fop_sf_comm}
     (nil))
(insn 878 877 879 18 (set (reg:SF 21 xmm0 [orig:391 _305 ] [391])
        (mult:SF (reg:SF 21 xmm0 [orig:390 _304 ] [390])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [1 w+0 S4 A32]))) "../src/gvcalc.f":247 802 {*fop_sf_comm}
     (nil))
(insn 879 878 880 18 (set (reg:V4SF 22 xmm1 [802])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":247 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 880 879 881 18 (parallel [
            (set (reg:SF 21 xmm0 [801])
                (neg:SF (reg:SF 21 xmm0 [orig:391 _305 ] [391])))
            (use (reg:V4SF 22 xmm1 [802]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":247 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:391 _305 ] [391]))
        (nil)))
(insn 881 880 882 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 res_be+0 S4 A32])
        (reg:SF 21 xmm0 [801])) "../src/gvcalc.f":247 127 {*movsf_internal}
     (nil))
(insn 882 881 883 18 (set (reg:SF 21 xmm0 [orig:392 res.17_306 ] [392])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [1 res+0 S4 A64])) "../src/gvcalc.f":258 127 {*movsf_internal}
     (nil))
(insn 883 882 884 18 (set (reg:SF 21 xmm0 [orig:393 _307 ] [393])
        (div:SF (reg:SF 21 xmm0 [orig:392 res.17_306 ] [392])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32]))) "../src/gvcalc.f":258 805 {*fop_sf_1}
     (nil))
(insn 884 883 885 18 (set (reg:V4SF 22 xmm1 [804])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":258 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 885 884 886 18 (parallel [
            (set (reg:SF 21 xmm0 [803])
                (neg:SF (reg:SF 21 xmm0 [orig:393 _307 ] [393])))
            (use (reg:V4SF 22 xmm1 [804]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":258 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:393 _307 ] [393]))
        (nil)))
(insn 886 885 887 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32])
        (reg:SF 21 xmm0 [803])) "../src/gvcalc.f":258 127 {*movsf_internal}
     (nil))
(insn 887 886 888 18 (set (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":259 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))
(insn 888 887 889 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32]))) "../src/gvcalc.f":259 51 {*cmpiusf}
     (nil))
(insn 889 888 890 18 (set (reg:QI 1 dx [orig:394 _308 ] [394])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":259 613 {*setcc_qi}
     (nil))
(insn 890 889 891 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])
            (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442]))) "../src/gvcalc.f":259 51 {*cmpiusf}
     (nil))
(insn 891 890 892 18 (set (reg:QI 0 ax [orig:395 _309 ] [395])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":259 613 {*setcc_qi}
     (nil))
(insn 892 891 893 18 (parallel [
            (set (reg:QI 0 ax [orig:396 _310 ] [396])
                (ior:QI (reg:QI 0 ax [orig:395 _309 ] [395])
                    (reg:QI 1 dx [orig:394 _308 ] [394])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":259 423 {*iorqi_1}
     (nil))
(insn 893 892 894 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:396 _310 ] [396])
            (const_int 0 [0]))) "../src/gvcalc.f":259 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 894 893 895 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 897)
            (pc))) "../src/gvcalc.f":259 617 {*jcc_1}
     (nil)
 -> 897)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 442
(note 895 894 896 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 896 895 897 19 (set (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32])) "../src/gvcalc.f":259 127 {*movsf_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442
;; lr  def 	 17 [flags] 397 398 399 443
(code_label 897 896 898 20 14 (nil) [1 uses])
(note 898 897 899 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 900 20 (set (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [1  S4 A32])) "../src/gvcalc.f":259 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.00000001490116119384765625e-1 [-0x0.cccccdp-3])
        (nil)))
(insn 900 899 901 20 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])
            (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443]))) "../src/gvcalc.f":259 51 {*cmpiusf}
     (nil))
(insn 901 900 902 20 (set (reg:QI 1 dx [orig:397 _311 ] [397])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":259 613 {*setcc_qi}
     (nil))
(insn 902 901 903 20 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443])
            (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443]))) "../src/gvcalc.f":259 51 {*cmpiusf}
     (nil))
(insn 903 902 904 20 (set (reg:QI 0 ax [orig:398 _312 ] [398])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/gvcalc.f":259 613 {*setcc_qi}
     (nil))
(insn 904 903 905 20 (parallel [
            (set (reg:QI 0 ax [orig:399 _313 ] [399])
                (ior:QI (reg:QI 0 ax [orig:398 _312 ] [398])
                    (reg:QI 1 dx [orig:397 _311 ] [397])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":259 423 {*iorqi_1}
     (nil))
(insn 905 904 906 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:399 _313 ] [399])
            (const_int 0 [0]))) "../src/gvcalc.f":259 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 906 905 907 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 908)
            (pc))) "../src/gvcalc.f":259 617 {*jcc_1}
     (nil)
 -> 908)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442 443

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442
;; lr  def 	 443
(note 907 906 9 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 9 907 908 21 (set (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443])
        (reg:SF 21 xmm0 [orig:442 M.2_389 ] [442])) "../src/gvcalc.f":259 127 {*movsf_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 443

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       20
;;              21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 443
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 443
;; lr  def 	 17 [flags] 400 401 805 806
(code_label 908 9 909 22 15 (nil) [1 uses])
(note 909 908 910 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 910 909 911 22 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32])
        (reg:SF 22 xmm1 [orig:443 M.3_390 ] [443])) "../src/gvcalc.f":259 127 {*movsf_internal}
     (nil))
(insn 911 910 912 22 (set (reg:SF 22 xmm1 [805])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32])) "../src/gvcalc.f":267 127 {*movsf_internal}
     (nil))
(insn 912 911 913 22 (set (reg:V4SF 21 xmm0 [806])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC10") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":267 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 913 912 914 22 (parallel [
            (set (reg:SF 21 xmm0 [orig:400 _314 ] [400])
                (abs:SF (reg:SF 22 xmm1 [805])))
            (use (reg:V4SF 21 xmm0 [806]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":267 470 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 22 xmm1 [805]))
        (nil)))
(insn 914 913 915 22 (set (reg:SF 22 xmm1 [orig:401 eps.18_315 ] [401])
        (mem/c:SF (symbol_ref:DI ("eps.3550") [flags 0x1c02]  <var_decl 0x1427eb360 eps>) [1 eps+0 S4 A32])) "../src/gvcalc.f":267 127 {*movsf_internal}
     (nil))
(insn 915 914 916 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:401 eps.18_315 ] [401])
            (reg:SF 21 xmm0 [orig:400 _314 ] [400]))) "../src/gvcalc.f":267 51 {*cmpiusf}
     (nil))
(jump_insn 916 915 920 22 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1110)
            (pc))) "../src/gvcalc.f":267 617 {*jcc_1}
     (nil)
 -> 1110)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 807
(note 920 916 921 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 23 (set (reg/f:DI 0 ax [807])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 240 [0xf0])) [11 lconv+0 S8 A64])) "../src/gvcalc.f":268 81 {*movdi_internal}
     (nil))
(insn 922 921 1111 23 (set (mem:SI (reg/f:DI 0 ax [807]) [12 *lconv_421(D)+0 S4 A32])
        (const_int 1 [0x1])) "../src/gvcalc.f":268 82 {*movsi_internal}
     (nil))
(jump_insn 1111 922 1112 23 (set (pc)
        (label_ref 970)) "../src/gvcalc.f":269 649 {jump}
     (nil)
 -> 970)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1112 1111 1110)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 27, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 808 809
(code_label 1110 1112 926 24 27 (nil) [1 uses])
(note 926 1110 927 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 24 (set (reg:SF 21 xmm0 [809])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 psi+0 S4 A32])) "../src/gvcalc.f":273 127 {*movsf_internal}
     (nil))
(insn 928 927 929 24 (set (reg:SF 21 xmm0 [808])
        (plus:SF (reg:SF 21 xmm0 [809])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -312 [0xfffffffffffffec8])) [1 dpsi+0 S4 A32]))) "../src/gvcalc.f":273 802 {*fop_sf_comm}
     (nil))
(insn 929 928 930 24 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 psi+0 S4 A32])
        (reg:SF 21 xmm0 [808])) "../src/gvcalc.f":273 127 {*movsf_internal}
     (nil))
(insn 930 929 1113 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":98 217 {*addsi_1}
     (nil))
(jump_insn 1113 930 1114 24 (set (pc)
        (label_ref 931)) "../src/gvcalc.f":98 649 {jump}
     (nil)
 -> 931)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1114 1113 1116)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 25, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1116 1114 1115 27 28 (nil) [1 uses])
(note 1115 1116 1117 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 1117 1115 934 27 (const_int 0 [0]) "../src/gvcalc.f":273 682 {nop}
     (nil))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 26, flags: (RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 810 811 812 813 814 815 816 817 818 819
(code_label 934 1117 935 25 3 (nil) [0 uses])
(note 935 934 936 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 25 (set (reg/f:DI 0 ax [810])
        (symbol_ref/f:DI ("*lC11") [flags 0x2]  <var_decl 0x1427f8cf0 *lC11>)) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 937 936 938 25 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 0 ax [810])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 938 937 939 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [2 dt_parm.4.common.line+0 S4 A64])
        (const_int 275 [0x113])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 939 938 940 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [2 dt_parm.4.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 940 939 941 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [2 dt_parm.4.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 941 940 942 25 (parallel [
            (set (reg:DI 0 ax [811])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 942 941 943 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [811])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 943 942 944 25 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 944 943 945 25 (parallel [
            (set (reg:DI 0 ax [812])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 945 944 946 25 (set (reg:SI 1 dx)
        (const_int 34 [0x22])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 946 945 947 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC12") [flags 0x2]  <var_decl 0x1427f8d80 *lC12>)) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 947 946 948 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [812])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 948 947 949 25 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 949 948 950 25 (parallel [
            (set (reg:DI 2 cx [813])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 950 949 951 25 (parallel [
            (set (reg:DI 0 ax [814])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 951 950 952 25 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 952 951 953 25 (set (reg:DI 4 si)
        (reg:DI 2 cx [813])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 953 952 954 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [814])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 954 953 955 25 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 955 954 956 25 (parallel [
            (set (reg:DI 2 cx [815])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -332 [0xfffffffffffffeb4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 956 955 957 25 (parallel [
            (set (reg:DI 0 ax [816])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 957 956 958 25 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 958 957 959 25 (set (reg:DI 4 si)
        (reg:DI 2 cx [815])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 959 958 960 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [816])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 960 959 961 25 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 961 960 962 25 (set (reg:DI 2 cx [817])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 192 [0xc0])) [10 cl+0 S8 A64])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 962 961 963 25 (parallel [
            (set (reg:DI 0 ax [818])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 963 962 964 25 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/gvcalc.f":275 82 {*movsi_internal}
     (nil))
(insn 964 963 965 25 (set (reg:DI 4 si)
        (reg:DI 2 cx [817])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(insn 965 964 966 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [818])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 966 965 967 25 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 967 966 968 25 (parallel [
            (set (reg:DI 0 ax [819])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":275 218 {*adddi_1}
     (nil))
(insn 968 967 969 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [819])) "../src/gvcalc.f":275 81 {*movdi_internal}
     (nil))
(call_insn 969 968 970 25 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/gvcalc.f":275 655 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 1, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              23 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872
(code_label 970 969 971 26 18 (nil) [1 uses])
(note 971 970 972 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 26 (set (reg:SF 21 xmm0 [820])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 res_vel+0 S4 A32])) "../src/gvcalc.f":281 127 {*movsf_internal}
     (nil))
(insn 973 972 974 26 (set (reg:SF 21 xmm0 [orig:402 _316 ] [402])
        (div:SF (reg:SF 21 xmm0 [820])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32]))) "../src/gvcalc.f":281 805 {*fop_sf_1}
     (nil))
(insn 974 973 975 26 (set (reg:V4SF 22 xmm1 [822])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":281 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 975 974 976 26 (parallel [
            (set (reg:SF 21 xmm0 [821])
                (neg:SF (reg:SF 21 xmm0 [orig:402 _316 ] [402])))
            (use (reg:V4SF 22 xmm1 [822]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":281 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:402 _316 ] [402]))
        (nil)))
(insn 976 975 977 26 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -316 [0xfffffffffffffec4])) [1 psi_vel+0 S4 A32])
        (reg:SF 21 xmm0 [821])) "../src/gvcalc.f":281 127 {*movsf_internal}
     (nil))
(insn 977 976 978 26 (set (reg:SF 21 xmm0 [823])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 res_omg+0 S4 A32])) "../src/gvcalc.f":282 127 {*movsf_internal}
     (nil))
(insn 978 977 979 26 (set (reg:SF 21 xmm0 [orig:403 _317 ] [403])
        (div:SF (reg:SF 21 xmm0 [823])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32]))) "../src/gvcalc.f":282 805 {*fop_sf_1}
     (nil))
(insn 979 978 980 26 (set (reg:V4SF 22 xmm1 [825])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":282 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 980 979 981 26 (parallel [
            (set (reg:SF 21 xmm0 [824])
                (neg:SF (reg:SF 21 xmm0 [orig:403 _317 ] [403])))
            (use (reg:V4SF 22 xmm1 [825]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":282 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:403 _317 ] [403]))
        (nil)))
(insn 981 980 982 26 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [1 psi_omg+0 S4 A32])
        (reg:SF 21 xmm0 [824])) "../src/gvcalc.f":282 127 {*movsf_internal}
     (nil))
(insn 982 981 983 26 (set (reg:SF 21 xmm0 [826])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 res_ch+0 S4 A32])) "../src/gvcalc.f":283 127 {*movsf_internal}
     (nil))
(insn 983 982 984 26 (set (reg:SF 21 xmm0 [orig:404 _318 ] [404])
        (div:SF (reg:SF 21 xmm0 [826])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32]))) "../src/gvcalc.f":283 805 {*fop_sf_1}
     (nil))
(insn 984 983 985 26 (set (reg:V4SF 22 xmm1 [828])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":283 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 985 984 986 26 (parallel [
            (set (reg:SF 21 xmm0 [827])
                (neg:SF (reg:SF 21 xmm0 [orig:404 _318 ] [404])))
            (use (reg:V4SF 22 xmm1 [828]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":283 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:404 _318 ] [404]))
        (nil)))
(insn 986 985 987 26 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -324 [0xfffffffffffffebc])) [1 psi_ch+0 S4 A32])
        (reg:SF 21 xmm0 [827])) "../src/gvcalc.f":283 127 {*movsf_internal}
     (nil))
(insn 987 986 988 26 (set (reg:SF 21 xmm0 [829])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 res_be+0 S4 A32])) "../src/gvcalc.f":284 127 {*movsf_internal}
     (nil))
(insn 988 987 989 26 (set (reg:SF 21 xmm0 [orig:405 _319 ] [405])
        (div:SF (reg:SF 21 xmm0 [829])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 res_psi+0 S4 A32]))) "../src/gvcalc.f":284 805 {*fop_sf_1}
     (nil))
(insn 989 988 990 26 (set (reg:V4SF 22 xmm1 [831])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [1  S16 A128])) "../src/gvcalc.f":284 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 990 989 991 26 (parallel [
            (set (reg:SF 21 xmm0 [830])
                (neg:SF (reg:SF 21 xmm0 [orig:405 _319 ] [405])))
            (use (reg:V4SF 22 xmm1 [831]))
            (clobber (reg:CC 17 flags))
        ]) "../src/gvcalc.f":284 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:405 _319 ] [405]))
        (nil)))
(insn 991 990 992 26 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [1 psi_be+0 S4 A32])
        (reg:SF 21 xmm0 [830])) "../src/gvcalc.f":284 127 {*movsf_internal}
     (nil))
(insn 992 991 993 26 (set (reg/f:DI 0 ax [832])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [10 gam_vel+0 S8 A64])) "../src/gvcalc.f":287 81 {*movdi_internal}
     (nil))
(insn 993 992 994 26 (set (reg:SF 22 xmm1 [orig:406 _320 ] [406])
        (mem:SF (reg/f:DI 0 ax [832]) [1 *gam_vel_511(D)+0 S4 A32])) "../src/gvcalc.f":287 127 {*movsf_internal}
     (nil))
(insn 994 993 995 26 (set (reg:SF 21 xmm0 [833])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])) "../src/gvcalc.f":287 127 {*movsf_internal}
     (nil))
(insn 995 994 996 26 (set (reg:SF 21 xmm0 [orig:407 _321 ] [407])
        (mult:SF (reg:SF 21 xmm0 [833])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -316 [0xfffffffffffffec4])) [1 psi_vel+0 S4 A32]))) "../src/gvcalc.f":287 802 {*fop_sf_comm}
     (nil))
(insn 996 995 997 26 (set (reg:SF 21 xmm0 [orig:408 _322 ] [408])
        (plus:SF (reg:SF 21 xmm0 [orig:407 _321 ] [407])
            (reg:SF 22 xmm1 [orig:406 _320 ] [406]))) "../src/gvcalc.f":287 802 {*fop_sf_comm}
     (nil))
(insn 997 996 998 26 (set (reg/f:DI 0 ax [834])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [10 gam_vel+0 S8 A64])) "../src/gvcalc.f":287 81 {*movdi_internal}
     (nil))
(insn 998 997 999 26 (set (mem:SF (reg/f:DI 0 ax [834]) [1 *gam_vel_511(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:408 _322 ] [408])) "../src/gvcalc.f":287 127 {*movsf_internal}
     (nil))
(insn 999 998 1000 26 (set (reg/f:DI 0 ax [835])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [10 gam_omg+0 S8 A64])) "../src/gvcalc.f":288 81 {*movdi_internal}
     (nil))
(insn 1000 999 1001 26 (set (reg:SF 22 xmm1 [orig:409 _323 ] [409])
        (mem:SF (reg/f:DI 0 ax [835]) [1 *gam_omg_513(D)+0 S4 A32])) "../src/gvcalc.f":288 127 {*movsf_internal}
     (nil))
(insn 1001 1000 1002 26 (set (reg:SF 21 xmm0 [836])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])) "../src/gvcalc.f":288 127 {*movsf_internal}
     (nil))
(insn 1002 1001 1003 26 (set (reg:SF 21 xmm0 [orig:410 _324 ] [410])
        (mult:SF (reg:SF 21 xmm0 [836])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])) [1 psi_omg+0 S4 A32]))) "../src/gvcalc.f":288 802 {*fop_sf_comm}
     (nil))
(insn 1003 1002 1004 26 (set (reg:SF 21 xmm0 [orig:411 _325 ] [411])
        (plus:SF (reg:SF 21 xmm0 [orig:410 _324 ] [410])
            (reg:SF 22 xmm1 [orig:409 _323 ] [409]))) "../src/gvcalc.f":288 802 {*fop_sf_comm}
     (nil))
(insn 1004 1003 1005 26 (set (reg/f:DI 0 ax [837])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [10 gam_omg+0 S8 A64])) "../src/gvcalc.f":288 81 {*movdi_internal}
     (nil))
(insn 1005 1004 1006 26 (set (mem:SF (reg/f:DI 0 ax [837]) [1 *gam_omg_513(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:411 _325 ] [411])) "../src/gvcalc.f":288 127 {*movsf_internal}
     (nil))
(insn 1006 1005 1007 26 (set (reg:SF 21 xmm0 [838])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])) "../src/gvcalc.f":289 127 {*movsf_internal}
     (nil))
(insn 1007 1006 1008 26 (set (reg:SF 21 xmm0 [orig:412 _326 ] [412])
        (mult:SF (reg:SF 21 xmm0 [838])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -324 [0xfffffffffffffebc])) [1 psi_ch+0 S4 A32]))) "../src/gvcalc.f":289 802 {*fop_sf_comm}
     (nil))
(insn 1008 1007 1009 26 (set (reg/f:DI 0 ax [839])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 96 [0x60])) [10 gam_ch+0 S8 A64])) "../src/gvcalc.f":289 81 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 26 (set (mem:SF (reg/f:DI 0 ax [839]) [1 *gam_ch_613(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:412 _326 ] [412])) "../src/gvcalc.f":289 127 {*movsf_internal}
     (nil))
(insn 1010 1009 1011 26 (set (reg:SF 21 xmm0 [840])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 gam_psi+0 S4 A32])) "../src/gvcalc.f":290 127 {*movsf_internal}
     (nil))
(insn 1011 1010 1012 26 (set (reg:SF 21 xmm0 [orig:413 _327 ] [413])
        (mult:SF (reg:SF 21 xmm0 [840])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -328 [0xfffffffffffffeb8])) [1 psi_be+0 S4 A32]))) "../src/gvcalc.f":290 802 {*fop_sf_comm}
     (nil))
(insn 1012 1011 1013 26 (set (reg/f:DI 0 ax [841])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 104 [0x68])) [10 gam_be+0 S8 A64])) "../src/gvcalc.f":290 81 {*movdi_internal}
     (nil))
(insn 1013 1012 1014 26 (set (mem:SF (reg/f:DI 0 ax [841]) [1 *gam_be_615(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:413 _327 ] [413])) "../src/gvcalc.f":290 127 {*movsf_internal}
     (nil))
(insn 1014 1013 1015 26 (set (reg/f:DI 0 ax [842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 120 [0x78])) [10 va_vel+0 S8 A64])) "../src/gvcalc.f":292 81 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 26 (set (reg:SF 22 xmm1 [orig:414 _328 ] [414])
        (mem:SF (reg/f:DI 0 ax [842]) [1 *va_vel_485(D)+0 S4 A32])) "../src/gvcalc.f":292 127 {*movsf_internal}
     (nil))
(insn 1016 1015 1017 26 (set (reg:SF 21 xmm0 [843])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 va_psi+0 S4 A32])) "../src/gvcalc.f":292 127 {*movsf_internal}
     (nil))
(insn 1017 1016 1018 26 (set (reg:SF 21 xmm0 [orig:415 _329 ] [415])
        (mult:SF (reg:SF 21 xmm0 [843])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -316 [0xfffffffffffffec4])) [1 psi_vel+0 S4 A32]))) "../src/gvcalc.f":292 802 {*fop_sf_comm}
     (nil))
(insn 1018 1017 1019 26 (set (reg:SF 21 xmm0 [orig:416 _330 ] [416])
        (plus:SF (reg:SF 21 xmm0 [orig:415 _329 ] [415])
            (reg:SF 22 xmm1 [orig:414 _328 ] [414]))) "../src/gvcalc.f":292 802 {*fop_sf_comm}
     (nil))
(insn 1019 1018 1020 26 (set (reg/f:DI 0 ax [844])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 120 [0x78])) [10 va_vel+0 S8 A64])) "../src/gvcalc.f":292 81 {*movdi_internal}
     (nil))
(insn 1020 1019 1021 26 (set (mem:SF (reg/f:DI 0 ax [844]) [1 *va_vel_485(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:416 _330 ] [416])) "../src/gvcalc.f":292 127 {*movsf_internal}
     (nil))
(insn 1021 1020 1022 26 (set (reg/f:DI 0 ax [845])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 128 [0x80])) [10 va_omg+0 S8 A64])) "../src/gvcalc.f":293 81 {*movdi_internal}
     (nil))
(insn 1022 1021 1023 26 (set (reg:SF 22 xmm1 [orig:417 _331 ] [417])
        (mem:SF (reg/f:DI 0 ax [845]) [1 *va_omg_487(D)+0 S4 A32])) "../src/gvcalc.f":293 127 {*movsf_internal}
     (nil))
(insn 1023 1022 1024 26 (set (reg:SF 21 xmm0 [846])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 va_psi+0 S4 A32])) "../src/gvcalc.f":293 127 {*movsf_internal}
     (nil))
(insn 1024 1023 1025 26 (set (reg:SF 21 xmm0 [orig:418 _332 ] [418])
        (mult:SF (reg:SF 21 xmm0 [846])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])) [1 psi_omg+0 S4 A32]))) "../src/gvcalc.f":293 802 {*fop_sf_comm}
     (nil))
(insn 1025 1024 1026 26 (set (reg:SF 21 xmm0 [orig:419 _333 ] [419])
        (plus:SF (reg:SF 21 xmm0 [orig:418 _332 ] [418])
            (reg:SF 22 xmm1 [orig:417 _331 ] [417]))) "../src/gvcalc.f":293 802 {*fop_sf_comm}
     (nil))
(insn 1026 1025 1027 26 (set (reg/f:DI 0 ax [847])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 128 [0x80])) [10 va_omg+0 S8 A64])) "../src/gvcalc.f":293 81 {*movdi_internal}
     (nil))
(insn 1027 1026 1028 26 (set (mem:SF (reg/f:DI 0 ax [847]) [1 *va_omg_487(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:419 _333 ] [419])) "../src/gvcalc.f":293 127 {*movsf_internal}
     (nil))
(insn 1028 1027 1029 26 (set (reg:SF 21 xmm0 [848])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 va_psi+0 S4 A32])) "../src/gvcalc.f":294 127 {*movsf_internal}
     (nil))
(insn 1029 1028 1030 26 (set (reg:SF 21 xmm0 [orig:420 _334 ] [420])
        (mult:SF (reg:SF 21 xmm0 [848])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -324 [0xfffffffffffffebc])) [1 psi_ch+0 S4 A32]))) "../src/gvcalc.f":294 802 {*fop_sf_comm}
     (nil))
(insn 1030 1029 1031 26 (set (reg/f:DI 0 ax [849])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 136 [0x88])) [10 va_ch+0 S8 A64])) "../src/gvcalc.f":294 81 {*movdi_internal}
     (nil))
(insn 1031 1030 1032 26 (set (mem:SF (reg/f:DI 0 ax [849]) [1 *va_ch_619(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:420 _334 ] [420])) "../src/gvcalc.f":294 127 {*movsf_internal}
     (nil))
(insn 1032 1031 1033 26 (set (reg:SF 21 xmm0 [850])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 va_psi+0 S4 A32])) "../src/gvcalc.f":295 127 {*movsf_internal}
     (nil))
(insn 1033 1032 1034 26 (set (reg:SF 21 xmm0 [orig:421 _335 ] [421])
        (mult:SF (reg:SF 21 xmm0 [850])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -328 [0xfffffffffffffeb8])) [1 psi_be+0 S4 A32]))) "../src/gvcalc.f":295 802 {*fop_sf_comm}
     (nil))
(insn 1034 1033 1035 26 (set (reg/f:DI 0 ax [851])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 144 [0x90])) [10 va_be+0 S8 A64])) "../src/gvcalc.f":295 81 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 26 (set (mem:SF (reg/f:DI 0 ax [851]) [1 *va_be_621(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:421 _335 ] [421])) "../src/gvcalc.f":295 127 {*movsf_internal}
     (nil))
(insn 1036 1035 1037 26 (set (reg/f:DI 0 ax [852])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 160 [0xa0])) [10 vt_vel+0 S8 A64])) "../src/gvcalc.f":297 81 {*movdi_internal}
     (nil))
(insn 1037 1036 1038 26 (set (reg:SF 22 xmm1 [orig:422 _336 ] [422])
        (mem:SF (reg/f:DI 0 ax [852]) [1 *vt_vel_492(D)+0 S4 A32])) "../src/gvcalc.f":297 127 {*movsf_internal}
     (nil))
(insn 1038 1037 1039 26 (set (reg:SF 21 xmm0 [853])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32])) "../src/gvcalc.f":297 127 {*movsf_internal}
     (nil))
(insn 1039 1038 1040 26 (set (reg:SF 21 xmm0 [orig:423 _337 ] [423])
        (mult:SF (reg:SF 21 xmm0 [853])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -316 [0xfffffffffffffec4])) [1 psi_vel+0 S4 A32]))) "../src/gvcalc.f":297 802 {*fop_sf_comm}
     (nil))
(insn 1040 1039 1041 26 (set (reg:SF 21 xmm0 [orig:424 _338 ] [424])
        (plus:SF (reg:SF 21 xmm0 [orig:423 _337 ] [423])
            (reg:SF 22 xmm1 [orig:422 _336 ] [422]))) "../src/gvcalc.f":297 802 {*fop_sf_comm}
     (nil))
(insn 1041 1040 1042 26 (set (reg/f:DI 0 ax [854])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 160 [0xa0])) [10 vt_vel+0 S8 A64])) "../src/gvcalc.f":297 81 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 26 (set (mem:SF (reg/f:DI 0 ax [854]) [1 *vt_vel_492(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:424 _338 ] [424])) "../src/gvcalc.f":297 127 {*movsf_internal}
     (nil))
(insn 1043 1042 1044 26 (set (reg/f:DI 0 ax [855])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 168 [0xa8])) [10 vt_omg+0 S8 A64])) "../src/gvcalc.f":298 81 {*movdi_internal}
     (nil))
(insn 1044 1043 1045 26 (set (reg:SF 22 xmm1 [orig:425 _339 ] [425])
        (mem:SF (reg/f:DI 0 ax [855]) [1 *vt_omg_494(D)+0 S4 A32])) "../src/gvcalc.f":298 127 {*movsf_internal}
     (nil))
(insn 1045 1044 1046 26 (set (reg:SF 21 xmm0 [856])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32])) "../src/gvcalc.f":298 127 {*movsf_internal}
     (nil))
(insn 1046 1045 1047 26 (set (reg:SF 21 xmm0 [orig:426 _340 ] [426])
        (mult:SF (reg:SF 21 xmm0 [856])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])) [1 psi_omg+0 S4 A32]))) "../src/gvcalc.f":298 802 {*fop_sf_comm}
     (nil))
(insn 1047 1046 1048 26 (set (reg:SF 21 xmm0 [orig:427 _341 ] [427])
        (plus:SF (reg:SF 21 xmm0 [orig:426 _340 ] [426])
            (reg:SF 22 xmm1 [orig:425 _339 ] [425]))) "../src/gvcalc.f":298 802 {*fop_sf_comm}
     (nil))
(insn 1048 1047 1049 26 (set (reg/f:DI 0 ax [857])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 168 [0xa8])) [10 vt_omg+0 S8 A64])) "../src/gvcalc.f":298 81 {*movdi_internal}
     (nil))
(insn 1049 1048 1050 26 (set (mem:SF (reg/f:DI 0 ax [857]) [1 *vt_omg_494(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:427 _341 ] [427])) "../src/gvcalc.f":298 127 {*movsf_internal}
     (nil))
(insn 1050 1049 1051 26 (set (reg:SF 21 xmm0 [858])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32])) "../src/gvcalc.f":299 127 {*movsf_internal}
     (nil))
(insn 1051 1050 1052 26 (set (reg:SF 21 xmm0 [orig:428 _342 ] [428])
        (mult:SF (reg:SF 21 xmm0 [858])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -324 [0xfffffffffffffebc])) [1 psi_ch+0 S4 A32]))) "../src/gvcalc.f":299 802 {*fop_sf_comm}
     (nil))
(insn 1052 1051 1053 26 (set (reg/f:DI 0 ax [859])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 176 [0xb0])) [10 vt_ch+0 S8 A64])) "../src/gvcalc.f":299 81 {*movdi_internal}
     (nil))
(insn 1053 1052 1054 26 (set (mem:SF (reg/f:DI 0 ax [859]) [1 *vt_ch_625(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:428 _342 ] [428])) "../src/gvcalc.f":299 127 {*movsf_internal}
     (nil))
(insn 1054 1053 1055 26 (set (reg:SF 21 xmm0 [860])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 vt_psi+0 S4 A32])) "../src/gvcalc.f":300 127 {*movsf_internal}
     (nil))
(insn 1055 1054 1056 26 (set (reg:SF 21 xmm0 [orig:429 _343 ] [429])
        (mult:SF (reg:SF 21 xmm0 [860])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -328 [0xfffffffffffffeb8])) [1 psi_be+0 S4 A32]))) "../src/gvcalc.f":300 802 {*fop_sf_comm}
     (nil))
(insn 1056 1055 1057 26 (set (reg/f:DI 0 ax [861])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 184 [0xb8])) [10 vt_be+0 S8 A64])) "../src/gvcalc.f":300 81 {*movdi_internal}
     (nil))
(insn 1057 1056 1058 26 (set (mem:SF (reg/f:DI 0 ax [861]) [1 *vt_be_627(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:429 _343 ] [429])) "../src/gvcalc.f":300 127 {*movsf_internal}
     (nil))
(insn 1058 1057 1059 26 (set (reg/f:DI 0 ax [862])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":302 81 {*movdi_internal}
     (nil))
(insn 1059 1058 1060 26 (set (reg:SF 22 xmm1 [orig:430 _344 ] [430])
        (mem:SF (reg/f:DI 0 ax [862]) [1 *cl_vel_554(D)+0 S4 A32])) "../src/gvcalc.f":302 127 {*movsf_internal}
     (nil))
(insn 1060 1059 1061 26 (set (reg:SF 21 xmm0 [863])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])) "../src/gvcalc.f":302 127 {*movsf_internal}
     (nil))
(insn 1061 1060 1062 26 (set (reg:SF 21 xmm0 [orig:431 _345 ] [431])
        (mult:SF (reg:SF 21 xmm0 [863])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -316 [0xfffffffffffffec4])) [1 psi_vel+0 S4 A32]))) "../src/gvcalc.f":302 802 {*fop_sf_comm}
     (nil))
(insn 1062 1061 1063 26 (set (reg:SF 21 xmm0 [orig:432 _346 ] [432])
        (plus:SF (reg:SF 21 xmm0 [orig:431 _345 ] [431])
            (reg:SF 22 xmm1 [orig:430 _344 ] [430]))) "../src/gvcalc.f":302 802 {*fop_sf_comm}
     (nil))
(insn 1063 1062 1064 26 (set (reg/f:DI 0 ax [864])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 200 [0xc8])) [10 cl_vel+0 S8 A64])) "../src/gvcalc.f":302 81 {*movdi_internal}
     (nil))
(insn 1064 1063 1065 26 (set (mem:SF (reg/f:DI 0 ax [864]) [1 *cl_vel_554(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:432 _346 ] [432])) "../src/gvcalc.f":302 127 {*movsf_internal}
     (nil))
(insn 1065 1064 1066 26 (set (reg/f:DI 0 ax [865])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":303 81 {*movdi_internal}
     (nil))
(insn 1066 1065 1067 26 (set (reg:SF 22 xmm1 [orig:433 _347 ] [433])
        (mem:SF (reg/f:DI 0 ax [865]) [1 *cl_omg_556(D)+0 S4 A32])) "../src/gvcalc.f":303 127 {*movsf_internal}
     (nil))
(insn 1067 1066 1068 26 (set (reg:SF 21 xmm0 [866])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])) "../src/gvcalc.f":303 127 {*movsf_internal}
     (nil))
(insn 1068 1067 1069 26 (set (reg:SF 21 xmm0 [orig:434 _348 ] [434])
        (mult:SF (reg:SF 21 xmm0 [866])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])) [1 psi_omg+0 S4 A32]))) "../src/gvcalc.f":303 802 {*fop_sf_comm}
     (nil))
(insn 1069 1068 1070 26 (set (reg:SF 21 xmm0 [orig:435 _349 ] [435])
        (plus:SF (reg:SF 21 xmm0 [orig:434 _348 ] [434])
            (reg:SF 22 xmm1 [orig:433 _347 ] [433]))) "../src/gvcalc.f":303 802 {*fop_sf_comm}
     (nil))
(insn 1070 1069 1071 26 (set (reg/f:DI 0 ax [867])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 208 [0xd0])) [10 cl_omg+0 S8 A64])) "../src/gvcalc.f":303 81 {*movdi_internal}
     (nil))
(insn 1071 1070 1072 26 (set (mem:SF (reg/f:DI 0 ax [867]) [1 *cl_omg_556(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:435 _349 ] [435])) "../src/gvcalc.f":303 127 {*movsf_internal}
     (nil))
(insn 1072 1071 1073 26 (set (reg:SF 21 xmm0 [868])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])) "../src/gvcalc.f":304 127 {*movsf_internal}
     (nil))
(insn 1073 1072 1074 26 (set (reg:SF 21 xmm0 [orig:436 _350 ] [436])
        (mult:SF (reg:SF 21 xmm0 [868])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -324 [0xfffffffffffffebc])) [1 psi_ch+0 S4 A32]))) "../src/gvcalc.f":304 802 {*fop_sf_comm}
     (nil))
(insn 1074 1073 1075 26 (set (reg/f:DI 0 ax [869])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 216 [0xd8])) [10 cl_ch+0 S8 A64])) "../src/gvcalc.f":304 81 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 26 (set (mem:SF (reg/f:DI 0 ax [869]) [1 *cl_ch_631(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:436 _350 ] [436])) "../src/gvcalc.f":304 127 {*movsf_internal}
     (nil))
(insn 1076 1075 1077 26 (set (reg/f:DI 0 ax [870])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":305 81 {*movdi_internal}
     (nil))
(insn 1077 1076 1078 26 (set (reg:SF 22 xmm1 [orig:437 _351 ] [437])
        (mem:SF (reg/f:DI 0 ax [870]) [1 *cl_be_558(D)+0 S4 A32])) "../src/gvcalc.f":305 127 {*movsf_internal}
     (nil))
(insn 1078 1077 1079 26 (set (reg:SF 21 xmm0 [871])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 cl_psi+0 S4 A32])) "../src/gvcalc.f":305 127 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 26 (set (reg:SF 21 xmm0 [orig:438 _352 ] [438])
        (mult:SF (reg:SF 21 xmm0 [871])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -328 [0xfffffffffffffeb8])) [1 psi_be+0 S4 A32]))) "../src/gvcalc.f":305 802 {*fop_sf_comm}
     (nil))
(insn 1080 1079 1081 26 (set (reg:SF 21 xmm0 [orig:439 _353 ] [439])
        (plus:SF (reg:SF 21 xmm0 [orig:438 _352 ] [438])
            (reg:SF 22 xmm1 [orig:437 _351 ] [437]))) "../src/gvcalc.f":305 802 {*fop_sf_comm}
     (nil))
(insn 1081 1080 1082 26 (set (reg/f:DI 0 ax [872])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 224 [0xe0])) [10 cl_be+0 S8 A64])) "../src/gvcalc.f":305 81 {*movdi_internal}
     (nil))
(insn 1082 1081 1104 26 (set (mem:SF (reg/f:DI 0 ax [872]) [1 *cl_be_558(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:439 _353 ] [439])) "../src/gvcalc.f":305 127 {*movsf_internal}
     (nil))
(insn 1104 1082 1118 26 (const_int 0 [0]) "../src/gvcalc.f":307 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1118 1104 0 NOTE_INSN_DELETED)
