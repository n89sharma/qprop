
;; Function motorq (motorq_, funcdef_no=0, decl_uid=3500, cgraph_uid=0, symbol_order=0)

motorq (real(kind=4) & restrict omega, real(kind=4) & restrict volt, integer(kind=4) & restrict imotype, real(kind=4)[0:] * restrict parmot, integer(kind=4) & restrict nmpar, real(kind=4) & restrict q, real(kind=4) & restrict q_omega, real(kind=4) & restrict q_volt, real(kind=4) & restrict i, real(kind=4) & restrict i_omega, real(kind=4) & restrict i_volt)
{
  struct __st_parameter_dt dt_parm.4;
  real(kind=4) D.3554;
  real(kind=4) D.3553;
  struct __st_parameter_dt dt_parm.3;
  real(kind=4) D.3550;
  real(kind=4) M.2;
  real(kind=4) D.3547;
  real(kind=4) D.3546;
  real(kind=4) D.3545;
  real(kind=4) D.3544;
  logical(kind=1) D.3543;
  struct __st_parameter_dt dt_parm.1;
  struct __st_parameter_dt dt_parm.0;
  real(kind=4) zloadi_omega;
  real(kind=4) zloadi2;
  real(kind=4) zloadi1;
  real(kind=4) zloadi0;
  real(kind=4) zloadi;
  real(kind=4) vm_omega;
  real(kind=4) vm;
  real(kind=4) tau;
  real(kind=4) rmotor2;
  real(kind=4) rmotor0;
  real(kind=4) rmotor;
  real(kind=4) res_volt;
  real(kind=4) res_omega;
  real(kind=4) res_i;
  real(kind=4) res;
  static real(kind=4) pi = 3.141592502593994140625e+0;
  real(kind=4) kvrpm;
  real(kind=4) kvrad;
  real(kind=4) kqrpm;
  real(kind=4) kqrad;
  integer(kind=4) iter;
  static real(kind=4) eps = 9.999999974752427078783512115478515625e-7;
  integer(kind=4) _1;
  integer(kind=4) _2;
  real(kind=4) pi.7_3;
  real(kind=4) _4;
  real(kind=4) _5;
  real(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  real(kind=4) _10;
  real(kind=4) _11;
  real(kind=4) _12;
  real(kind=4) _13;
  real(kind=4) _14;
  real(kind=4) _15;
  real(kind=4) _16;
  real(kind=4) _17;
  real(kind=4) _18;
  real(kind=4) _19;
  real(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  real(kind=4) pi.8_23;
  real(kind=4) _24;
  real(kind=4) pi.9_25;
  real(kind=4) _26;
  real(kind=4) _27;
  real(kind=4) _28;
  real(kind=4) _29;
  real(kind=4) _30;
  real(kind=4) _31;
  real(kind=4) _32;
  real(kind=4) _33;
  real(kind=4) _34;
  real(kind=4) _35;
  real(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) _41;
  real(kind=4) _42;
  real(kind=4) _43;
  real(kind=4) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  real(kind=4) _48;
  real(kind=4) _49;
  real(kind=4) _50;
  real(kind=4) _51;
  real(kind=4) _52;
  real(kind=4) _53;
  real(kind=4) _54;
  logical(kind=1) _55;
  logical(kind=1) _56;
  logical(kind=1) _57;
  real(kind=4) _58;
  real(kind=4) eps.10_59;
  real(kind=4) _60;
  real(kind=4) _61;
  real(kind=4) _62;
  real(kind=4) _63;
  real(kind=4) _64;
  real(kind=4) _65;
  real(kind=4) _66;
  real(kind=4) _67;
  real(kind=4) _68;
  real(kind=4) _69;
  real(kind=4) _70;
  real(kind=4) _71;
  real(kind=4) _72;
  real(kind=4) _73;
  real(kind=4) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  real(kind=4) _78;
  real(kind=4) _79;
  real(kind=4) _80;
  real(kind=4) _81;
  real(kind=4) M.2_86;
  logical(kind=1) _123;
  real(kind=4) _124;
  real(kind=4) _125;
  real(kind=4) _127;
  real(kind=4) _128;
  real(kind=4) M.2_131;
  real(kind=4) _132;
  real(kind=4) M.2_133;
  real(kind=4) _149;
  real(kind=4) _150;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *imotype_91(D);
  if (_1 == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = *nmpar_102(D);
  if (_2 <= 2)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  dt_parm.0.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.0.common.line = 53;
  dt_parm.0.common.flags = 128;
  dt_parm.0.common.unit = 6;
  _gfortran_st_write (&dt_parm.0);
  _gfortran_transfer_character_write (&dt_parm.0, &"MOTORQ: Motor model 1 needs  3  parameters."[1]{lb: 1 sz: 1}, 43);
  _gfortran_transfer_character_write (&dt_parm.0, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);
  _gfortran_transfer_integer_write (&dt_parm.0, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.0);
  dt_parm.0 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  rmotor_170 = *parmot_103(D)[0];
  zloadi_171 = *parmot_103(D)[1];
  kvrpm_172 = *parmot_103(D)[2];
  pi.7_3 = pi;
  _4 = kvrpm_172 * pi.7_3;
  kvrad_173 = _4 / 3.0e+1;
  kqrad_174 = kvrad_173;
  _5 = *omega_115(D);
  vm_175 = _5 / kvrad_173;
  vm_omega_176 = 1.0e+0 / kvrad_173;
  _6 = *volt_118(D);
  _7 = _6 - vm_175;
  _8 = ((_7));
  _9 = _8 / rmotor_170;
  *i_119(D) = _9;
  _10 = vm_omega_176 / rmotor_170;
  _11 = -_10;
  *i_omega_145(D) = _11;
  _12 = 1.0e+0 / rmotor_170;
  *i_volt_147(D) = _12;
  _13 = *i_119(D);
  _14 = _13 - zloadi_171;
  _15 = ((_14));
  _16 = _15 / kqrad_174;
  *q_153(D) = _16;
  _17 = *i_omega_145(D);
  _18 = _17 / kqrad_174;
  *q_omega_155(D) = _18;
  _19 = *i_volt_147(D);
  _20 = _19 / kqrad_174;
  *q_volt_157(D) = _20;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 6, loop depth 0
;;    pred:       2
  _21 = *imotype_91(D);
  if (_21 == 2)
    goto <bb 7>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       7
;;                19

;;   basic block 7, loop depth 0
;;    pred:       6
  _22 = *nmpar_102(D);
  if (_22 <= 2)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  dt_parm.1.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.1.common.line = 79;
  dt_parm.1.common.flags = 128;
  dt_parm.1.common.unit = 6;
  _gfortran_st_write (&dt_parm.1);
  _gfortran_transfer_character_write (&dt_parm.1, &"MOTORQ: Motor model 2 needs at least 3 parameters."[1]{lb: 1 sz: 1}, 50);
  _gfortran_transfer_character_write (&dt_parm.1, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);
  _gfortran_transfer_integer_write (&dt_parm.1, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.1);
  dt_parm.1 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       7
  rmotor0_104 = *parmot_103(D)[0];
  zloadi0_105 = *parmot_103(D)[1];
  kvrpm_106 = *parmot_103(D)[2];
  kqrpm_107 = *parmot_103(D)[3];
  tau_108 = *parmot_103(D)[4];
  zloadi1_109 = *parmot_103(D)[5];
  zloadi2_110 = *parmot_103(D)[6];
  rmotor2_111 = *parmot_103(D)[7];
  if (kqrpm_107 == 0.0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  kqrpm_112 = kvrpm_106;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       9
;;                10
  # kqrpm_83 = PHI <kqrpm_107(9), kqrpm_112(10)>
  pi.8_23 = pi;
  _24 = kvrpm_106 * pi.8_23;
  kvrad_113 = _24 / 3.0e+1;
  pi.9_25 = pi;
  _26 = kqrpm_83 * pi.9_25;
  kqrad_114 = _26 / 3.0e+1;
  _27 = *omega_115(D);
  _28 = tau_108 * _27;
  _29 = _28 + 1.0e+0;
  _30 = ((_29));
  _31 = *omega_115(D);
  _32 = _30 * _31;
  vm_116 = _32 / kvrad_113;
  _33 = *omega_115(D);
  _34 = tau_108 * _33;
  _35 = _34 * 2.0e+0;
  _36 = _35 + 1.0e+0;
  _37 = ((_36));
  vm_omega_117 = _37 / kvrad_113;
  _38 = *volt_118(D);
  _39 = _38 - vm_116;
  _40 = ((_39));
  _41 = _40 / rmotor0_104;
  *i_119(D) = _41;
  iter_121 = 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       11
;;                16
  # iter_82 = PHI <iter_121(11), iter_134(16)>
  # res_i_84 = PHI <res_i_122(D)(11), res_i_129(16)>
  _123 = iter_82 > 10;
  if (_123 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       17
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  _124 = *i_119(D);
  _125 = _124 * _124;
  _42 = *i_119(D);
  _43 = rmotor2_111 * _125;
  _44 = rmotor0_104 + _43;
  _45 = ((_44));
  _46 = _42 * _45;
  _47 = vm_116 + _46;
  _48 = *volt_118(D);
  res_126 = _47 - _48;
  _127 = *i_119(D);
  _128 = _127 * _127;
  _49 = rmotor2_111 * 3.0e+0;
  _50 = _128 * _49;
  res_i_129 = rmotor0_104 + _50;
  _51 = *i_119(D);
  _52 = res_126 / res_i_129;
  _53 = _51 - _52;
  *i_119(D) = _53;
  M.2_131 = 1.0e+0;
  _54 = *volt_118(D);
  _132 = ABS_EXPR <_54>;
  _55 = _132 > M.2_131;
  _56 = M.2_131 unord M.2_131;
  _57 = _55 | _56;
  if (_57 != 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 1
;;    pred:       13
  M.2_133 = _132;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       13
;;                14
  # M.2_86 = PHI <M.2_131(13), M.2_133(14)>
  _58 = ABS_EXPR <res_126>;
  eps.10_59 = eps;
  _60 = M.2_86 * eps.10_59;
  if (_58 < _60)
    goto <bb 18>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       18
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  iter_134 = iter_82 + 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 17, loop depth 0
;;    pred:       12
  dt_parm.3.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.3.common.line = 108;
  dt_parm.3.common.flags = 128;
  dt_parm.3.common.unit = 6;
  _gfortran_st_write (&dt_parm.3);
  _gfortran_transfer_character_write (&dt_parm.3, &"MOTOR: Current convergence failed"[1]{lb: 1 sz: 1}, 33);
  _gfortran_st_write_done (&dt_parm.3);
  dt_parm.3 ={v} {CLOBBER};
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       15
;;                17
  # res_i_85 = PHI <res_i_129(15), res_i_84(17)>
  res_omega_143 = vm_omega_117;
  res_volt_144 = -1.0e+0;
  _61 = res_omega_143 / res_i_85;
  _62 = -_61;
  *i_omega_145(D) = _62;
  _63 = res_volt_144 / res_i_85;
  _64 = -_63;
  *i_volt_147(D) = _64;
  _149 = *omega_115(D);
  _150 = _149 * _149;
  _65 = *omega_115(D);
  _66 = zloadi1_109 * _65;
  _67 = zloadi0_105 + _66;
  _68 = zloadi2_110 * _150;
  zloadi_151 = _67 + _68;
  _69 = *omega_115(D);
  _70 = zloadi2_110 * _69;
  _71 = _70 * 2.0e+0;
  zloadi_omega_152 = zloadi1_109 + _71;
  _72 = *i_119(D);
  _73 = _72 - zloadi_151;
  _74 = ((_73));
  _75 = _74 / kqrad_114;
  *q_153(D) = _75;
  _76 = *i_omega_145(D);
  _77 = _76 - zloadi_omega_152;
  _78 = ((_77));
  _79 = _78 / kqrad_114;
  *q_omega_155(D) = _79;
  _80 = *i_volt_147(D);
  _81 = _80 / kqrad_114;
  *q_volt_157(D) = _81;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       6
  dt_parm.4.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.4.common.line = 124;
  dt_parm.4.common.flags = 128;
  dt_parm.4.common.unit = 6;
  _gfortran_st_write (&dt_parm.4);
  _gfortran_transfer_character_write (&dt_parm.4, &"MOTORQ: Undefined motor type index:"[1]{lb: 1 sz: 1}, 35);
  _gfortran_transfer_integer_write (&dt_parm.4, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.4);
  dt_parm.4 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 20, loop depth 0
;;    pred:       5
;;                18
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L27> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (pi.7_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (pi.8_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (pi.9_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (eps.10_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (iter_82 - 82 )
Partition 83 (kqrpm_83 - 83 )
Partition 84 (res_i_84 - 84 )
Partition 85 (res_i_85 - 85 )
Partition 86 (M.2_86 - 86 )
Partition 91 (imotype_91(D) - 91 )
Partition 102 (nmpar_102(D) - 102 )
Partition 103 (parmot_103(D) - 103 )
Partition 104 (rmotor0_104 - 104 )
Partition 105 (zloadi0_105 - 105 )
Partition 106 (kvrpm_106 - 106 )
Partition 107 (kqrpm_107 - 107 )
Partition 108 (tau_108 - 108 )
Partition 109 (zloadi1_109 - 109 )
Partition 110 (zloadi2_110 - 110 )
Partition 111 (rmotor2_111 - 111 )
Partition 112 (kqrpm_112 - 112 )
Partition 113 (kvrad_113 - 113 )
Partition 114 (kqrad_114 - 114 )
Partition 115 (omega_115(D) - 115 )
Partition 116 (vm_116 - 116 )
Partition 117 (vm_omega_117 - 117 )
Partition 118 (volt_118(D) - 118 )
Partition 119 (i_119(D) - 119 )
Partition 121 (iter_121 - 121 )
Partition 122 (res_i_122(D) - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (res_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (res_i_129 - 129 )
Partition 131 (M.2_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (M.2_133 - 133 )
Partition 134 (iter_134 - 134 )
Partition 143 (res_omega_143 - 143 )
Partition 144 (res_volt_144 - 144 )
Partition 145 (i_omega_145(D) - 145 )
Partition 147 (i_volt_147(D) - 147 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (zloadi_151 - 151 )
Partition 152 (zloadi_omega_152 - 152 )
Partition 153 (q_153(D) - 153 )
Partition 155 (q_omega_155(D) - 155 )
Partition 157 (q_volt_157(D) - 157 )
Partition 170 (rmotor_170 - 170 )
Partition 171 (zloadi_171 - 171 )
Partition 172 (kvrpm_172 - 172 )
Partition 173 (kvrad_173 - 173 )
Partition 174 (kqrad_174 - 174 )
Partition 175 (vm_175 - 175 )
Partition 176 (vm_omega_176 - 176 )


Partition map 

Partition 0 (iter_82 - 82 )
Partition 1 (kqrpm_83 - 83 )
Partition 2 (res_i_84 - 84 )
Partition 3 (res_i_85 - 85 )
Partition 4 (M.2_86 - 86 )
Partition 5 (imotype_91(D) - 91 )
Partition 6 (nmpar_102(D) - 102 )
Partition 7 (parmot_103(D) - 103 )
Partition 8 (kvrpm_106 - 106 )
Partition 9 (kqrpm_107 - 107 )
Partition 10 (kqrpm_112 - 112 )
Partition 11 (kvrad_113 - 113 )
Partition 12 (kqrad_114 - 114 )
Partition 13 (omega_115(D) - 115 )
Partition 14 (vm_116 - 116 )
Partition 15 (vm_omega_117 - 117 )
Partition 16 (volt_118(D) - 118 )
Partition 17 (i_119(D) - 119 )
Partition 18 (iter_121 - 121 )
Partition 19 (res_i_122(D) - 122 )
Partition 20 (res_i_129 - 129 )
Partition 21 (M.2_131 - 131 )
Partition 22 (_132 - 132 )
Partition 23 (M.2_133 - 133 )
Partition 24 (iter_134 - 134 )
Partition 25 (i_omega_145(D) - 145 )
Partition 26 (i_volt_147(D) - 147 )
Partition 27 (zloadi_151 - 151 )
Partition 28 (q_153(D) - 153 )
Partition 29 (q_omega_155(D) - 155 )
Partition 30 (q_volt_157(D) - 157 )
Partition 31 (zloadi_171 - 171 )
Partition 32 (kvrpm_172 - 172 )
Partition 33 (kvrad_173 - 173 )
Partition 34 (kqrad_174 - 174 )
Partition 35 (vm_175 - 175 )
Partition 36 (vm_omega_176 - 176 )


Conflict graph:
21: 22
22: 21

After sorting:
Sorted Coalesce list:
(2147483646, 0) kqrpm_83 <-> kqrpm_107
(2147483646, 0) res_i_84 <-> res_i_129
(2147483646, 0) res_i_84 <-> res_i_85
(2147483646, 0) kqrpm_83 <-> kqrpm_112
(2147483646, 0) iter_82 <-> iter_121
(2147483646, 0) res_i_84 <-> res_i_122(D)
(2147483646, 0) iter_82 <-> iter_134
(2147483646, 0) zloadi_151 <-> zloadi_171
(2147483646, 0) kvrpm_106 <-> kvrpm_172
(2147483646, 0) kvrad_113 <-> kvrad_173
(2147483646, 0) kqrad_114 <-> kqrad_174
(2147483646, 0) vm_116 <-> vm_175
(2147483646, 0) vm_omega_117 <-> vm_omega_176
(2, 0) M.2_86 <-> M.2_131
(2, 0) res_i_85 <-> res_i_129
(1, 0) _132 <-> M.2_133

Partition map 

Partition 0 (iter_82 - 82 )
Partition 1 (kqrpm_83 - 83 )
Partition 2 (res_i_84 - 84 )
Partition 3 (res_i_85 - 85 )
Partition 4 (M.2_86 - 86 )
Partition 5 (imotype_91(D) - 91 )
Partition 6 (nmpar_102(D) - 102 )
Partition 7 (parmot_103(D) - 103 )
Partition 8 (kvrpm_106 - 106 )
Partition 9 (kqrpm_107 - 107 )
Partition 10 (kqrpm_112 - 112 )
Partition 11 (kvrad_113 - 113 )
Partition 12 (kqrad_114 - 114 )
Partition 13 (omega_115(D) - 115 )
Partition 14 (vm_116 - 116 )
Partition 15 (vm_omega_117 - 117 )
Partition 16 (volt_118(D) - 118 )
Partition 17 (i_119(D) - 119 )
Partition 18 (iter_121 - 121 )
Partition 19 (res_i_122(D) - 122 )
Partition 20 (res_i_129 - 129 )
Partition 21 (M.2_131 - 131 )
Partition 22 (_132 - 132 )
Partition 23 (M.2_133 - 133 )
Partition 24 (iter_134 - 134 )
Partition 25 (i_omega_145(D) - 145 )
Partition 26 (i_volt_147(D) - 147 )
Partition 27 (zloadi_151 - 151 )
Partition 28 (q_153(D) - 153 )
Partition 29 (q_omega_155(D) - 155 )
Partition 30 (q_volt_157(D) - 157 )
Partition 31 (zloadi_171 - 171 )
Partition 32 (kvrpm_172 - 172 )
Partition 33 (kvrad_173 - 173 )
Partition 34 (kqrad_174 - 174 )
Partition 35 (vm_175 - 175 )
Partition 36 (vm_omega_176 - 176 )

Coalesce list: (83)kqrpm_83 & (107)kqrpm_107 [map: 1, 9] : Success -> 1
Coalesce list: (84)res_i_84 & (129)res_i_129 [map: 2, 20] : Success -> 2
Coalesce list: (84)res_i_84 & (85)res_i_85 [map: 2, 3] : Success -> 2
Coalesce list: (83)kqrpm_83 & (112)kqrpm_112 [map: 1, 10] : Success -> 1
Coalesce list: (82)iter_82 & (121)iter_121 [map: 0, 18] : Success -> 0
Coalesce list: (84)res_i_84 & (122)res_i_122(D) [map: 2, 19] : Success -> 2
Coalesce list: (82)iter_82 & (134)iter_134 [map: 0, 24] : Success -> 0
Coalesce list: (151)zloadi_151 & (171)zloadi_171 [map: 27, 31] : Success -> 27
Coalesce list: (106)kvrpm_106 & (172)kvrpm_172 [map: 8, 32] : Success -> 8
Coalesce list: (113)kvrad_113 & (173)kvrad_173 [map: 11, 33] : Success -> 11
Coalesce list: (114)kqrad_114 & (174)kqrad_174 [map: 12, 34] : Success -> 12
Coalesce list: (116)vm_116 & (175)vm_175 [map: 14, 35] : Success -> 14
Coalesce list: (117)vm_omega_117 & (176)vm_omega_176 [map: 15, 36] : Success -> 15
Coalesce list: (86)M.2_86 & (131)M.2_131 [map: 4, 21] : Success -> 4
Coalesce list: (85)res_i_84 & (129)res_i_84: Already Coalesced.
Coalesce list: (132)_132 & (133)M.2_133 [map: 22, 23] : Success -> 22
Coalesce list: (85)res_i_84 & (84)res_i_84: Already Coalesced.
Coalesce list: (86)M.2_86 & (133)_132 [map: 4, 22] : Fail due to conflict
Coalesce list: (84)res_i_84 & (122)res_i_84: Already Coalesced.
Coalesce list: (82)iter_82 & (134)iter_82: Already Coalesced.
Coalesce list: (82)iter_82 & (121)iter_82: Already Coalesced.
Coalesce list: (83)kqrpm_83 & (112)kqrpm_83: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (pi.7_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (pi.8_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (pi.9_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (eps.10_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (iter_82 - 82 121 134 )
Partition 82 (kqrpm_83 - 83 107 112 )
Partition 83 (res_i_84 - 84 85 122 129 )
Partition 84 (M.2_86 - 86 131 )
Partition 85 (imotype_91(D) - 91 )
Partition 86 (nmpar_102(D) - 102 )
Partition 87 (parmot_103(D) - 103 )
Partition 88 (rmotor0_104 - 104 )
Partition 89 (zloadi0_105 - 105 )
Partition 90 (kvrpm_106 - 106 172 )
Partition 91 (tau_108 - 108 )
Partition 92 (zloadi1_109 - 109 )
Partition 93 (zloadi2_110 - 110 )
Partition 94 (rmotor2_111 - 111 )
Partition 95 (kvrad_113 - 113 173 )
Partition 96 (kqrad_114 - 114 174 )
Partition 97 (omega_115(D) - 115 )
Partition 98 (vm_116 - 116 175 )
Partition 99 (vm_omega_117 - 117 176 )
Partition 100 (volt_118(D) - 118 )
Partition 101 (i_119(D) - 119 )
Partition 102 (_123 - 123 )
Partition 103 (_124 - 124 )
Partition 104 (_125 - 125 )
Partition 105 (res_126 - 126 )
Partition 106 (_127 - 127 )
Partition 107 (_128 - 128 )
Partition 108 (_132 - 132 133 )
Partition 109 (res_omega_143 - 143 )
Partition 110 (res_volt_144 - 144 )
Partition 111 (i_omega_145(D) - 145 )
Partition 112 (i_volt_147(D) - 147 )
Partition 113 (_149 - 149 )
Partition 114 (_150 - 150 )
Partition 115 (zloadi_151 - 151 171 )
Partition 116 (zloadi_omega_152 - 152 )
Partition 117 (q_153(D) - 153 )
Partition 118 (q_omega_155(D) - 155 )
Partition 119 (q_volt_157(D) - 157 )
Partition 120 (rmotor_170 - 170 )

motorq (real(kind=4) & restrict omega, real(kind=4) & restrict volt, integer(kind=4) & restrict imotype, real(kind=4)[0:] * restrict parmot, integer(kind=4) & restrict nmpar, real(kind=4) & restrict q, real(kind=4) & restrict q_omega, real(kind=4) & restrict q_volt, real(kind=4) & restrict i, real(kind=4) & restrict i_omega, real(kind=4) & restrict i_volt)
{
  struct __st_parameter_dt dt_parm.4;
  real(kind=4) D.3554;
  real(kind=4) D.3553;
  struct __st_parameter_dt dt_parm.3;
  real(kind=4) D.3550;
  real(kind=4) M.2;
  real(kind=4) D.3547;
  real(kind=4) D.3546;
  real(kind=4) D.3545;
  real(kind=4) D.3544;
  logical(kind=1) D.3543;
  struct __st_parameter_dt dt_parm.1;
  struct __st_parameter_dt dt_parm.0;
  real(kind=4) zloadi_omega;
  real(kind=4) zloadi2;
  real(kind=4) zloadi1;
  real(kind=4) zloadi0;
  real(kind=4) zloadi;
  real(kind=4) vm_omega;
  real(kind=4) vm;
  real(kind=4) tau;
  real(kind=4) rmotor2;
  real(kind=4) rmotor0;
  real(kind=4) rmotor;
  real(kind=4) res_volt;
  real(kind=4) res_omega;
  real(kind=4) res_i;
  real(kind=4) res;
  static real(kind=4) pi = 3.141592502593994140625e+0;
  real(kind=4) kvrpm;
  real(kind=4) kvrad;
  real(kind=4) kqrpm;
  real(kind=4) kqrad;
  integer(kind=4) iter;
  static real(kind=4) eps = 9.999999974752427078783512115478515625e-7;
  integer(kind=4) _1;
  integer(kind=4) _2;
  real(kind=4) pi.7_3;
  real(kind=4) _4;
  real(kind=4) _5;
  real(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  real(kind=4) _10;
  real(kind=4) _11;
  real(kind=4) _12;
  real(kind=4) _13;
  real(kind=4) _14;
  real(kind=4) _15;
  real(kind=4) _16;
  real(kind=4) _17;
  real(kind=4) _18;
  real(kind=4) _19;
  real(kind=4) _20;
  integer(kind=4) _21;
  integer(kind=4) _22;
  real(kind=4) pi.8_23;
  real(kind=4) _24;
  real(kind=4) pi.9_25;
  real(kind=4) _26;
  real(kind=4) _27;
  real(kind=4) _28;
  real(kind=4) _29;
  real(kind=4) _30;
  real(kind=4) _31;
  real(kind=4) _32;
  real(kind=4) _33;
  real(kind=4) _34;
  real(kind=4) _35;
  real(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) _41;
  real(kind=4) _42;
  real(kind=4) _43;
  real(kind=4) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  real(kind=4) _48;
  real(kind=4) _49;
  real(kind=4) _50;
  real(kind=4) _51;
  real(kind=4) _52;
  real(kind=4) _53;
  real(kind=4) _54;
  logical(kind=1) _55;
  logical(kind=1) _56;
  logical(kind=1) _57;
  real(kind=4) _58;
  real(kind=4) eps.10_59;
  real(kind=4) _60;
  real(kind=4) _61;
  real(kind=4) _62;
  real(kind=4) _63;
  real(kind=4) _64;
  real(kind=4) _65;
  real(kind=4) _66;
  real(kind=4) _67;
  real(kind=4) _68;
  real(kind=4) _69;
  real(kind=4) _70;
  real(kind=4) _71;
  real(kind=4) _72;
  real(kind=4) _73;
  real(kind=4) _74;
  real(kind=4) _75;
  real(kind=4) _76;
  real(kind=4) _77;
  real(kind=4) _78;
  real(kind=4) _79;
  real(kind=4) _80;
  real(kind=4) _81;
  real(kind=4) M.2_86;
  logical(kind=1) _123;
  real(kind=4) _124;
  real(kind=4) _125;
  real(kind=4) _127;
  real(kind=4) _128;
  real(kind=4) M.2_131;
  real(kind=4) _132;
  real(kind=4) M.2_133;
  real(kind=4) _149;
  real(kind=4) _150;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *imotype_91(D);
  if (_1 == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  _2 = *nmpar_102(D);
  if (_2 <= 2)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  dt_parm.0.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.0.common.line = 53;
  dt_parm.0.common.flags = 128;
  dt_parm.0.common.unit = 6;
  _gfortran_st_write (&dt_parm.0);
  _gfortran_transfer_character_write (&dt_parm.0, &"MOTORQ: Motor model 1 needs  3  parameters."[1]{lb: 1 sz: 1}, 43);
  _gfortran_transfer_character_write (&dt_parm.0, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);
  _gfortran_transfer_integer_write (&dt_parm.0, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.0);
  dt_parm.0 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  rmotor_170 = *parmot_103(D)[0];
  zloadi_171 = *parmot_103(D)[1];
  kvrpm_172 = *parmot_103(D)[2];
  pi.7_3 = pi;
  _4 = kvrpm_172 * pi.7_3;
  kvrad_173 = _4 / 3.0e+1;
  kqrad_174 = kvrad_173;
  _5 = *omega_115(D);
  vm_175 = _5 / kvrad_173;
  vm_omega_176 = 1.0e+0 / kvrad_173;
  _6 = *volt_118(D);
  _7 = _6 - vm_175;
  _8 = ((_7));
  _9 = _8 / rmotor_170;
  *i_119(D) = _9;
  _10 = vm_omega_176 / rmotor_170;
  _11 = -_10;
  *i_omega_145(D) = _11;
  _12 = 1.0e+0 / rmotor_170;
  *i_volt_147(D) = _12;
  _13 = *i_119(D);
  _14 = _13 - zloadi_171;
  _15 = ((_14));
  _16 = _15 / kqrad_174;
  *q_153(D) = _16;
  _17 = *i_omega_145(D);
  _18 = _17 / kqrad_174;
  *q_omega_155(D) = _18;
  _19 = *i_volt_147(D);
  _20 = _19 / kqrad_174;
  *q_volt_157(D) = _20;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 6, loop depth 0
;;    pred:       2
  _21 = *imotype_91(D);
  if (_21 == 2)
    goto <bb 7>; [0.00%]
  else
    goto <bb 19>; [0.00%]
;;    succ:       7
;;                19

;;   basic block 7, loop depth 0
;;    pred:       6
  _22 = *nmpar_102(D);
  if (_22 <= 2)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  dt_parm.1.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.1.common.line = 79;
  dt_parm.1.common.flags = 128;
  dt_parm.1.common.unit = 6;
  _gfortran_st_write (&dt_parm.1);
  _gfortran_transfer_character_write (&dt_parm.1, &"MOTORQ: Motor model 2 needs at least 3 parameters."[1]{lb: 1 sz: 1}, 50);
  _gfortran_transfer_character_write (&dt_parm.1, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);
  _gfortran_transfer_integer_write (&dt_parm.1, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.1);
  dt_parm.1 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       7
  rmotor0_104 = *parmot_103(D)[0];
  zloadi0_105 = *parmot_103(D)[1];
  kvrpm_106 = *parmot_103(D)[2];
  kqrpm_107 = *parmot_103(D)[3];
  tau_108 = *parmot_103(D)[4];
  zloadi1_109 = *parmot_103(D)[5];
  zloadi2_110 = *parmot_103(D)[6];
  rmotor2_111 = *parmot_103(D)[7];
  if (kqrpm_107 == 0.0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  kqrpm_112 = kvrpm_106;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       9
;;                10
  # kqrpm_83 = PHI <kqrpm_107(9), kqrpm_112(10)>
  pi.8_23 = pi;
  _24 = kvrpm_106 * pi.8_23;
  kvrad_113 = _24 / 3.0e+1;
  pi.9_25 = pi;
  _26 = kqrpm_83 * pi.9_25;
  kqrad_114 = _26 / 3.0e+1;
  _27 = *omega_115(D);
  _28 = tau_108 * _27;
  _29 = _28 + 1.0e+0;
  _30 = ((_29));
  _31 = *omega_115(D);
  _32 = _30 * _31;
  vm_116 = _32 / kvrad_113;
  _33 = *omega_115(D);
  _34 = tau_108 * _33;
  _35 = _34 * 2.0e+0;
  _36 = _35 + 1.0e+0;
  _37 = ((_36));
  vm_omega_117 = _37 / kvrad_113;
  _38 = *volt_118(D);
  _39 = _38 - vm_116;
  _40 = ((_39));
  _41 = _40 / rmotor0_104;
  *i_119(D) = _41;
  iter_121 = 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       11
;;                16
  # iter_82 = PHI <iter_121(11), iter_134(16)>
  # res_i_84 = PHI <res_i_122(D)(11), res_i_129(16)>
  _123 = iter_82 > 10;
  if (_123 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       17
;;                13

;;   basic block 13, loop depth 1
;;    pred:       12
  _124 = *i_119(D);
  _125 = _124 * _124;
  _42 = *i_119(D);
  _43 = rmotor2_111 * _125;
  _44 = rmotor0_104 + _43;
  _45 = ((_44));
  _46 = _42 * _45;
  _47 = vm_116 + _46;
  _48 = *volt_118(D);
  res_126 = _47 - _48;
  _127 = *i_119(D);
  _128 = _127 * _127;
  _49 = rmotor2_111 * 3.0e+0;
  _50 = _128 * _49;
  res_i_129 = rmotor0_104 + _50;
  _51 = *i_119(D);
  _52 = res_126 / res_i_129;
  _53 = _51 - _52;
  *i_119(D) = _53;
  M.2_131 = 1.0e+0;
  _54 = *volt_118(D);
  _132 = ABS_EXPR <_54>;
  _55 = _132 > M.2_131;
  _56 = M.2_131 unord M.2_131;
  _57 = _55 | _56;
  if (_57 != 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 15>; [0.00%]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 1
;;    pred:       13
  M.2_133 = _132;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       13
;;                14
  # M.2_86 = PHI <M.2_131(13), M.2_133(14)>
  _58 = ABS_EXPR <res_126>;
  eps.10_59 = eps;
  _60 = M.2_86 * eps.10_59;
  if (_58 < _60)
    goto <bb 18>; [0.00%]
  else
    goto <bb 16>; [0.00%]
;;    succ:       18
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  iter_134 = iter_82 + 1;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 17, loop depth 0
;;    pred:       12
  dt_parm.3.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.3.common.line = 108;
  dt_parm.3.common.flags = 128;
  dt_parm.3.common.unit = 6;
  _gfortran_st_write (&dt_parm.3);
  _gfortran_transfer_character_write (&dt_parm.3, &"MOTOR: Current convergence failed"[1]{lb: 1 sz: 1}, 33);
  _gfortran_st_write_done (&dt_parm.3);
  dt_parm.3 ={v} {CLOBBER};
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       15
;;                17
  # res_i_85 = PHI <res_i_129(15), res_i_84(17)>
  res_omega_143 = vm_omega_117;
  res_volt_144 = -1.0e+0;
  _61 = res_omega_143 / res_i_85;
  _62 = -_61;
  *i_omega_145(D) = _62;
  _63 = res_volt_144 / res_i_85;
  _64 = -_63;
  *i_volt_147(D) = _64;
  _149 = *omega_115(D);
  _150 = _149 * _149;
  _65 = *omega_115(D);
  _66 = zloadi1_109 * _65;
  _67 = zloadi0_105 + _66;
  _68 = zloadi2_110 * _150;
  zloadi_151 = _67 + _68;
  _69 = *omega_115(D);
  _70 = zloadi2_110 * _69;
  _71 = _70 * 2.0e+0;
  zloadi_omega_152 = zloadi1_109 + _71;
  _72 = *i_119(D);
  _73 = _72 - zloadi_151;
  _74 = ((_73));
  _75 = _74 / kqrad_114;
  *q_153(D) = _75;
  _76 = *i_omega_145(D);
  _77 = _76 - zloadi_omega_152;
  _78 = ((_77));
  _79 = _78 / kqrad_114;
  *q_omega_155(D) = _79;
  _80 = *i_volt_147(D);
  _81 = _80 / kqrad_114;
  *q_volt_157(D) = _81;
  goto <bb 20>; [0.00%]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       6
  dt_parm.4.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.4.common.line = 124;
  dt_parm.4.common.flags = 128;
  dt_parm.4.common.unit = 6;
  _gfortran_st_write (&dt_parm.4);
  _gfortran_transfer_character_write (&dt_parm.4, &"MOTORQ: Undefined motor type index:"[1]{lb: 1 sz: 1}, 35);
  _gfortran_transfer_integer_write (&dt_parm.4, imotype_91(D), 4);
  _gfortran_st_write_done (&dt_parm.4);
  dt_parm.4 ={v} {CLOBBER};
  _gfortran_stop_string (0B, 0);
;;    succ:      

;;   basic block 20, loop depth 0
;;    pred:       5
;;                18
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L27> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 3: size 480 align 16
	dt_parm.4	dt_parm.0	dt_parm.1	dt_parm.3
Inserting a partition copy on edge BB14->BB15 : PART.84 = PART.108

;; Generating RTL for gimple basic block 2

;; _1 = *imotype_91(D);

(insn 12 11 13 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":49 -1
     (nil))

(insn 13 12 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 177) [1 *imotype_91(D)+0 S4 A32])) "../src/motor.f":49 -1
     (nil))

;; if (_1 == 1)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 1 [0x1]))) "../src/motor.f":49 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":49 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _2 = *nmpar_102(D);

(insn 17 16 18 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":51 -1
     (nil))

(insn 18 17 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 178) [1 *nmpar_102(D)+0 S4 A32])) "../src/motor.f":51 -1
     (nil))

;; if (_2 <= 2)

(insn 19 18 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ _2 ])
            (const_int 2 [0x2]))) "../src/motor.f":51 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":51 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; dt_parm.0.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};

(insn 22 21 23 (set (reg/f:DI 179)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":53 -1
     (nil))

(insn 23 22 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.0.common.filename+0 S8 A64])
        (reg/f:DI 179)) "../src/motor.f":53 -1
     (nil))

;; dt_parm.0.common.line = 53;

(insn 24 23 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.0.common.line+0 S4 A64])
        (const_int 53 [0x35])) "../src/motor.f":53 -1
     (nil))

;; dt_parm.0.common.flags = 128;

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.0.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":53 -1
     (nil))

;; dt_parm.0.common.unit = 6;

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.0.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":53 -1
     (nil))

;; _gfortran_st_write (&dt_parm.0);

(insn 27 26 28 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg:DI 180)) "../src/motor.f":53 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.0, &"MOTORQ: Motor model 1 needs  3  parameters."[1]{lb: 1 sz: 1}, 43);

(insn 30 29 31 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":52 -1
     (nil))

(insn 31 30 32 (set (reg:SI 1 dx)
        (const_int 43 [0x2b])) "../src/motor.f":52 -1
     (nil))

(insn 32 31 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427fba20 *lC1>)) "../src/motor.f":52 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 181)) "../src/motor.f":52 -1
     (nil))

(call_insn 34 33 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":52 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_character_write (&dt_parm.0, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);

(insn 35 34 36 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))

(insn 36 35 37 (set (reg:SI 1 dx)
        (const_int 19 [0x13])) "../src/motor.f":53 -1
     (nil))

(insn 37 36 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x1427fbab0 *lC2>)) "../src/motor.f":53 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg:DI 182)) "../src/motor.f":53 -1
     (nil))

(call_insn 39 38 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_integer_write (&dt_parm.0, imotype_91(D), 4);

(insn 40 39 41 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":53 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))

(insn 42 41 43 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":53 -1
     (nil))

(insn 43 42 44 (set (reg:DI 4 si)
        (reg:DI 183)) "../src/motor.f":53 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (reg:DI 184)) "../src/motor.f":53 -1
     (nil))

(call_insn 45 44 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.0);

(insn 46 45 47 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))

(insn 47 46 48 (set (reg:DI 5 di)
        (reg:DI 185)) "../src/motor.f":53 -1
     (nil))

(call_insn 48 47 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.0 ={v} {CLOBBER};

(nil)

;; _gfortran_stop_string (0B, 0);

(insn 49 48 50 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":54 -1
     (nil))

(insn 50 49 51 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":54 -1
     (nil))

(call_insn 51 50 52 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":54 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(barrier 52 51 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 53 52 54 3 (nil) [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; rmotor_170 = *parmot_103(D)[0];

(insn 55 54 56 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":57 -1
     (nil))

(insn 56 55 57 (set (reg:SF 187)
        (mem:SF (reg/f:DI 186) [2 *parmot_103(D)+0 S4 A32])) "../src/motor.f":57 -1
     (nil))

(insn 57 56 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32])
        (reg:SF 187)) "../src/motor.f":57 -1
     (nil))

;; zloadi_171 = *parmot_103(D)[1];

(insn 58 57 59 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":58 -1
     (nil))

(insn 59 58 60 (set (reg:SF 189)
        (mem:SF (plus:DI (reg/f:DI 188)
                (const_int 4 [0x4])) [2 *parmot_103(D)+4 S4 A32])) "../src/motor.f":58 -1
     (nil))

(insn 60 59 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32])
        (reg:SF 189)) "../src/motor.f":58 -1
     (nil))

;; kvrpm_172 = *parmot_103(D)[2];

(insn 61 60 62 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":59 -1
     (nil))

(insn 62 61 63 (set (reg:SF 191)
        (mem:SF (plus:DI (reg/f:DI 190)
                (const_int 8 [0x8])) [2 *parmot_103(D)+8 S4 A32])) "../src/motor.f":59 -1
     (nil))

(insn 63 62 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])
        (reg:SF 191)) "../src/motor.f":59 -1
     (nil))

;; pi.7_3 = pi;

(insn 64 63 0 (set (reg:SF 89 [ pi.7_3 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":61 -1
     (nil))

;; _4 = kvrpm_172 * pi.7_3;

(insn 65 64 0 (set (reg:SF 90 [ _4 ])
        (mult:SF (reg:SF 89 [ pi.7_3 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":61 -1
     (nil))

;; kvrad_173 = _4 / 3.0e+1;

(insn 66 65 67 (set (reg:SF 193)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":61 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))

(insn 67 66 68 (set (reg:SF 192)
        (div:SF (reg:SF 90 [ _4 ])
            (reg:SF 193))) "../src/motor.f":61 -1
     (nil))

(insn 68 67 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])
        (reg:SF 192)) "../src/motor.f":61 -1
     (nil))

;; kqrad_174 = kvrad_173;

(insn 69 68 70 (set (reg:SF 194)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])) "../src/motor.f":62 -1
     (nil))

(insn 70 69 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32])
        (reg:SF 194)) "../src/motor.f":62 -1
     (nil))

;; _5 = *omega_115(D);

(insn 71 70 72 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":64 -1
     (nil))

(insn 72 71 0 (set (reg:SF 91 [ _5 ])
        (mem:SF (reg/f:DI 195) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":64 -1
     (nil))

;; vm_175 = _5 / kvrad_173;

(insn 73 72 74 (set (reg:SF 196)
        (div:SF (reg:SF 91 [ _5 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":64 -1
     (nil))

(insn 74 73 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32])
        (reg:SF 196)) "../src/motor.f":64 -1
     (nil))

;; vm_omega_176 = 1.0e+0 / kvrad_173;

(insn 75 74 76 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":65 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 76 75 77 (set (reg:SF 197)
        (div:SF (reg:SF 198)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":65 -1
     (nil))

(insn 77 76 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])
        (reg:SF 197)) "../src/motor.f":65 -1
     (nil))

;; _6 = *volt_118(D);

(insn 78 77 79 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":67 -1
     (nil))

(insn 79 78 0 (set (reg:SF 92 [ _6 ])
        (mem:SF (reg/f:DI 199) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":67 -1
     (nil))

;; _7 = _6 - vm_175;

(insn 80 79 0 (set (reg:SF 93 [ _7 ])
        (minus:SF (reg:SF 92 [ _6 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":67 -1
     (nil))

;; _8 = ((_7));

(insn 81 80 0 (set (reg:SF 94 [ _8 ])
        (reg:SF 93 [ _7 ])) "../src/motor.f":67 -1
     (nil))

;; _9 = _8 / rmotor_170;

(insn 82 81 0 (set (reg:SF 95 [ _9 ])
        (div:SF (reg:SF 94 [ _8 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":67 -1
     (nil))

;; *i_119(D) = _9;

(insn 83 82 84 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":67 -1
     (nil))

(insn 84 83 0 (set (mem:SF (reg/f:DI 200) [2 *i_119(D)+0 S4 A32])
        (reg:SF 95 [ _9 ])) "../src/motor.f":67 -1
     (nil))

;; _10 = vm_omega_176 / rmotor_170;

(insn 85 84 86 (set (reg:SF 201)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])) "../src/motor.f":68 -1
     (nil))

(insn 86 85 0 (set (reg:SF 96 [ _10 ])
        (div:SF (reg:SF 201)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":68 -1
     (nil))

;; _11 = -_10;

(insn 87 86 88 (set (reg:V4SF 202)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":68 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 88 87 0 (parallel [
            (set (reg:SF 97 [ _11 ])
                (neg:SF (reg:SF 96 [ _10 ])))
            (use (reg:V4SF 202))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":68 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 96 [ _10 ]))
        (nil)))

;; *i_omega_145(D) = _11;

(insn 89 88 90 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":68 -1
     (nil))

(insn 90 89 0 (set (mem:SF (reg/f:DI 203) [2 *i_omega_145(D)+0 S4 A32])
        (reg:SF 97 [ _11 ])) "../src/motor.f":68 -1
     (nil))

;; _12 = 1.0e+0 / rmotor_170;

(insn 91 90 92 (set (reg:SF 204)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":69 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 92 91 0 (set (reg:SF 98 [ _12 ])
        (div:SF (reg:SF 204)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":69 -1
     (nil))

;; *i_volt_147(D) = _12;

(insn 93 92 94 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":69 -1
     (nil))

(insn 94 93 0 (set (mem:SF (reg/f:DI 205) [2 *i_volt_147(D)+0 S4 A32])
        (reg:SF 98 [ _12 ])) "../src/motor.f":69 -1
     (nil))

;; _13 = *i_119(D);

(insn 95 94 96 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":71 -1
     (nil))

(insn 96 95 0 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 206) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":71 -1
     (nil))

;; _14 = _13 - zloadi_171;

(insn 97 96 0 (set (reg:SF 100 [ _14 ])
        (minus:SF (reg:SF 99 [ _13 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32]))) "../src/motor.f":71 -1
     (nil))

;; _15 = ((_14));

(insn 98 97 0 (set (reg:SF 101 [ _15 ])
        (reg:SF 100 [ _14 ])) "../src/motor.f":71 -1
     (nil))

;; _16 = _15 / kqrad_174;

(insn 99 98 0 (set (reg:SF 102 [ _16 ])
        (div:SF (reg:SF 101 [ _15 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":71 -1
     (nil))

;; *q_153(D) = _16;

(insn 100 99 101 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 q+0 S8 A64])) "../src/motor.f":71 -1
     (nil))

(insn 101 100 0 (set (mem:SF (reg/f:DI 207) [2 *q_153(D)+0 S4 A32])
        (reg:SF 102 [ _16 ])) "../src/motor.f":71 -1
     (nil))

;; _17 = *i_omega_145(D);

(insn 102 101 103 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":72 -1
     (nil))

(insn 103 102 0 (set (reg:SF 103 [ _17 ])
        (mem:SF (reg/f:DI 208) [2 *i_omega_145(D)+0 S4 A32])) "../src/motor.f":72 -1
     (nil))

;; _18 = _17 / kqrad_174;

(insn 104 103 0 (set (reg:SF 104 [ _18 ])
        (div:SF (reg:SF 103 [ _17 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":72 -1
     (nil))

;; *q_omega_155(D) = _18;

(insn 105 104 106 (set (reg/f:DI 209)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 q_omega+0 S8 A64])) "../src/motor.f":72 -1
     (nil))

(insn 106 105 0 (set (mem:SF (reg/f:DI 209) [2 *q_omega_155(D)+0 S4 A32])
        (reg:SF 104 [ _18 ])) "../src/motor.f":72 -1
     (nil))

;; _19 = *i_volt_147(D);

(insn 107 106 108 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":73 -1
     (nil))

(insn 108 107 0 (set (reg:SF 105 [ _19 ])
        (mem:SF (reg/f:DI 210) [2 *i_volt_147(D)+0 S4 A32])) "../src/motor.f":73 -1
     (nil))

;; _20 = _19 / kqrad_174;

(insn 109 108 0 (set (reg:SF 106 [ _20 ])
        (div:SF (reg:SF 105 [ _19 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":73 -1
     (nil))

;; *q_volt_157(D) = _20;

(insn 110 109 111 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 q_volt+0 S8 A64])) "../src/motor.f":73 -1
     (nil))

(insn 111 110 0 (set (mem:SF (reg/f:DI 211) [2 *q_volt_157(D)+0 S4 A32])
        (reg:SF 106 [ _20 ])) "../src/motor.f":73 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 114 113 115 2 (nil) [0 uses])

(note 115 114 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = *imotype_91(D);

(insn 116 115 117 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":75 -1
     (nil))

(insn 117 116 0 (set (reg:SI 107 [ _21 ])
        (mem:SI (reg/f:DI 212) [1 *imotype_91(D)+0 S4 A32])) "../src/motor.f":75 -1
     (nil))

;; if (_21 == 2)

(insn 118 117 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ _21 ])
            (const_int 2 [0x2]))) "../src/motor.f":75 -1
     (nil))

(jump_insn 119 118 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":75 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _22 = *nmpar_102(D);

(insn 121 120 122 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":77 -1
     (nil))

(insn 122 121 0 (set (reg:SI 108 [ _22 ])
        (mem:SI (reg/f:DI 213) [1 *nmpar_102(D)+0 S4 A32])) "../src/motor.f":77 -1
     (nil))

;; if (_22 <= 2)

(insn 123 122 124 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 108 [ _22 ])
            (const_int 2 [0x2]))) "../src/motor.f":77 -1
     (nil))

(jump_insn 124 123 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":77 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; dt_parm.1.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};

(insn 126 125 127 (set (reg/f:DI 214)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":79 -1
     (nil))

(insn 127 126 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.1.common.filename+0 S8 A64])
        (reg/f:DI 214)) "../src/motor.f":79 -1
     (nil))

;; dt_parm.1.common.line = 79;

(insn 128 127 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.1.common.line+0 S4 A64])
        (const_int 79 [0x4f])) "../src/motor.f":79 -1
     (nil))

;; dt_parm.1.common.flags = 128;

(insn 129 128 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.1.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":79 -1
     (nil))

;; dt_parm.1.common.unit = 6;

(insn 130 129 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.1.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":79 -1
     (nil))

;; _gfortran_st_write (&dt_parm.1);

(insn 131 130 132 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))

(insn 132 131 133 (set (reg:DI 5 di)
        (reg:DI 215)) "../src/motor.f":79 -1
     (nil))

(call_insn 133 132 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.1, &"MOTORQ: Motor model 2 needs at least 3 parameters."[1]{lb: 1 sz: 1}, 50);

(insn 134 133 135 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":78 -1
     (nil))

(insn 135 134 136 (set (reg:SI 1 dx)
        (const_int 50 [0x32])) "../src/motor.f":78 -1
     (nil))

(insn 136 135 137 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x1427fbb40 *lC6>)) "../src/motor.f":78 -1
     (nil))

(insn 137 136 138 (set (reg:DI 5 di)
        (reg:DI 216)) "../src/motor.f":78 -1
     (nil))

(call_insn 138 137 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":78 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_character_write (&dt_parm.1, &"  Number passed in:"[1]{lb: 1 sz: 1}, 19);

(insn 139 138 140 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))

(insn 140 139 141 (set (reg:SI 1 dx)
        (const_int 19 [0x13])) "../src/motor.f":79 -1
     (nil))

(insn 141 140 142 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x1427fbab0 *lC2>)) "../src/motor.f":79 -1
     (nil))

(insn 142 141 143 (set (reg:DI 5 di)
        (reg:DI 217)) "../src/motor.f":79 -1
     (nil))

(call_insn 143 142 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_integer_write (&dt_parm.1, imotype_91(D), 4);

(insn 144 143 145 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":79 -1
     (nil))

(insn 145 144 146 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))

(insn 146 145 147 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":79 -1
     (nil))

(insn 147 146 148 (set (reg:DI 4 si)
        (reg:DI 218)) "../src/motor.f":79 -1
     (nil))

(insn 148 147 149 (set (reg:DI 5 di)
        (reg:DI 219)) "../src/motor.f":79 -1
     (nil))

(call_insn 149 148 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.1);

(insn 150 149 151 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))

(insn 151 150 152 (set (reg:DI 5 di)
        (reg:DI 220)) "../src/motor.f":79 -1
     (nil))

(call_insn 152 151 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.1 ={v} {CLOBBER};

(nil)

;; _gfortran_stop_string (0B, 0);

(insn 153 152 154 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":80 -1
     (nil))

(insn 154 153 155 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":80 -1
     (nil))

(call_insn 155 154 156 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":80 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(barrier 156 155 0)

;; Generating RTL for gimple basic block 9

;; 

(code_label 157 156 158 6 (nil) [0 uses])

(note 158 157 0 NOTE_INSN_BASIC_BLOCK)

;; rmotor0_104 = *parmot_103(D)[0];

(insn 159 158 160 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":83 -1
     (nil))

(insn 160 159 161 (set (reg:SF 222)
        (mem:SF (reg/f:DI 221) [2 *parmot_103(D)+0 S4 A32])) "../src/motor.f":83 -1
     (nil))

(insn 161 160 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32])
        (reg:SF 222)) "../src/motor.f":83 -1
     (nil))

;; zloadi0_105 = *parmot_103(D)[1];

(insn 162 161 163 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":84 -1
     (nil))

(insn 163 162 164 (set (reg:SF 224)
        (mem:SF (plus:DI (reg/f:DI 223)
                (const_int 4 [0x4])) [2 *parmot_103(D)+4 S4 A32])) "../src/motor.f":84 -1
     (nil))

(insn 164 163 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 zloadi0+0 S4 A32])
        (reg:SF 224)) "../src/motor.f":84 -1
     (nil))

;; kvrpm_106 = *parmot_103(D)[2];

(insn 165 164 166 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":85 -1
     (nil))

(insn 166 165 167 (set (reg:SF 226)
        (mem:SF (plus:DI (reg/f:DI 225)
                (const_int 8 [0x8])) [2 *parmot_103(D)+8 S4 A32])) "../src/motor.f":85 -1
     (nil))

(insn 167 166 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])
        (reg:SF 226)) "../src/motor.f":85 -1
     (nil))

;; kqrpm_107 = *parmot_103(D)[3];

(insn 168 167 169 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":86 -1
     (nil))

(insn 169 168 170 (set (reg:SF 228)
        (mem:SF (plus:DI (reg/f:DI 227)
                (const_int 12 [0xc])) [2 *parmot_103(D)+12 S4 A32])) "../src/motor.f":86 -1
     (nil))

(insn 170 169 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32])
        (reg:SF 228)) "../src/motor.f":86 -1
     (nil))

;; tau_108 = *parmot_103(D)[4];

(insn 171 170 172 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":87 -1
     (nil))

(insn 172 171 173 (set (reg:SF 230)
        (mem:SF (plus:DI (reg/f:DI 229)
                (const_int 16 [0x10])) [2 *parmot_103(D)+16 S4 A32])) "../src/motor.f":87 -1
     (nil))

(insn 173 172 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32])
        (reg:SF 230)) "../src/motor.f":87 -1
     (nil))

;; zloadi1_109 = *parmot_103(D)[5];

(insn 174 173 175 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":88 -1
     (nil))

(insn 175 174 176 (set (reg:SF 232)
        (mem:SF (plus:DI (reg/f:DI 231)
                (const_int 20 [0x14])) [2 *parmot_103(D)+20 S4 A32])) "../src/motor.f":88 -1
     (nil))

(insn 176 175 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32])
        (reg:SF 232)) "../src/motor.f":88 -1
     (nil))

;; zloadi2_110 = *parmot_103(D)[6];

(insn 177 176 178 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":89 -1
     (nil))

(insn 178 177 179 (set (reg:SF 234)
        (mem:SF (plus:DI (reg/f:DI 233)
                (const_int 24 [0x18])) [2 *parmot_103(D)+24 S4 A32])) "../src/motor.f":89 -1
     (nil))

(insn 179 178 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32])
        (reg:SF 234)) "../src/motor.f":89 -1
     (nil))

;; rmotor2_111 = *parmot_103(D)[7];

(insn 180 179 181 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":90 -1
     (nil))

(insn 181 180 182 (set (reg:SF 236)
        (mem:SF (plus:DI (reg/f:DI 235)
                (const_int 28 [0x1c])) [2 *parmot_103(D)+28 S4 A32])) "../src/motor.f":90 -1
     (nil))

(insn 182 181 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32])
        (reg:SF 236)) "../src/motor.f":90 -1
     (nil))

;; if (kqrpm_107 == 0.0)

(insn 183 182 184 (set (reg:SF 237)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [2  S4 A32])) "../src/motor.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 184 183 185 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 237)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":93 -1
     (nil))

(jump_insn 185 184 186 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":93 -1
     (nil))

(insn 186 185 187 (set (reg:SF 238)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [2  S4 A32])) "../src/motor.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 187 186 188 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 238)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":93 -1
     (nil))

(jump_insn 188 187 189 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) "../src/motor.f":93 -1
     (nil))

(jump_insn 189 188 190 (set (pc)
        (label_ref 0)) "../src/motor.f":93 -1
     (nil))

(barrier 190 189 191)

(code_label 191 190 0 8 (nil) [0 uses])

;; Generating RTL for gimple basic block 10

;; kqrpm_112 = kvrpm_106;

(insn 193 192 194 (set (reg:SF 239)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])) "../src/motor.f":93 -1
     (nil))

(insn 194 193 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32])
        (reg:SF 239)) "../src/motor.f":93 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 195 194 196 7 (nil) [0 uses])

(note 196 195 0 NOTE_INSN_BASIC_BLOCK)

;; pi.8_23 = pi;

(insn 197 196 0 (set (reg:SF 109 [ pi.8_23 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":95 -1
     (nil))

;; _24 = kvrpm_106 * pi.8_23;

(insn 198 197 0 (set (reg:SF 110 [ _24 ])
        (mult:SF (reg:SF 109 [ pi.8_23 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":95 -1
     (nil))

;; kvrad_113 = _24 / 3.0e+1;

(insn 199 198 200 (set (reg:SF 241)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":95 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))

(insn 200 199 201 (set (reg:SF 240)
        (div:SF (reg:SF 110 [ _24 ])
            (reg:SF 241))) "../src/motor.f":95 -1
     (nil))

(insn 201 200 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])
        (reg:SF 240)) "../src/motor.f":95 -1
     (nil))

;; pi.9_25 = pi;

(insn 202 201 0 (set (reg:SF 111 [ pi.9_25 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":96 -1
     (nil))

;; _26 = kqrpm_83 * pi.9_25;

(insn 203 202 0 (set (reg:SF 112 [ _26 ])
        (mult:SF (reg:SF 111 [ pi.9_25 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":96 -1
     (nil))

;; kqrad_114 = _26 / 3.0e+1;

(insn 204 203 205 (set (reg:SF 243)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":96 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))

(insn 205 204 206 (set (reg:SF 242)
        (div:SF (reg:SF 112 [ _26 ])
            (reg:SF 243))) "../src/motor.f":96 -1
     (nil))

(insn 206 205 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32])
        (reg:SF 242)) "../src/motor.f":96 -1
     (nil))

;; _27 = *omega_115(D);

(insn 207 206 208 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":98 -1
     (nil))

(insn 208 207 0 (set (reg:SF 113 [ _27 ])
        (mem:SF (reg/f:DI 244) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":98 -1
     (nil))

;; _28 = tau_108 * _27;

(insn 209 208 0 (set (reg:SF 114 [ _28 ])
        (mult:SF (reg:SF 113 [ _27 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32]))) "../src/motor.f":98 -1
     (nil))

;; _29 = _28 + 1.0e+0;

(insn 210 209 211 (set (reg:SF 245)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":98 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 211 210 0 (set (reg:SF 115 [ _29 ])
        (plus:SF (reg:SF 114 [ _28 ])
            (reg:SF 245))) "../src/motor.f":98 -1
     (nil))

;; _30 = ((_29));

(insn 212 211 0 (set (reg:SF 116 [ _30 ])
        (reg:SF 115 [ _29 ])) "../src/motor.f":98 -1
     (nil))

;; _31 = *omega_115(D);

(insn 213 212 214 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":98 -1
     (nil))

(insn 214 213 0 (set (reg:SF 117 [ _31 ])
        (mem:SF (reg/f:DI 246) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":98 -1
     (nil))

;; _32 = _30 * _31;

(insn 215 214 0 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 116 [ _30 ])
            (reg:SF 117 [ _31 ]))) "../src/motor.f":98 -1
     (nil))

;; vm_116 = _32 / kvrad_113;

(insn 216 215 217 (set (reg:SF 247)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":98 -1
     (nil))

(insn 217 216 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32])
        (reg:SF 247)) "../src/motor.f":98 -1
     (nil))

;; _33 = *omega_115(D);

(insn 218 217 219 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":99 -1
     (nil))

(insn 219 218 0 (set (reg:SF 119 [ _33 ])
        (mem:SF (reg/f:DI 248) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":99 -1
     (nil))

;; _34 = tau_108 * _33;

(insn 220 219 0 (set (reg:SF 120 [ _34 ])
        (mult:SF (reg:SF 119 [ _33 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32]))) "../src/motor.f":99 -1
     (nil))

;; _35 = _34 * 2.0e+0;

(insn 221 220 0 (set (reg:SF 121 [ _35 ])
        (plus:SF (reg:SF 120 [ _34 ])
            (reg:SF 120 [ _34 ]))) "../src/motor.f":99 -1
     (nil))

;; _36 = _35 + 1.0e+0;

(insn 222 221 223 (set (reg:SF 249)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":99 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 223 222 0 (set (reg:SF 122 [ _36 ])
        (plus:SF (reg:SF 121 [ _35 ])
            (reg:SF 249))) "../src/motor.f":99 -1
     (nil))

;; _37 = ((_36));

(insn 224 223 0 (set (reg:SF 123 [ _37 ])
        (reg:SF 122 [ _36 ])) "../src/motor.f":99 -1
     (nil))

;; vm_omega_117 = _37 / kvrad_113;

(insn 225 224 226 (set (reg:SF 250)
        (div:SF (reg:SF 123 [ _37 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":99 -1
     (nil))

(insn 226 225 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])
        (reg:SF 250)) "../src/motor.f":99 -1
     (nil))

;; _38 = *volt_118(D);

(insn 227 226 228 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":101 -1
     (nil))

(insn 228 227 0 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 251) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":101 -1
     (nil))

;; _39 = _38 - vm_116;

(insn 229 228 0 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 124 [ _38 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":101 -1
     (nil))

;; _40 = ((_39));

(insn 230 229 0 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/motor.f":101 -1
     (nil))

;; _41 = _40 / rmotor0_104;

(insn 231 230 0 (set (reg:SF 127 [ _41 ])
        (div:SF (reg:SF 126 [ _40 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32]))) "../src/motor.f":101 -1
     (nil))

;; *i_119(D) = _41;

(insn 232 231 233 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":101 -1
     (nil))

(insn 233 232 0 (set (mem:SF (reg/f:DI 252) [2 *i_119(D)+0 S4 A32])
        (reg:SF 127 [ _41 ])) "../src/motor.f":101 -1
     (nil))

;; iter_121 = 1;

(insn 234 233 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/motor.f":102 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _123 = iter_82 > 10;

(insn 236 235 237 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
            (const_int 10 [0xa]))) "../src/motor.f":102 -1
     (nil))

(insn 237 236 0 (set (reg:QI 169 [ _123 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/motor.f":102 -1
     (nil))

;; if (_123 != 0)

(insn 238 237 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ _123 ])
            (const_int 0 [0]))) "../src/motor.f":102 -1
     (nil))

(jump_insn 239 238 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":102 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _124 = *i_119(D);

(insn 241 240 242 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":103 -1
     (nil))

(insn 242 241 0 (set (reg:SF 170 [ _124 ])
        (mem:SF (reg/f:DI 253) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))

;; _125 = _124 * _124;

(insn 243 242 0 (set (reg:SF 171 [ _125 ])
        (mult:SF (reg:SF 170 [ _124 ])
            (reg:SF 170 [ _124 ]))) "../src/motor.f":103 -1
     (nil))

;; _42 = *i_119(D);

(insn 244 243 245 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":103 -1
     (nil))

(insn 245 244 0 (set (reg:SF 128 [ _42 ])
        (mem:SF (reg/f:DI 254) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))

;; _43 = rmotor2_111 * _125;

(insn 246 245 0 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 171 [ _125 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))

;; _44 = rmotor0_104 + _43;

(insn 247 246 0 (set (reg:SF 130 [ _44 ])
        (plus:SF (reg:SF 129 [ _43 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))

;; _45 = ((_44));

(insn 248 247 0 (set (reg:SF 131 [ _45 ])
        (reg:SF 130 [ _44 ])) "../src/motor.f":103 -1
     (nil))

;; _46 = _42 * _45;

(insn 249 248 0 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 128 [ _42 ])
            (reg:SF 131 [ _45 ]))) "../src/motor.f":103 -1
     (nil))

;; _47 = vm_116 + _46;

(insn 250 249 0 (set (reg:SF 133 [ _47 ])
        (plus:SF (reg:SF 132 [ _46 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))

;; _48 = *volt_118(D);

(insn 251 250 252 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":103 -1
     (nil))

(insn 252 251 0 (set (reg:SF 134 [ _48 ])
        (mem:SF (reg/f:DI 255) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))

;; res_126 = _47 - _48;

(insn 253 252 254 (set (reg:SF 256)
        (minus:SF (reg:SF 133 [ _47 ])
            (reg:SF 134 [ _48 ]))) "../src/motor.f":103 -1
     (nil))

(insn 254 253 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])
        (reg:SF 256)) "../src/motor.f":103 -1
     (nil))

;; _127 = *i_119(D);

(insn 255 254 256 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":104 -1
     (nil))

(insn 256 255 0 (set (reg:SF 172 [ _127 ])
        (mem:SF (reg/f:DI 257) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":104 -1
     (nil))

;; _128 = _127 * _127;

(insn 257 256 0 (set (reg:SF 173 [ _128 ])
        (mult:SF (reg:SF 172 [ _127 ])
            (reg:SF 172 [ _127 ]))) "../src/motor.f":104 -1
     (nil))

;; _49 = rmotor2_111 * 3.0e+0;

(insn 258 257 259 (set (reg:SF 258)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32])) "../src/motor.f":104 -1
     (nil))

(insn 259 258 260 (set (reg:SF 259)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [2  S4 A32])) "../src/motor.f":104 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))

(insn 260 259 0 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 258)
            (reg:SF 259))) "../src/motor.f":104 -1
     (nil))

;; _50 = _128 * _49;

(insn 261 260 0 (set (reg:SF 136 [ _50 ])
        (mult:SF (reg:SF 173 [ _128 ])
            (reg:SF 135 [ _49 ]))) "../src/motor.f":104 -1
     (nil))

;; res_i_129 = rmotor0_104 + _50;

(insn 262 261 263 (set (reg:SF 261)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32])) "../src/motor.f":104 -1
     (nil))

(insn 263 262 264 (set (reg:SF 260)
        (plus:SF (reg:SF 261)
            (reg:SF 136 [ _50 ]))) "../src/motor.f":104 -1
     (nil))

(insn 264 263 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32])
        (reg:SF 260)) "../src/motor.f":104 -1
     (nil))

;; _51 = *i_119(D);

(insn 265 264 266 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":105 -1
     (nil))

(insn 266 265 0 (set (reg:SF 137 [ _51 ])
        (mem:SF (reg/f:DI 262) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":105 -1
     (nil))

;; _52 = res_126 / res_i_129;

(insn 267 266 268 (set (reg:SF 263)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])) "../src/motor.f":105 -1
     (nil))

(insn 268 267 0 (set (reg:SF 138 [ _52 ])
        (div:SF (reg:SF 263)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":105 -1
     (nil))

;; _53 = _51 - _52;

(insn 269 268 0 (set (reg:SF 139 [ _53 ])
        (minus:SF (reg:SF 137 [ _51 ])
            (reg:SF 138 [ _52 ]))) "../src/motor.f":105 -1
     (nil))

;; *i_119(D) = _53;

(insn 270 269 271 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":105 -1
     (nil))

(insn 271 270 0 (set (mem:SF (reg/f:DI 264) [2 *i_119(D)+0 S4 A32])
        (reg:SF 139 [ _53 ])) "../src/motor.f":105 -1
     (nil))

;; M.2_131 = 1.0e+0;

(insn 272 271 0 (set (reg:SF 168 [ M.2_86 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

;; _54 = *volt_118(D);

(insn 273 272 274 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":106 -1
     (nil))

(insn 274 273 0 (set (reg:SF 140 [ _54 ])
        (mem:SF (reg/f:DI 265) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":106 -1
     (nil))

;; _132 = ABS_EXPR <_54>;

(insn 275 274 276 (set (reg:V4SF 266)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 276 275 0 (parallel [
            (set (reg:SF 174 [ _132 ])
                (abs:SF (reg:SF 140 [ _54 ])))
            (use (reg:V4SF 266))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 140 [ _54 ]))
        (nil)))

;; _55 = _132 > M.2_131;

(insn 277 276 278 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 174 [ _132 ])
            (reg:SF 168 [ M.2_86 ]))) "../src/motor.f":106 -1
     (nil))

(insn 278 277 0 (set (reg:QI 141 [ _55 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))

;; _56 = M.2_131 unord M.2_131;

(insn 279 278 280 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 168 [ M.2_86 ])
            (reg:SF 168 [ M.2_86 ]))) "../src/motor.f":106 -1
     (nil))

(insn 280 279 0 (set (reg:QI 142 [ _56 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))

;; _57 = _55 | _56;

(insn 281 280 0 (parallel [
            (set (reg:QI 143 [ _57 ])
                (ior:QI (reg:QI 141 [ _55 ])
                    (reg:QI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (nil))

;; if (_57 != 0)

(insn 282 281 283 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _57 ])
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))

(jump_insn 283 282 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; M.2_133 = _132;

(nil)

;; Generating RTL for gimple basic block 15

;; 

(code_label 285 284 286 10 (nil) [0 uses])

(note 286 285 0 NOTE_INSN_BASIC_BLOCK)

;; _58 = ABS_EXPR <res_126>;

(insn 287 286 288 (set (reg:SF 267)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])) "../src/motor.f":106 -1
     (nil))

(insn 288 287 289 (set (reg:V4SF 268)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 289 288 0 (parallel [
            (set (reg:SF 144 [ _58 ])
                (abs:SF (reg:SF 267)))
            (use (reg:V4SF 268))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 267))
        (nil)))

;; eps.10_59 = eps;

(insn 290 289 0 (set (reg:SF 145 [ eps.10_59 ])
        (mem/c:SF (symbol_ref:DI ("eps.3513") [flags 0x1c02]  <var_decl 0x142004bd0 eps>) [2 eps+0 S4 A32])) "../src/motor.f":106 -1
     (nil))

;; _60 = M.2_86 * eps.10_59;

(insn 291 290 0 (set (reg:SF 146 [ _60 ])
        (mult:SF (reg:SF 168 [ M.2_86 ])
            (reg:SF 145 [ eps.10_59 ]))) "../src/motor.f":106 -1
     (nil))

;; if (_58 < _60)

(insn 292 291 293 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 146 [ _60 ])
            (reg:SF 144 [ _58 ]))) "../src/motor.f":106 -1
     (nil))

(jump_insn 293 292 0 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":106 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; iter_134 = iter_82 + 1;

(insn 295 294 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":102 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 299 298 300 9 (nil) [0 uses])

(note 300 299 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.3.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};

(insn 301 300 302 (set (reg/f:DI 269)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":108 -1
     (nil))

(insn 302 301 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.3.common.filename+0 S8 A64])
        (reg/f:DI 269)) "../src/motor.f":108 -1
     (nil))

;; dt_parm.3.common.line = 108;

(insn 303 302 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.3.common.line+0 S4 A64])
        (const_int 108 [0x6c])) "../src/motor.f":108 -1
     (nil))

;; dt_parm.3.common.flags = 128;

(insn 304 303 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.3.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":108 -1
     (nil))

;; dt_parm.3.common.unit = 6;

(insn 305 304 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.3.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":108 -1
     (nil))

;; _gfortran_st_write (&dt_parm.3);

(insn 306 305 307 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))

(insn 307 306 308 (set (reg:DI 5 di)
        (reg:DI 270)) "../src/motor.f":108 -1
     (nil))

(call_insn 308 307 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.3, &"MOTOR: Current convergence failed"[1]{lb: 1 sz: 1}, 33);

(insn 309 308 310 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))

(insn 310 309 311 (set (reg:SI 1 dx)
        (const_int 33 [0x21])) "../src/motor.f":108 -1
     (nil))

(insn 311 310 312 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC10") [flags 0x2]  <var_decl 0x1427fbbd0 *lC10>)) "../src/motor.f":108 -1
     (nil))

(insn 312 311 313 (set (reg:DI 5 di)
        (reg:DI 271)) "../src/motor.f":108 -1
     (nil))

(call_insn 313 312 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.3);

(insn 314 313 315 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))

(insn 315 314 316 (set (reg:DI 5 di)
        (reg:DI 272)) "../src/motor.f":108 -1
     (nil))

(call_insn 316 315 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.3 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 18

;; 

(code_label 317 316 318 11 (nil) [0 uses])

(note 318 317 0 NOTE_INSN_BASIC_BLOCK)

;; res_omega_143 = vm_omega_117;

(insn 319 318 320 (set (reg:SF 273)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])) "../src/motor.f":110 -1
     (nil))

(insn 320 319 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 res_omega+0 S4 A32])
        (reg:SF 273)) "../src/motor.f":110 -1
     (nil))

;; res_volt_144 = -1.0e+0;

(insn 321 320 322 (set (reg:SF 274)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [2  S4 A32])) "../src/motor.f":111 -1
     (nil))

(insn 322 321 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res_volt+0 S4 A32])
        (reg:SF 274)) "../src/motor.f":111 -1
     (nil))

;; _61 = res_omega_143 / res_i_85;

(insn 323 322 324 (set (reg:SF 275)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 res_omega+0 S4 A32])) "../src/motor.f":112 -1
     (nil))

(insn 324 323 0 (set (reg:SF 147 [ _61 ])
        (div:SF (reg:SF 275)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":112 -1
     (nil))

;; _62 = -_61;

(insn 325 324 326 (set (reg:V4SF 276)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":112 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 326 325 0 (parallel [
            (set (reg:SF 148 [ _62 ])
                (neg:SF (reg:SF 147 [ _61 ])))
            (use (reg:V4SF 276))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":112 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 147 [ _61 ]))
        (nil)))

;; *i_omega_145(D) = _62;

(insn 327 326 328 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":112 -1
     (nil))

(insn 328 327 0 (set (mem:SF (reg/f:DI 277) [2 *i_omega_145(D)+0 S4 A32])
        (reg:SF 148 [ _62 ])) "../src/motor.f":112 -1
     (nil))

;; _63 = res_volt_144 / res_i_85;

(insn 329 328 330 (set (reg:SF 278)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res_volt+0 S4 A32])) "../src/motor.f":113 -1
     (nil))

(insn 330 329 0 (set (reg:SF 149 [ _63 ])
        (div:SF (reg:SF 278)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":113 -1
     (nil))

;; _64 = -_63;

(insn 331 330 332 (set (reg:V4SF 279)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":113 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 332 331 0 (parallel [
            (set (reg:SF 150 [ _64 ])
                (neg:SF (reg:SF 149 [ _63 ])))
            (use (reg:V4SF 279))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":113 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 149 [ _63 ]))
        (nil)))

;; *i_volt_147(D) = _64;

(insn 333 332 334 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":113 -1
     (nil))

(insn 334 333 0 (set (mem:SF (reg/f:DI 280) [2 *i_volt_147(D)+0 S4 A32])
        (reg:SF 150 [ _64 ])) "../src/motor.f":113 -1
     (nil))

;; _149 = *omega_115(D);

(insn 335 334 336 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":115 -1
     (nil))

(insn 336 335 0 (set (reg:SF 175 [ _149 ])
        (mem:SF (reg/f:DI 281) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":115 -1
     (nil))

;; _150 = _149 * _149;

(insn 337 336 0 (set (reg:SF 176 [ _150 ])
        (mult:SF (reg:SF 175 [ _149 ])
            (reg:SF 175 [ _149 ]))) "../src/motor.f":115 -1
     (nil))

;; _65 = *omega_115(D);

(insn 338 337 339 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":115 -1
     (nil))

(insn 339 338 0 (set (reg:SF 151 [ _65 ])
        (mem:SF (reg/f:DI 282) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":115 -1
     (nil))

;; _66 = zloadi1_109 * _65;

(insn 340 339 0 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 151 [ _65 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))

;; _67 = zloadi0_105 + _66;

(insn 341 340 0 (set (reg:SF 153 [ _67 ])
        (plus:SF (reg:SF 152 [ _66 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 zloadi0+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))

;; _68 = zloadi2_110 * _150;

(insn 342 341 0 (set (reg:SF 154 [ _68 ])
        (mult:SF (reg:SF 176 [ _150 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))

;; zloadi_151 = _67 + _68;

(insn 343 342 344 (set (reg:SF 283)
        (plus:SF (reg:SF 153 [ _67 ])
            (reg:SF 154 [ _68 ]))) "../src/motor.f":115 -1
     (nil))

(insn 344 343 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32])
        (reg:SF 283)) "../src/motor.f":115 -1
     (nil))

;; _69 = *omega_115(D);

(insn 345 344 346 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":116 -1
     (nil))

(insn 346 345 0 (set (reg:SF 155 [ _69 ])
        (mem:SF (reg/f:DI 284) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":116 -1
     (nil))

;; _70 = zloadi2_110 * _69;

(insn 347 346 0 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 155 [ _69 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32]))) "../src/motor.f":116 -1
     (nil))

;; _71 = _70 * 2.0e+0;

(insn 348 347 0 (set (reg:SF 157 [ _71 ])
        (plus:SF (reg:SF 156 [ _70 ])
            (reg:SF 156 [ _70 ]))) "../src/motor.f":116 -1
     (nil))

;; zloadi_omega_152 = zloadi1_109 + _71;

(insn 349 348 350 (set (reg:SF 286)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32])) "../src/motor.f":116 -1
     (nil))

(insn 350 349 351 (set (reg:SF 285)
        (plus:SF (reg:SF 286)
            (reg:SF 157 [ _71 ]))) "../src/motor.f":116 -1
     (nil))

(insn 351 350 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 zloadi_omega+0 S4 A32])
        (reg:SF 285)) "../src/motor.f":116 -1
     (nil))

;; _72 = *i_119(D);

(insn 352 351 353 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":118 -1
     (nil))

(insn 353 352 0 (set (reg:SF 158 [ _72 ])
        (mem:SF (reg/f:DI 287) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":118 -1
     (nil))

;; _73 = _72 - zloadi_151;

(insn 354 353 0 (set (reg:SF 159 [ _73 ])
        (minus:SF (reg:SF 158 [ _72 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32]))) "../src/motor.f":118 -1
     (nil))

;; _74 = ((_73));

(insn 355 354 0 (set (reg:SF 160 [ _74 ])
        (reg:SF 159 [ _73 ])) "../src/motor.f":118 -1
     (nil))

;; _75 = _74 / kqrad_114;

(insn 356 355 0 (set (reg:SF 161 [ _75 ])
        (div:SF (reg:SF 160 [ _74 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":118 -1
     (nil))

;; *q_153(D) = _75;

(insn 357 356 358 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 q+0 S8 A64])) "../src/motor.f":118 -1
     (nil))

(insn 358 357 0 (set (mem:SF (reg/f:DI 288) [2 *q_153(D)+0 S4 A32])
        (reg:SF 161 [ _75 ])) "../src/motor.f":118 -1
     (nil))

;; _76 = *i_omega_145(D);

(insn 359 358 360 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":119 -1
     (nil))

(insn 360 359 0 (set (reg:SF 162 [ _76 ])
        (mem:SF (reg/f:DI 289) [2 *i_omega_145(D)+0 S4 A32])) "../src/motor.f":119 -1
     (nil))

;; _77 = _76 - zloadi_omega_152;

(insn 361 360 0 (set (reg:SF 163 [ _77 ])
        (minus:SF (reg:SF 162 [ _76 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [2 zloadi_omega+0 S4 A32]))) "../src/motor.f":119 -1
     (nil))

;; _78 = ((_77));

(insn 362 361 0 (set (reg:SF 164 [ _78 ])
        (reg:SF 163 [ _77 ])) "../src/motor.f":119 -1
     (nil))

;; _79 = _78 / kqrad_114;

(insn 363 362 0 (set (reg:SF 165 [ _79 ])
        (div:SF (reg:SF 164 [ _78 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":119 -1
     (nil))

;; *q_omega_155(D) = _79;

(insn 364 363 365 (set (reg/f:DI 290)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 q_omega+0 S8 A64])) "../src/motor.f":119 -1
     (nil))

(insn 365 364 0 (set (mem:SF (reg/f:DI 290) [2 *q_omega_155(D)+0 S4 A32])
        (reg:SF 165 [ _79 ])) "../src/motor.f":119 -1
     (nil))

;; _80 = *i_volt_147(D);

(insn 366 365 367 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":120 -1
     (nil))

(insn 367 366 0 (set (reg:SF 166 [ _80 ])
        (mem:SF (reg/f:DI 291) [2 *i_volt_147(D)+0 S4 A32])) "../src/motor.f":120 -1
     (nil))

;; _81 = _80 / kqrad_114;

(insn 368 367 0 (set (reg:SF 167 [ _81 ])
        (div:SF (reg:SF 166 [ _80 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":120 -1
     (nil))

;; *q_volt_157(D) = _81;

(insn 369 368 370 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 q_volt+0 S8 A64])) "../src/motor.f":120 -1
     (nil))

(insn 370 369 0 (set (mem:SF (reg/f:DI 292) [2 *q_volt_157(D)+0 S4 A32])
        (reg:SF 167 [ _81 ])) "../src/motor.f":120 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 373 372 374 5 (nil) [0 uses])

(note 374 373 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.4.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};

(insn 375 374 376 (set (reg/f:DI 293)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":124 -1
     (nil))

(insn 376 375 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 293)) "../src/motor.f":124 -1
     (nil))

;; dt_parm.4.common.line = 124;

(insn 377 376 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.4.common.line+0 S4 A64])
        (const_int 124 [0x7c])) "../src/motor.f":124 -1
     (nil))

;; dt_parm.4.common.flags = 128;

(insn 378 377 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.4.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":124 -1
     (nil))

;; dt_parm.4.common.unit = 6;

(insn 379 378 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.4.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":124 -1
     (nil))

;; _gfortran_st_write (&dt_parm.4);

(insn 380 379 381 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))

(insn 381 380 382 (set (reg:DI 5 di)
        (reg:DI 294)) "../src/motor.f":124 -1
     (nil))

(call_insn 382 381 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.4, &"MOTORQ: Undefined motor type index:"[1]{lb: 1 sz: 1}, 35);

(insn 383 382 384 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))

(insn 384 383 385 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "../src/motor.f":124 -1
     (nil))

(insn 385 384 386 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC12") [flags 0x2]  <var_decl 0x1427fbc60 *lC12>)) "../src/motor.f":124 -1
     (nil))

(insn 386 385 387 (set (reg:DI 5 di)
        (reg:DI 295)) "../src/motor.f":124 -1
     (nil))

(call_insn 387 386 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_integer_write (&dt_parm.4, imotype_91(D), 4);

(insn 388 387 389 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":124 -1
     (nil))

(insn 389 388 390 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))

(insn 390 389 391 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":124 -1
     (nil))

(insn 391 390 392 (set (reg:DI 4 si)
        (reg:DI 296)) "../src/motor.f":124 -1
     (nil))

(insn 392 391 393 (set (reg:DI 5 di)
        (reg:DI 297)) "../src/motor.f":124 -1
     (nil))

(call_insn 393 392 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.4);

(insn 394 393 395 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))

(insn 395 394 396 (set (reg:DI 5 di)
        (reg:DI 298)) "../src/motor.f":124 -1
     (nil))

(call_insn 396 395 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.4 ={v} {CLOBBER};

(nil)

;; _gfortran_stop_string (0B, 0);

(insn 397 396 398 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":125 -1
     (nil))

(insn 398 397 399 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":125 -1
     (nil))

(call_insn 399 398 400 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":125 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(barrier 400 399 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 401 400 402 4 (nil) [0 uses])

(note 402 401 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 21

;; <L27> [0.00%]:

(code_label 403 402 404 13 (nil) [0 uses])

(note 404 403 0 NOTE_INSN_BASIC_BLOCK)
Purged non-fallthru edges from bb 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 112 from 24 to 26.
Edge 11->13 redirected to 14
Forwarding edge 11->12 to 15 failed.
Forwarding edge 11->12 to 15 failed.
deleting block 13
Redirecting jump 371 from 24 to 26.
deleting block 24
deleting block 25


try_optimize_cfg iteration 2

Forwarding edge 11->12 to 15 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])
        (reg:DI 5 di [ omega ])) "../src/motor.f":21 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])
        (reg:DI 4 si [ volt ])) "../src/motor.f":21 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])
        (reg:DI 1 dx [ imotype ])) "../src/motor.f":21 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])
        (reg:DI 2 cx [ parmot ])) "../src/motor.f":21 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])
        (reg:DI 37 r8 [ nmpar ])) "../src/motor.f":21 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 q+0 S8 A64])
        (reg:DI 38 r9 [ q ])) "../src/motor.f":21 -1
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":49 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 177) [1 *imotype_91(D)+0 S4 A32])) "../src/motor.f":49 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 1 [0x1]))) "../src/motor.f":49 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "../src/motor.f":49 -1
     (nil)
 -> 114)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":51 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 178) [1 *nmpar_102(D)+0 S4 A32])) "../src/motor.f":51 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ _2 ])
            (const_int 2 [0x2]))) "../src/motor.f":51 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "../src/motor.f":51 -1
     (nil)
 -> 53)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 179)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":53 -1
     (nil))
(insn 23 22 24 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.0.common.filename+0 S8 A64])
        (reg/f:DI 179)) "../src/motor.f":53 -1
     (nil))
(insn 24 23 25 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.0.common.line+0 S4 A64])
        (const_int 53 [0x35])) "../src/motor.f":53 -1
     (nil))
(insn 25 24 26 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.0.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":53 -1
     (nil))
(insn 26 25 27 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.0.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":53 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg:DI 180)) "../src/motor.f":53 -1
     (nil))
(call_insn 29 28 30 5 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":52 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 1 dx)
        (const_int 43 [0x2b])) "../src/motor.f":52 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC1") [flags 0x2]  <var_decl 0x1427fba20 *lC1>)) "../src/motor.f":52 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 5 di)
        (reg:DI 181)) "../src/motor.f":52 -1
     (nil))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":52 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 1 dx)
        (const_int 19 [0x13])) "../src/motor.f":53 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x1427fbab0 *lC2>)) "../src/motor.f":53 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg:DI 182)) "../src/motor.f":53 -1
     (nil))
(call_insn 39 38 40 5 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 40 39 41 5 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":53 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))
(insn 42 41 43 5 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":53 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 4 si)
        (reg:DI 183)) "../src/motor.f":53 -1
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg:DI 184)) "../src/motor.f":53 -1
     (nil))
(call_insn 45 44 46 5 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":53 -1
     (nil))
(insn 47 46 48 5 (set (reg:DI 5 di)
        (reg:DI 185)) "../src/motor.f":53 -1
     (nil))
(call_insn 48 47 49 5 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":53 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 5 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":54 -1
     (nil))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":54 -1
     (nil))
(call_insn 51 50 52 5 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":54 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      

(barrier 52 51 53)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 53 52 54 6 3 (nil) [1 uses])
(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":57 -1
     (nil))
(insn 56 55 57 6 (set (reg:SF 187)
        (mem:SF (reg/f:DI 186) [2 *parmot_103(D)+0 S4 A32])) "../src/motor.f":57 -1
     (nil))
(insn 57 56 58 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32])
        (reg:SF 187)) "../src/motor.f":57 -1
     (nil))
(insn 58 57 59 6 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":58 -1
     (nil))
(insn 59 58 60 6 (set (reg:SF 189)
        (mem:SF (plus:DI (reg/f:DI 188)
                (const_int 4 [0x4])) [2 *parmot_103(D)+4 S4 A32])) "../src/motor.f":58 -1
     (nil))
(insn 60 59 61 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32])
        (reg:SF 189)) "../src/motor.f":58 -1
     (nil))
(insn 61 60 62 6 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":59 -1
     (nil))
(insn 62 61 63 6 (set (reg:SF 191)
        (mem:SF (plus:DI (reg/f:DI 190)
                (const_int 8 [0x8])) [2 *parmot_103(D)+8 S4 A32])) "../src/motor.f":59 -1
     (nil))
(insn 63 62 64 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])
        (reg:SF 191)) "../src/motor.f":59 -1
     (nil))
(insn 64 63 65 6 (set (reg:SF 89 [ pi.7_3 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":61 -1
     (nil))
(insn 65 64 66 6 (set (reg:SF 90 [ _4 ])
        (mult:SF (reg:SF 89 [ pi.7_3 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":61 -1
     (nil))
(insn 66 65 67 6 (set (reg:SF 193)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":61 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 67 66 68 6 (set (reg:SF 192)
        (div:SF (reg:SF 90 [ _4 ])
            (reg:SF 193))) "../src/motor.f":61 -1
     (nil))
(insn 68 67 69 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])
        (reg:SF 192)) "../src/motor.f":61 -1
     (nil))
(insn 69 68 70 6 (set (reg:SF 194)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])) "../src/motor.f":62 -1
     (nil))
(insn 70 69 71 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32])
        (reg:SF 194)) "../src/motor.f":62 -1
     (nil))
(insn 71 70 72 6 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":64 -1
     (nil))
(insn 72 71 73 6 (set (reg:SF 91 [ _5 ])
        (mem:SF (reg/f:DI 195) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":64 -1
     (nil))
(insn 73 72 74 6 (set (reg:SF 196)
        (div:SF (reg:SF 91 [ _5 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":64 -1
     (nil))
(insn 74 73 75 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32])
        (reg:SF 196)) "../src/motor.f":64 -1
     (nil))
(insn 75 74 76 6 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":65 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 76 75 77 6 (set (reg:SF 197)
        (div:SF (reg:SF 198)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":65 -1
     (nil))
(insn 77 76 78 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])
        (reg:SF 197)) "../src/motor.f":65 -1
     (nil))
(insn 78 77 79 6 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":67 -1
     (nil))
(insn 79 78 80 6 (set (reg:SF 92 [ _6 ])
        (mem:SF (reg/f:DI 199) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":67 -1
     (nil))
(insn 80 79 81 6 (set (reg:SF 93 [ _7 ])
        (minus:SF (reg:SF 92 [ _6 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":67 -1
     (nil))
(insn 81 80 82 6 (set (reg:SF 94 [ _8 ])
        (reg:SF 93 [ _7 ])) "../src/motor.f":67 -1
     (nil))
(insn 82 81 83 6 (set (reg:SF 95 [ _9 ])
        (div:SF (reg:SF 94 [ _8 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":67 -1
     (nil))
(insn 83 82 84 6 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":67 -1
     (nil))
(insn 84 83 85 6 (set (mem:SF (reg/f:DI 200) [2 *i_119(D)+0 S4 A32])
        (reg:SF 95 [ _9 ])) "../src/motor.f":67 -1
     (nil))
(insn 85 84 86 6 (set (reg:SF 201)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])) "../src/motor.f":68 -1
     (nil))
(insn 86 85 87 6 (set (reg:SF 96 [ _10 ])
        (div:SF (reg:SF 201)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":68 -1
     (nil))
(insn 87 86 88 6 (set (reg:V4SF 202)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":68 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 88 87 89 6 (parallel [
            (set (reg:SF 97 [ _11 ])
                (neg:SF (reg:SF 96 [ _10 ])))
            (use (reg:V4SF 202))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":68 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 96 [ _10 ]))
        (nil)))
(insn 89 88 90 6 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":68 -1
     (nil))
(insn 90 89 91 6 (set (mem:SF (reg/f:DI 203) [2 *i_omega_145(D)+0 S4 A32])
        (reg:SF 97 [ _11 ])) "../src/motor.f":68 -1
     (nil))
(insn 91 90 92 6 (set (reg:SF 204)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":69 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 92 91 93 6 (set (reg:SF 98 [ _12 ])
        (div:SF (reg:SF 204)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])) [2 rmotor+0 S4 A32]))) "../src/motor.f":69 -1
     (nil))
(insn 93 92 94 6 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":69 -1
     (nil))
(insn 94 93 95 6 (set (mem:SF (reg/f:DI 205) [2 *i_volt_147(D)+0 S4 A32])
        (reg:SF 98 [ _12 ])) "../src/motor.f":69 -1
     (nil))
(insn 95 94 96 6 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":71 -1
     (nil))
(insn 96 95 97 6 (set (reg:SF 99 [ _13 ])
        (mem:SF (reg/f:DI 206) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":71 -1
     (nil))
(insn 97 96 98 6 (set (reg:SF 100 [ _14 ])
        (minus:SF (reg:SF 99 [ _13 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32]))) "../src/motor.f":71 -1
     (nil))
(insn 98 97 99 6 (set (reg:SF 101 [ _15 ])
        (reg:SF 100 [ _14 ])) "../src/motor.f":71 -1
     (nil))
(insn 99 98 100 6 (set (reg:SF 102 [ _16 ])
        (div:SF (reg:SF 101 [ _15 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":71 -1
     (nil))
(insn 100 99 101 6 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 q+0 S8 A64])) "../src/motor.f":71 -1
     (nil))
(insn 101 100 102 6 (set (mem:SF (reg/f:DI 207) [2 *q_153(D)+0 S4 A32])
        (reg:SF 102 [ _16 ])) "../src/motor.f":71 -1
     (nil))
(insn 102 101 103 6 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":72 -1
     (nil))
(insn 103 102 104 6 (set (reg:SF 103 [ _17 ])
        (mem:SF (reg/f:DI 208) [2 *i_omega_145(D)+0 S4 A32])) "../src/motor.f":72 -1
     (nil))
(insn 104 103 105 6 (set (reg:SF 104 [ _18 ])
        (div:SF (reg:SF 103 [ _17 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":72 -1
     (nil))
(insn 105 104 106 6 (set (reg/f:DI 209)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 q_omega+0 S8 A64])) "../src/motor.f":72 -1
     (nil))
(insn 106 105 107 6 (set (mem:SF (reg/f:DI 209) [2 *q_omega_155(D)+0 S4 A32])
        (reg:SF 104 [ _18 ])) "../src/motor.f":72 -1
     (nil))
(insn 107 106 108 6 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":73 -1
     (nil))
(insn 108 107 109 6 (set (reg:SF 105 [ _19 ])
        (mem:SF (reg/f:DI 210) [2 *i_volt_147(D)+0 S4 A32])) "../src/motor.f":73 -1
     (nil))
(insn 109 108 110 6 (set (reg:SF 106 [ _20 ])
        (div:SF (reg:SF 105 [ _19 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":73 -1
     (nil))
(insn 110 109 111 6 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 q_volt+0 S8 A64])) "../src/motor.f":73 -1
     (nil))
(insn 111 110 112 6 (set (mem:SF (reg/f:DI 211) [2 *q_volt_157(D)+0 S4 A32])
        (reg:SF 106 [ _20 ])) "../src/motor.f":73 -1
     (nil))
(jump_insn 112 111 113 6 (set (pc)
        (label_ref:DI 405)) 649 {jump}
     (nil)
 -> 405)
;;  succ:       26 [100.0%] 

(barrier 113 112 114)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 114 113 115 7 2 (nil) [1 uses])
(note 115 114 116 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 7 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":75 -1
     (nil))
(insn 117 116 118 7 (set (reg:SI 107 [ _21 ])
        (mem:SI (reg/f:DI 212) [1 *imotype_91(D)+0 S4 A32])) "../src/motor.f":75 -1
     (nil))
(insn 118 117 119 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ _21 ])
            (const_int 2 [0x2]))) "../src/motor.f":75 -1
     (nil))
(jump_insn 119 118 120 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) "../src/motor.f":75 -1
     (nil)
 -> 373)
;;  succ:       8 (FALLTHRU)
;;              23

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 120 119 121 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 8 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":77 -1
     (nil))
(insn 122 121 123 8 (set (reg:SI 108 [ _22 ])
        (mem:SI (reg/f:DI 213) [1 *nmpar_102(D)+0 S4 A32])) "../src/motor.f":77 -1
     (nil))
(insn 123 122 124 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 108 [ _22 ])
            (const_int 2 [0x2]))) "../src/motor.f":77 -1
     (nil))
(jump_insn 124 123 125 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "../src/motor.f":77 -1
     (nil)
 -> 157)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 125 124 126 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 9 (set (reg/f:DI 214)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":79 -1
     (nil))
(insn 127 126 128 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.1.common.filename+0 S8 A64])
        (reg/f:DI 214)) "../src/motor.f":79 -1
     (nil))
(insn 128 127 129 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.1.common.line+0 S4 A64])
        (const_int 79 [0x4f])) "../src/motor.f":79 -1
     (nil))
(insn 129 128 130 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.1.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":79 -1
     (nil))
(insn 130 129 131 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.1.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":79 -1
     (nil))
(insn 131 130 132 9 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))
(insn 132 131 133 9 (set (reg:DI 5 di)
        (reg:DI 215)) "../src/motor.f":79 -1
     (nil))
(call_insn 133 132 134 9 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 134 133 135 9 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":78 -1
     (nil))
(insn 135 134 136 9 (set (reg:SI 1 dx)
        (const_int 50 [0x32])) "../src/motor.f":78 -1
     (nil))
(insn 136 135 137 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC6") [flags 0x2]  <var_decl 0x1427fbb40 *lC6>)) "../src/motor.f":78 -1
     (nil))
(insn 137 136 138 9 (set (reg:DI 5 di)
        (reg:DI 216)) "../src/motor.f":78 -1
     (nil))
(call_insn 138 137 139 9 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":78 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 139 138 140 9 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))
(insn 140 139 141 9 (set (reg:SI 1 dx)
        (const_int 19 [0x13])) "../src/motor.f":79 -1
     (nil))
(insn 141 140 142 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC2") [flags 0x2]  <var_decl 0x1427fbab0 *lC2>)) "../src/motor.f":79 -1
     (nil))
(insn 142 141 143 9 (set (reg:DI 5 di)
        (reg:DI 217)) "../src/motor.f":79 -1
     (nil))
(call_insn 143 142 144 9 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 144 143 145 9 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":79 -1
     (nil))
(insn 145 144 146 9 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))
(insn 146 145 147 9 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":79 -1
     (nil))
(insn 147 146 148 9 (set (reg:DI 4 si)
        (reg:DI 218)) "../src/motor.f":79 -1
     (nil))
(insn 148 147 149 9 (set (reg:DI 5 di)
        (reg:DI 219)) "../src/motor.f":79 -1
     (nil))
(call_insn 149 148 150 9 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 150 149 151 9 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":79 -1
     (nil))
(insn 151 150 152 9 (set (reg:DI 5 di)
        (reg:DI 220)) "../src/motor.f":79 -1
     (nil))
(call_insn 152 151 153 9 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 153 152 154 9 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":80 -1
     (nil))
(insn 154 153 155 9 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":80 -1
     (nil))
(call_insn 155 154 156 9 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":80 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      

(barrier 156 155 157)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
(code_label 157 156 158 10 6 (nil) [1 uses])
(note 158 157 159 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 10 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":83 -1
     (nil))
(insn 160 159 161 10 (set (reg:SF 222)
        (mem:SF (reg/f:DI 221) [2 *parmot_103(D)+0 S4 A32])) "../src/motor.f":83 -1
     (nil))
(insn 161 160 162 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32])
        (reg:SF 222)) "../src/motor.f":83 -1
     (nil))
(insn 162 161 163 10 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":84 -1
     (nil))
(insn 163 162 164 10 (set (reg:SF 224)
        (mem:SF (plus:DI (reg/f:DI 223)
                (const_int 4 [0x4])) [2 *parmot_103(D)+4 S4 A32])) "../src/motor.f":84 -1
     (nil))
(insn 164 163 165 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 zloadi0+0 S4 A32])
        (reg:SF 224)) "../src/motor.f":84 -1
     (nil))
(insn 165 164 166 10 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":85 -1
     (nil))
(insn 166 165 167 10 (set (reg:SF 226)
        (mem:SF (plus:DI (reg/f:DI 225)
                (const_int 8 [0x8])) [2 *parmot_103(D)+8 S4 A32])) "../src/motor.f":85 -1
     (nil))
(insn 167 166 168 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])
        (reg:SF 226)) "../src/motor.f":85 -1
     (nil))
(insn 168 167 169 10 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":86 -1
     (nil))
(insn 169 168 170 10 (set (reg:SF 228)
        (mem:SF (plus:DI (reg/f:DI 227)
                (const_int 12 [0xc])) [2 *parmot_103(D)+12 S4 A32])) "../src/motor.f":86 -1
     (nil))
(insn 170 169 171 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32])
        (reg:SF 228)) "../src/motor.f":86 -1
     (nil))
(insn 171 170 172 10 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":87 -1
     (nil))
(insn 172 171 173 10 (set (reg:SF 230)
        (mem:SF (plus:DI (reg/f:DI 229)
                (const_int 16 [0x10])) [2 *parmot_103(D)+16 S4 A32])) "../src/motor.f":87 -1
     (nil))
(insn 173 172 174 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32])
        (reg:SF 230)) "../src/motor.f":87 -1
     (nil))
(insn 174 173 175 10 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":88 -1
     (nil))
(insn 175 174 176 10 (set (reg:SF 232)
        (mem:SF (plus:DI (reg/f:DI 231)
                (const_int 20 [0x14])) [2 *parmot_103(D)+20 S4 A32])) "../src/motor.f":88 -1
     (nil))
(insn 176 175 177 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32])
        (reg:SF 232)) "../src/motor.f":88 -1
     (nil))
(insn 177 176 178 10 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":89 -1
     (nil))
(insn 178 177 179 10 (set (reg:SF 234)
        (mem:SF (plus:DI (reg/f:DI 233)
                (const_int 24 [0x18])) [2 *parmot_103(D)+24 S4 A32])) "../src/motor.f":89 -1
     (nil))
(insn 179 178 180 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32])
        (reg:SF 234)) "../src/motor.f":89 -1
     (nil))
(insn 180 179 181 10 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":90 -1
     (nil))
(insn 181 180 182 10 (set (reg:SF 236)
        (mem:SF (plus:DI (reg/f:DI 235)
                (const_int 28 [0x1c])) [2 *parmot_103(D)+28 S4 A32])) "../src/motor.f":90 -1
     (nil))
(insn 182 181 183 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32])
        (reg:SF 236)) "../src/motor.f":90 -1
     (nil))
(insn 183 182 184 10 (set (reg:SF 237)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [2  S4 A32])) "../src/motor.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 184 183 185 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 237)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":93 -1
     (nil))
(jump_insn 185 184 407 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "../src/motor.f":93 -1
     (nil)
 -> 195)
;;  succ:       15
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 407 185 186 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 186 407 187 11 (set (reg:SF 238)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC7") [flags 0x2]) [2  S4 A32])) "../src/motor.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 187 186 188 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 238)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":93 -1
     (nil))
(jump_insn 188 187 408 11 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 410)
            (pc))) "../src/motor.f":93 617 {*jcc_1}
     (nil)
 -> 410)
;;  succ:       14
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
(note 408 188 189 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 408 190 12 (set (pc)
        (label_ref 195)) "../src/motor.f":93 -1
     (nil)
 -> 195)
;;  succ:       15

(barrier 190 189 410)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 410 190 192 14 14 (nil) [1 uses])
(note 192 410 193 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 14 (set (reg:SF 239)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32])) "../src/motor.f":93 -1
     (nil))
(insn 194 193 195 14 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32])
        (reg:SF 239)) "../src/motor.f":93 -1
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
;;              10
;;              12
(code_label 195 194 196 15 7 (nil) [2 uses])
(note 196 195 197 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 15 (set (reg:SF 109 [ pi.8_23 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":95 -1
     (nil))
(insn 198 197 199 15 (set (reg:SF 110 [ _24 ])
        (mult:SF (reg:SF 109 [ pi.8_23 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":95 -1
     (nil))
(insn 199 198 200 15 (set (reg:SF 241)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":95 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 200 199 201 15 (set (reg:SF 240)
        (div:SF (reg:SF 110 [ _24 ])
            (reg:SF 241))) "../src/motor.f":95 -1
     (nil))
(insn 201 200 202 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32])
        (reg:SF 240)) "../src/motor.f":95 -1
     (nil))
(insn 202 201 203 15 (set (reg:SF 111 [ pi.9_25 ])
        (mem/c:SF (symbol_ref:DI ("pi.3519") [flags 0x1c02]  <var_decl 0x142004f30 pi>) [2 pi+0 S4 A32])) "../src/motor.f":96 -1
     (nil))
(insn 203 202 204 15 (set (reg:SF 112 [ _26 ])
        (mult:SF (reg:SF 111 [ pi.9_25 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 kqrpm+0 S4 A32]))) "../src/motor.f":96 -1
     (nil))
(insn 204 203 205 15 (set (reg:SF 243)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":96 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 205 204 206 15 (set (reg:SF 242)
        (div:SF (reg:SF 112 [ _26 ])
            (reg:SF 243))) "../src/motor.f":96 -1
     (nil))
(insn 206 205 207 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32])
        (reg:SF 242)) "../src/motor.f":96 -1
     (nil))
(insn 207 206 208 15 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":98 -1
     (nil))
(insn 208 207 209 15 (set (reg:SF 113 [ _27 ])
        (mem:SF (reg/f:DI 244) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":98 -1
     (nil))
(insn 209 208 210 15 (set (reg:SF 114 [ _28 ])
        (mult:SF (reg:SF 113 [ _27 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32]))) "../src/motor.f":98 -1
     (nil))
(insn 210 209 211 15 (set (reg:SF 245)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":98 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 211 210 212 15 (set (reg:SF 115 [ _29 ])
        (plus:SF (reg:SF 114 [ _28 ])
            (reg:SF 245))) "../src/motor.f":98 -1
     (nil))
(insn 212 211 213 15 (set (reg:SF 116 [ _30 ])
        (reg:SF 115 [ _29 ])) "../src/motor.f":98 -1
     (nil))
(insn 213 212 214 15 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":98 -1
     (nil))
(insn 214 213 215 15 (set (reg:SF 117 [ _31 ])
        (mem:SF (reg/f:DI 246) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":98 -1
     (nil))
(insn 215 214 216 15 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 116 [ _30 ])
            (reg:SF 117 [ _31 ]))) "../src/motor.f":98 -1
     (nil))
(insn 216 215 217 15 (set (reg:SF 247)
        (div:SF (reg:SF 118 [ _32 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":98 -1
     (nil))
(insn 217 216 218 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32])
        (reg:SF 247)) "../src/motor.f":98 -1
     (nil))
(insn 218 217 219 15 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":99 -1
     (nil))
(insn 219 218 220 15 (set (reg:SF 119 [ _33 ])
        (mem:SF (reg/f:DI 248) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":99 -1
     (nil))
(insn 220 219 221 15 (set (reg:SF 120 [ _34 ])
        (mult:SF (reg:SF 119 [ _33 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 tau+0 S4 A32]))) "../src/motor.f":99 -1
     (nil))
(insn 221 220 222 15 (set (reg:SF 121 [ _35 ])
        (plus:SF (reg:SF 120 [ _34 ])
            (reg:SF 120 [ _34 ]))) "../src/motor.f":99 -1
     (nil))
(insn 222 221 223 15 (set (reg:SF 249)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":99 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 223 222 224 15 (set (reg:SF 122 [ _36 ])
        (plus:SF (reg:SF 121 [ _35 ])
            (reg:SF 249))) "../src/motor.f":99 -1
     (nil))
(insn 224 223 225 15 (set (reg:SF 123 [ _37 ])
        (reg:SF 122 [ _36 ])) "../src/motor.f":99 -1
     (nil))
(insn 225 224 226 15 (set (reg:SF 250)
        (div:SF (reg:SF 123 [ _37 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [2 kvrad+0 S4 A32]))) "../src/motor.f":99 -1
     (nil))
(insn 226 225 227 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])
        (reg:SF 250)) "../src/motor.f":99 -1
     (nil))
(insn 227 226 228 15 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":101 -1
     (nil))
(insn 228 227 229 15 (set (reg:SF 124 [ _38 ])
        (mem:SF (reg/f:DI 251) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":101 -1
     (nil))
(insn 229 228 230 15 (set (reg:SF 125 [ _39 ])
        (minus:SF (reg:SF 124 [ _38 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":101 -1
     (nil))
(insn 230 229 231 15 (set (reg:SF 126 [ _40 ])
        (reg:SF 125 [ _39 ])) "../src/motor.f":101 -1
     (nil))
(insn 231 230 232 15 (set (reg:SF 127 [ _41 ])
        (div:SF (reg:SF 126 [ _40 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32]))) "../src/motor.f":101 -1
     (nil))
(insn 232 231 233 15 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":101 -1
     (nil))
(insn 233 232 234 15 (set (mem:SF (reg/f:DI 252) [2 *i_119(D)+0 S4 A32])
        (reg:SF 127 [ _41 ])) "../src/motor.f":101 -1
     (nil))
(insn 234 233 296 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/motor.f":102 -1
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
;;              20 (DFS_BACK)
(code_label 296 234 235 16 12 (nil) [1 uses])
(note 235 296 236 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
            (const_int 10 [0xa]))) "../src/motor.f":102 -1
     (nil))
(insn 237 236 238 16 (set (reg:QI 169 [ _123 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/motor.f":102 -1
     (nil))
(insn 238 237 239 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ _123 ])
            (const_int 0 [0]))) "../src/motor.f":102 -1
     (nil))
(jump_insn 239 238 240 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) "../src/motor.f":102 -1
     (nil)
 -> 299)
;;  succ:       21
;;              17 (FALLTHRU)

;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 240 239 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 17 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":103 -1
     (nil))
(insn 242 241 243 17 (set (reg:SF 170 [ _124 ])
        (mem:SF (reg/f:DI 253) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))
(insn 243 242 244 17 (set (reg:SF 171 [ _125 ])
        (mult:SF (reg:SF 170 [ _124 ])
            (reg:SF 170 [ _124 ]))) "../src/motor.f":103 -1
     (nil))
(insn 244 243 245 17 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":103 -1
     (nil))
(insn 245 244 246 17 (set (reg:SF 128 [ _42 ])
        (mem:SF (reg/f:DI 254) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))
(insn 246 245 247 17 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 171 [ _125 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))
(insn 247 246 248 17 (set (reg:SF 130 [ _44 ])
        (plus:SF (reg:SF 129 [ _43 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))
(insn 248 247 249 17 (set (reg:SF 131 [ _45 ])
        (reg:SF 130 [ _44 ])) "../src/motor.f":103 -1
     (nil))
(insn 249 248 250 17 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 128 [ _42 ])
            (reg:SF 131 [ _45 ]))) "../src/motor.f":103 -1
     (nil))
(insn 250 249 251 17 (set (reg:SF 133 [ _47 ])
        (plus:SF (reg:SF 132 [ _46 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [2 vm+0 S4 A32]))) "../src/motor.f":103 -1
     (nil))
(insn 251 250 252 17 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":103 -1
     (nil))
(insn 252 251 253 17 (set (reg:SF 134 [ _48 ])
        (mem:SF (reg/f:DI 255) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":103 -1
     (nil))
(insn 253 252 254 17 (set (reg:SF 256)
        (minus:SF (reg:SF 133 [ _47 ])
            (reg:SF 134 [ _48 ]))) "../src/motor.f":103 -1
     (nil))
(insn 254 253 255 17 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])
        (reg:SF 256)) "../src/motor.f":103 -1
     (nil))
(insn 255 254 256 17 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":104 -1
     (nil))
(insn 256 255 257 17 (set (reg:SF 172 [ _127 ])
        (mem:SF (reg/f:DI 257) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":104 -1
     (nil))
(insn 257 256 258 17 (set (reg:SF 173 [ _128 ])
        (mult:SF (reg:SF 172 [ _127 ])
            (reg:SF 172 [ _127 ]))) "../src/motor.f":104 -1
     (nil))
(insn 258 257 259 17 (set (reg:SF 258)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 rmotor2+0 S4 A32])) "../src/motor.f":104 -1
     (nil))
(insn 259 258 260 17 (set (reg:SF 259)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC8") [flags 0x2]) [2  S4 A32])) "../src/motor.f":104 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+0 [0x0.cp+2])
        (nil)))
(insn 260 259 261 17 (set (reg:SF 135 [ _49 ])
        (mult:SF (reg:SF 258)
            (reg:SF 259))) "../src/motor.f":104 -1
     (nil))
(insn 261 260 262 17 (set (reg:SF 136 [ _50 ])
        (mult:SF (reg:SF 173 [ _128 ])
            (reg:SF 135 [ _49 ]))) "../src/motor.f":104 -1
     (nil))
(insn 262 261 263 17 (set (reg:SF 261)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 rmotor0+0 S4 A32])) "../src/motor.f":104 -1
     (nil))
(insn 263 262 264 17 (set (reg:SF 260)
        (plus:SF (reg:SF 261)
            (reg:SF 136 [ _50 ]))) "../src/motor.f":104 -1
     (nil))
(insn 264 263 265 17 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32])
        (reg:SF 260)) "../src/motor.f":104 -1
     (nil))
(insn 265 264 266 17 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":105 -1
     (nil))
(insn 266 265 267 17 (set (reg:SF 137 [ _51 ])
        (mem:SF (reg/f:DI 262) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":105 -1
     (nil))
(insn 267 266 268 17 (set (reg:SF 263)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])) "../src/motor.f":105 -1
     (nil))
(insn 268 267 269 17 (set (reg:SF 138 [ _52 ])
        (div:SF (reg:SF 263)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":105 -1
     (nil))
(insn 269 268 270 17 (set (reg:SF 139 [ _53 ])
        (minus:SF (reg:SF 137 [ _51 ])
            (reg:SF 138 [ _52 ]))) "../src/motor.f":105 -1
     (nil))
(insn 270 269 271 17 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":105 -1
     (nil))
(insn 271 270 272 17 (set (mem:SF (reg/f:DI 264) [2 *i_119(D)+0 S4 A32])
        (reg:SF 139 [ _53 ])) "../src/motor.f":105 -1
     (nil))
(insn 272 271 273 17 (set (reg:SF 168 [ M.2_86 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 273 272 274 17 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 volt+0 S8 A64])) "../src/motor.f":106 -1
     (nil))
(insn 274 273 275 17 (set (reg:SF 140 [ _54 ])
        (mem:SF (reg/f:DI 265) [2 *volt_118(D)+0 S4 A32])) "../src/motor.f":106 -1
     (nil))
(insn 275 274 276 17 (set (reg:V4SF 266)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 276 275 277 17 (parallel [
            (set (reg:SF 174 [ _132 ])
                (abs:SF (reg:SF 140 [ _54 ])))
            (use (reg:V4SF 266))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 140 [ _54 ]))
        (nil)))
(insn 277 276 278 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 174 [ _132 ])
            (reg:SF 168 [ M.2_86 ]))) "../src/motor.f":106 -1
     (nil))
(insn 278 277 279 17 (set (reg:QI 141 [ _55 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))
(insn 279 278 280 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 168 [ M.2_86 ])
            (reg:SF 168 [ M.2_86 ]))) "../src/motor.f":106 -1
     (nil))
(insn 280 279 281 17 (set (reg:QI 142 [ _56 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))
(insn 281 280 282 17 (parallel [
            (set (reg:QI 143 [ _57 ])
                (ior:QI (reg:QI 141 [ _55 ])
                    (reg:QI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (nil))
(insn 282 281 283 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 143 [ _57 ])
            (const_int 0 [0]))) "../src/motor.f":106 -1
     (nil))
(jump_insn 283 282 284 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "../src/motor.f":106 -1
     (nil)
 -> 285)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
(note 284 283 9 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 9 284 285 18 (set (reg:SF 168 [ M.2_86 ])
        (reg:SF 174 [ _132 ])) "../src/motor.f":106 -1
     (nil))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              18 (FALLTHRU)
(code_label 285 9 286 19 10 (nil) [1 uses])
(note 286 285 287 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 19 (set (reg:SF 267)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 res+0 S4 A32])) "../src/motor.f":106 -1
     (nil))
(insn 288 287 289 19 (set (reg:V4SF 268)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 289 288 290 19 (parallel [
            (set (reg:SF 144 [ _58 ])
                (abs:SF (reg:SF 267)))
            (use (reg:V4SF 268))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":106 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 267))
        (nil)))
(insn 290 289 291 19 (set (reg:SF 145 [ eps.10_59 ])
        (mem/c:SF (symbol_ref:DI ("eps.3513") [flags 0x1c02]  <var_decl 0x142004bd0 eps>) [2 eps+0 S4 A32])) "../src/motor.f":106 -1
     (nil))
(insn 291 290 292 19 (set (reg:SF 146 [ _60 ])
        (mult:SF (reg:SF 168 [ M.2_86 ])
            (reg:SF 145 [ eps.10_59 ]))) "../src/motor.f":106 -1
     (nil))
(insn 292 291 293 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 146 [ _60 ])
            (reg:SF 144 [ _58 ]))) "../src/motor.f":106 -1
     (nil))
(jump_insn 293 292 294 19 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) "../src/motor.f":106 -1
     (nil)
 -> 317)
;;  succ:       22
;;              20 (FALLTHRU)

;; basic block 20, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 294 293 295 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 297 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":102 -1
     (nil))
(jump_insn 297 295 298 20 (set (pc)
        (label_ref 296)) "../src/motor.f":102 -1
     (nil)
 -> 296)
;;  succ:       16 (DFS_BACK)

(barrier 298 297 299)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 299 298 300 21 9 (nil) [1 uses])
(note 300 299 301 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 21 (set (reg/f:DI 269)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":108 -1
     (nil))
(insn 302 301 303 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.3.common.filename+0 S8 A64])
        (reg/f:DI 269)) "../src/motor.f":108 -1
     (nil))
(insn 303 302 304 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.3.common.line+0 S4 A64])
        (const_int 108 [0x6c])) "../src/motor.f":108 -1
     (nil))
(insn 304 303 305 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.3.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":108 -1
     (nil))
(insn 305 304 306 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.3.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":108 -1
     (nil))
(insn 306 305 307 21 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))
(insn 307 306 308 21 (set (reg:DI 5 di)
        (reg:DI 270)) "../src/motor.f":108 -1
     (nil))
(call_insn 308 307 309 21 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 309 308 310 21 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))
(insn 310 309 311 21 (set (reg:SI 1 dx)
        (const_int 33 [0x21])) "../src/motor.f":108 -1
     (nil))
(insn 311 310 312 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC10") [flags 0x2]  <var_decl 0x1427fbbd0 *lC10>)) "../src/motor.f":108 -1
     (nil))
(insn 312 311 313 21 (set (reg:DI 5 di)
        (reg:DI 271)) "../src/motor.f":108 -1
     (nil))
(call_insn 313 312 314 21 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 314 313 315 21 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":108 -1
     (nil))
(insn 315 314 316 21 (set (reg:DI 5 di)
        (reg:DI 272)) "../src/motor.f":108 -1
     (nil))
(call_insn 316 315 317 21 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;;              21 (FALLTHRU)
(code_label 317 316 318 22 11 (nil) [1 uses])
(note 318 317 319 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 22 (set (reg:SF 273)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 vm_omega+0 S4 A32])) "../src/motor.f":110 -1
     (nil))
(insn 320 319 321 22 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 res_omega+0 S4 A32])
        (reg:SF 273)) "../src/motor.f":110 -1
     (nil))
(insn 321 320 322 22 (set (reg:SF 274)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [2  S4 A32])) "../src/motor.f":111 -1
     (nil))
(insn 322 321 323 22 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res_volt+0 S4 A32])
        (reg:SF 274)) "../src/motor.f":111 -1
     (nil))
(insn 323 322 324 22 (set (reg:SF 275)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 res_omega+0 S4 A32])) "../src/motor.f":112 -1
     (nil))
(insn 324 323 325 22 (set (reg:SF 147 [ _61 ])
        (div:SF (reg:SF 275)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":112 -1
     (nil))
(insn 325 324 326 22 (set (reg:V4SF 276)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":112 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 326 325 327 22 (parallel [
            (set (reg:SF 148 [ _62 ])
                (neg:SF (reg:SF 147 [ _61 ])))
            (use (reg:V4SF 276))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":112 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 147 [ _61 ]))
        (nil)))
(insn 327 326 328 22 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":112 -1
     (nil))
(insn 328 327 329 22 (set (mem:SF (reg/f:DI 277) [2 *i_omega_145(D)+0 S4 A32])
        (reg:SF 148 [ _62 ])) "../src/motor.f":112 -1
     (nil))
(insn 329 328 330 22 (set (reg:SF 278)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res_volt+0 S4 A32])) "../src/motor.f":113 -1
     (nil))
(insn 330 329 331 22 (set (reg:SF 149 [ _63 ])
        (div:SF (reg:SF 278)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 res_i+0 S4 A32]))) "../src/motor.f":113 -1
     (nil))
(insn 331 330 332 22 (set (reg:V4SF 279)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":113 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 332 331 333 22 (parallel [
            (set (reg:SF 150 [ _64 ])
                (neg:SF (reg:SF 149 [ _63 ])))
            (use (reg:V4SF 279))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":113 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 149 [ _63 ]))
        (nil)))
(insn 333 332 334 22 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":113 -1
     (nil))
(insn 334 333 335 22 (set (mem:SF (reg/f:DI 280) [2 *i_volt_147(D)+0 S4 A32])
        (reg:SF 150 [ _64 ])) "../src/motor.f":113 -1
     (nil))
(insn 335 334 336 22 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":115 -1
     (nil))
(insn 336 335 337 22 (set (reg:SF 175 [ _149 ])
        (mem:SF (reg/f:DI 281) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":115 -1
     (nil))
(insn 337 336 338 22 (set (reg:SF 176 [ _150 ])
        (mult:SF (reg:SF 175 [ _149 ])
            (reg:SF 175 [ _149 ]))) "../src/motor.f":115 -1
     (nil))
(insn 338 337 339 22 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":115 -1
     (nil))
(insn 339 338 340 22 (set (reg:SF 151 [ _65 ])
        (mem:SF (reg/f:DI 282) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":115 -1
     (nil))
(insn 340 339 341 22 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 151 [ _65 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))
(insn 341 340 342 22 (set (reg:SF 153 [ _67 ])
        (plus:SF (reg:SF 152 [ _66 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 zloadi0+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))
(insn 342 341 343 22 (set (reg:SF 154 [ _68 ])
        (mult:SF (reg:SF 176 [ _150 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32]))) "../src/motor.f":115 -1
     (nil))
(insn 343 342 344 22 (set (reg:SF 283)
        (plus:SF (reg:SF 153 [ _67 ])
            (reg:SF 154 [ _68 ]))) "../src/motor.f":115 -1
     (nil))
(insn 344 343 345 22 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32])
        (reg:SF 283)) "../src/motor.f":115 -1
     (nil))
(insn 345 344 346 22 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":116 -1
     (nil))
(insn 346 345 347 22 (set (reg:SF 155 [ _69 ])
        (mem:SF (reg/f:DI 284) [2 *omega_115(D)+0 S4 A32])) "../src/motor.f":116 -1
     (nil))
(insn 347 346 348 22 (set (reg:SF 156 [ _70 ])
        (mult:SF (reg:SF 155 [ _69 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [2 zloadi2+0 S4 A32]))) "../src/motor.f":116 -1
     (nil))
(insn 348 347 349 22 (set (reg:SF 157 [ _71 ])
        (plus:SF (reg:SF 156 [ _70 ])
            (reg:SF 156 [ _70 ]))) "../src/motor.f":116 -1
     (nil))
(insn 349 348 350 22 (set (reg:SF 286)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 zloadi1+0 S4 A32])) "../src/motor.f":116 -1
     (nil))
(insn 350 349 351 22 (set (reg:SF 285)
        (plus:SF (reg:SF 286)
            (reg:SF 157 [ _71 ]))) "../src/motor.f":116 -1
     (nil))
(insn 351 350 352 22 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [2 zloadi_omega+0 S4 A32])
        (reg:SF 285)) "../src/motor.f":116 -1
     (nil))
(insn 352 351 353 22 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 i+0 S8 A64])) "../src/motor.f":118 -1
     (nil))
(insn 353 352 354 22 (set (reg:SF 158 [ _72 ])
        (mem:SF (reg/f:DI 287) [2 *i_119(D)+0 S4 A32])) "../src/motor.f":118 -1
     (nil))
(insn 354 353 355 22 (set (reg:SF 159 [ _73 ])
        (minus:SF (reg:SF 158 [ _72 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [2 zloadi+0 S4 A32]))) "../src/motor.f":118 -1
     (nil))
(insn 355 354 356 22 (set (reg:SF 160 [ _74 ])
        (reg:SF 159 [ _73 ])) "../src/motor.f":118 -1
     (nil))
(insn 356 355 357 22 (set (reg:SF 161 [ _75 ])
        (div:SF (reg:SF 160 [ _74 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":118 -1
     (nil))
(insn 357 356 358 22 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 q+0 S8 A64])) "../src/motor.f":118 -1
     (nil))
(insn 358 357 359 22 (set (mem:SF (reg/f:DI 288) [2 *q_153(D)+0 S4 A32])
        (reg:SF 161 [ _75 ])) "../src/motor.f":118 -1
     (nil))
(insn 359 358 360 22 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 i_omega+0 S8 A64])) "../src/motor.f":119 -1
     (nil))
(insn 360 359 361 22 (set (reg:SF 162 [ _76 ])
        (mem:SF (reg/f:DI 289) [2 *i_omega_145(D)+0 S4 A32])) "../src/motor.f":119 -1
     (nil))
(insn 361 360 362 22 (set (reg:SF 163 [ _77 ])
        (minus:SF (reg:SF 162 [ _76 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [2 zloadi_omega+0 S4 A32]))) "../src/motor.f":119 -1
     (nil))
(insn 362 361 363 22 (set (reg:SF 164 [ _78 ])
        (reg:SF 163 [ _77 ])) "../src/motor.f":119 -1
     (nil))
(insn 363 362 364 22 (set (reg:SF 165 [ _79 ])
        (div:SF (reg:SF 164 [ _78 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":119 -1
     (nil))
(insn 364 363 365 22 (set (reg/f:DI 290)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 q_omega+0 S8 A64])) "../src/motor.f":119 -1
     (nil))
(insn 365 364 366 22 (set (mem:SF (reg/f:DI 290) [2 *q_omega_155(D)+0 S4 A32])
        (reg:SF 165 [ _79 ])) "../src/motor.f":119 -1
     (nil))
(insn 366 365 367 22 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 i_volt+0 S8 A64])) "../src/motor.f":120 -1
     (nil))
(insn 367 366 368 22 (set (reg:SF 166 [ _80 ])
        (mem:SF (reg/f:DI 291) [2 *i_volt_147(D)+0 S4 A32])) "../src/motor.f":120 -1
     (nil))
(insn 368 367 369 22 (set (reg:SF 167 [ _81 ])
        (div:SF (reg:SF 166 [ _80 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [2 kqrad+0 S4 A32]))) "../src/motor.f":120 -1
     (nil))
(insn 369 368 370 22 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 q_volt+0 S8 A64])) "../src/motor.f":120 -1
     (nil))
(insn 370 369 371 22 (set (mem:SF (reg/f:DI 292) [2 *q_volt_157(D)+0 S4 A32])
        (reg:SF 167 [ _81 ])) "../src/motor.f":120 -1
     (nil))
(jump_insn 371 370 372 22 (set (pc)
        (label_ref:DI 405)) 649 {jump}
     (nil)
 -> 405)
;;  succ:       26 [100.0%] 

(barrier 372 371 373)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 373 372 374 23 5 (nil) [1 uses])
(note 374 373 375 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 23 (set (reg/f:DI 293)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":124 -1
     (nil))
(insn 376 375 377 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.4.common.filename+0 S8 A64])
        (reg/f:DI 293)) "../src/motor.f":124 -1
     (nil))
(insn 377 376 378 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.4.common.line+0 S4 A64])
        (const_int 124 [0x7c])) "../src/motor.f":124 -1
     (nil))
(insn 378 377 379 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.4.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":124 -1
     (nil))
(insn 379 378 380 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.4.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":124 -1
     (nil))
(insn 380 379 381 23 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))
(insn 381 380 382 23 (set (reg:DI 5 di)
        (reg:DI 294)) "../src/motor.f":124 -1
     (nil))
(call_insn 382 381 383 23 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 383 382 384 23 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))
(insn 384 383 385 23 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "../src/motor.f":124 -1
     (nil))
(insn 385 384 386 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC12") [flags 0x2]  <var_decl 0x1427fbc60 *lC12>)) "../src/motor.f":124 -1
     (nil))
(insn 386 385 387 23 (set (reg:DI 5 di)
        (reg:DI 295)) "../src/motor.f":124 -1
     (nil))
(call_insn 387 386 388 23 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 388 387 389 23 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":124 -1
     (nil))
(insn 389 388 390 23 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))
(insn 390 389 391 23 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":124 -1
     (nil))
(insn 391 390 392 23 (set (reg:DI 4 si)
        (reg:DI 296)) "../src/motor.f":124 -1
     (nil))
(insn 392 391 393 23 (set (reg:DI 5 di)
        (reg:DI 297)) "../src/motor.f":124 -1
     (nil))
(call_insn 393 392 394 23 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x1427d4500 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 394 393 395 23 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":124 -1
     (nil))
(insn 395 394 396 23 (set (reg:DI 5 di)
        (reg:DI 298)) "../src/motor.f":124 -1
     (nil))
(call_insn 396 395 397 23 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 397 396 398 23 (set (reg:SI 4 si)
        (const_int 0 [0])) "../src/motor.f":125 -1
     (nil))
(insn 398 397 399 23 (set (reg:DI 5 di)
        (const_int 0 [0])) "../src/motor.f":125 -1
     (nil))
(call_insn 399 398 400 23 (call (mem:QI (symbol_ref:DI ("_gfortran_stop_string") [flags 0x41]  <function_decl 0x1427c2200 _gfortran_stop_string>) [0 _gfortran_stop_string S1 A8])
        (const_int 0 [0])) "../src/motor.f":125 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:      

(barrier 400 399 405)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [100.0%] 
;;              6 [100.0%] 
(code_label 405 400 406 26 1 (nil) [2 uses])
(note 406 405 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function voltm (voltm_, funcdef_no=1, decl_uid=3557, cgraph_uid=1, symbol_order=1)

voltm (real(kind=4) & restrict omega, real(kind=4) & restrict q, integer(kind=4) & restrict imotype, real(kind=4)[0:] * restrict parmot, integer(kind=4) & restrict nmpar, real(kind=4) & restrict volt, real(kind=4) & restrict volt_omega, real(kind=4) & restrict volt_q, real(kind=4) & restrict amps, real(kind=4) & restrict amps_omega, real(kind=4) & restrict amps_q)
{
  struct __st_parameter_dt dt_parm.6;
  real(kind=4) D.3595;
  real(kind=4) M.5;
  logical(kind=1) D.3592;
  real(kind=4) zloadi;
  real(kind=4) rmotor;
  real(kind=4) res_volt;
  real(kind=4) res_q;
  real(kind=4) res_omega;
  real(kind=4) res;
  real(kind=4) qm_volt;
  real(kind=4) qm_omega;
  real(kind=4) qm;
  static real(kind=4) pi = 3.141592502593994140625e+0;
  real(kind=4) kvrpm;
  real(kind=4) kvrad;
  real(kind=4) kqrad;
  integer(kind=4) iter;
  static real(kind=4) eps = 9.999999974752427078783512115478515625e-7;
  real(kind=4) dvolt;
  real(kind=4) am_volt;
  real(kind=4) am_omega;
  real(kind=4) am;
  integer(kind=4) _1;
  real(kind=4) pi.11_2;
  real(kind=4) _3;
  real(kind=4) _4;
  real(kind=4) _5;
  real(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  real(kind=4) _10;
  real(kind=4) _11;
  integer(kind=4) _12;
  real(kind=4) pi.12_13;
  real(kind=4) _14;
  real(kind=4) _15;
  real(kind=4) _16;
  real(kind=4) _17;
  real(kind=4) _18;
  real(kind=4) _19;
  real(kind=4) _20;
  real(kind=4) _21;
  real(kind=4) _22;
  real(kind=4) qm.13_23;
  real(kind=4) _24;
  real(kind=4) _25;
  real(kind=4) res.14_26;
  real(kind=4) _27;
  real(kind=4) _28;
  logical(kind=1) _29;
  logical(kind=1) _30;
  logical(kind=1) _31;
  real(kind=4) _32;
  real(kind=4) eps.15_33;
  real(kind=4) _34;
  real(kind=4) _35;
  real(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) _41;
  real(kind=4) am_volt.16_42;
  real(kind=4) _43;
  real(kind=4) am_omega.17_44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) am_volt.18_47;
  real(kind=4) _48;
  real(kind=4) M.5_52;
  logical(kind=1) _80;
  real(kind=4) M.5_86;
  real(kind=4) _87;
  real(kind=4) M.5_88;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *imotype_57(D);
  if (_1 == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  rmotor_71 = *parmot_60(D)[0];
  zloadi_72 = *parmot_60(D)[1];
  kvrpm_73 = *parmot_60(D)[2];
  pi.11_2 = pi;
  _3 = kvrpm_73 * pi.11_2;
  kvrad_74 = _3 / 3.0e+1;
  kqrad_75 = kvrad_74;
  _4 = *q_66(D);
  _5 = kqrad_75 * _4;
  _6 = zloadi_72 + _5;
  *amps_67(D) = _6;
  _7 = *amps_67(D);
  _8 = rmotor_71 * _7;
  _9 = *omega_69(D);
  _10 = _9 / kvrad_74;
  _11 = _8 + _10;
  *volt_58(D) = _11;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _12 = *imotype_57(D);
  if (_12 == 2)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  rmotor_61 = *parmot_60(D)[0];
  zloadi_62 = *parmot_60(D)[1];
  kvrpm_63 = *parmot_60(D)[2];
  pi.12_13 = pi;
  _14 = kvrpm_63 * pi.12_13;
  kvrad_64 = _14 / 3.0e+1;
  kqrad_65 = kvrad_64;
  _15 = *q_66(D);
  _16 = kqrad_65 * _15;
  _17 = zloadi_62 + _16;
  *amps_67(D) = _17;
  _18 = *amps_67(D);
  _19 = rmotor_61 * _18;
  _20 = *omega_69(D);
  _21 = _20 / kvrad_64;
  _22 = _19 + _21;
  *volt_58(D) = _22;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  *volt_58(D) = 1.0e+0;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  iter_78 = 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                12
  # iter_49 = PHI <iter_78(7), iter_90(12)>
  # res_volt_50 = PHI <res_volt_79(D)(7), res_volt_84(12)>
  _80 = iter_49 > 20;
  if (_80 != 0)
    goto <bb 13>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  motorq (omega_69(D), volt_58(D), imotype_57(D), parmot_60(D), nmpar_81(D), &qm, &qm_omega, &qm_volt, &am, &am_omega, &am_volt);
  qm.13_23 = qm;
  _24 = *q_66(D);
  _25 = qm.13_23 - _24;
  res = _25;
  res_volt_84 = qm_volt;
  res.14_26 = res;
  _27 = res.14_26 / res_volt_84;
  dvolt_85 = -_27;
  M.5_86 = 1.0e+0;
  _28 = *volt_58(D);
  _87 = ABS_EXPR <_28>;
  _29 = _87 > M.5_86;
  _30 = M.5_86 unord M.5_86;
  _31 = _29 | _30;
  if (_31 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 1
;;    pred:       9
  M.5_88 = _87;
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       9
;;                10
  # M.5_52 = PHI <M.5_86(9), M.5_88(10)>
  _32 = ABS_EXPR <dvolt_85>;
  eps.15_33 = eps;
  _34 = M.5_52 * eps.15_33;
  if (_32 < _34)
    goto <bb 14>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       14
;;                12

;;   basic block 12, loop depth 1
;;    pred:       11
  _35 = *volt_58(D);
  _36 = dvolt_85 + _35;
  *volt_58(D) = _36;
  iter_90 = iter_49 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 13, loop depth 0
;;    pred:       8
  dt_parm.6.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.6.common.line = 198;
  dt_parm.6.common.flags = 128;
  dt_parm.6.common.unit = 6;
  _gfortran_st_write (&dt_parm.6);
  _gfortran_transfer_character_write (&dt_parm.6, &"** VOLTM: Voltage convergence failed. Res ="[1]{lb: 1 sz: 1}, 43);
  _gfortran_transfer_real_write (&dt_parm.6, &res, 4);
  _gfortran_st_write_done (&dt_parm.6);
  dt_parm.6 ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       11
;;                13
  # res_volt_51 = PHI <res_volt_84(11), res_volt_50(13)>
  res_omega_100 = qm_omega;
  res_q_101 = -1.0e+0;
  _37 = res_omega_100 / res_volt_51;
  _38 = -_37;
  *volt_omega_102(D) = _38;
  _39 = res_q_101 / res_volt_51;
  _40 = -_39;
  *volt_q_104(D) = _40;
  _41 = *volt_omega_102(D);
  am_volt.16_42 = am_volt;
  _43 = _41 * am_volt.16_42;
  am_omega.17_44 = am_omega;
  _45 = _43 + am_omega.17_44;
  *amps_omega_106(D) = _45;
  _46 = *volt_q_104(D);
  am_volt.18_47 = am_volt;
  _48 = _46 * am_volt.18_47;
  *amps_q_108(D) = _48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
  am ={v} {CLOBBER};
  am_omega ={v} {CLOBBER};
  am_volt ={v} {CLOBBER};
  qm ={v} {CLOBBER};
  qm_omega ={v} {CLOBBER};
  qm_volt ={v} {CLOBBER};
  res ={v} {CLOBBER};
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       15
<L18> [0.00%]:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (pi.11_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (pi.12_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (qm.13_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (res.14_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (eps.15_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (am_volt.16_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (am_omega.17_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (am_volt.18_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (iter_49 - 49 )
Partition 50 (res_volt_50 - 50 )
Partition 51 (res_volt_51 - 51 )
Partition 52 (M.5_52 - 52 )
Partition 57 (imotype_57(D) - 57 )
Partition 58 (volt_58(D) - 58 )
Partition 60 (parmot_60(D) - 60 )
Partition 61 (rmotor_61 - 61 )
Partition 62 (zloadi_62 - 62 )
Partition 63 (kvrpm_63 - 63 )
Partition 64 (kvrad_64 - 64 )
Partition 65 (kqrad_65 - 65 )
Partition 66 (q_66(D) - 66 )
Partition 67 (amps_67(D) - 67 )
Partition 69 (omega_69(D) - 69 )
Partition 71 (rmotor_71 - 71 )
Partition 72 (zloadi_72 - 72 )
Partition 73 (kvrpm_73 - 73 )
Partition 74 (kvrad_74 - 74 )
Partition 75 (kqrad_75 - 75 )
Partition 78 (iter_78 - 78 )
Partition 79 (res_volt_79(D) - 79 )
Partition 80 (_80 - 80 )
Partition 81 (nmpar_81(D) - 81 )
Partition 84 (res_volt_84 - 84 )
Partition 85 (dvolt_85 - 85 )
Partition 86 (M.5_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (M.5_88 - 88 )
Partition 90 (iter_90 - 90 )
Partition 100 (res_omega_100 - 100 )
Partition 101 (res_q_101 - 101 )
Partition 102 (volt_omega_102(D) - 102 )
Partition 104 (volt_q_104(D) - 104 )
Partition 106 (amps_omega_106(D) - 106 )
Partition 108 (amps_q_108(D) - 108 )


Partition map 

Partition 0 (iter_49 - 49 )
Partition 1 (res_volt_50 - 50 )
Partition 2 (res_volt_51 - 51 )
Partition 3 (M.5_52 - 52 )
Partition 4 (imotype_57(D) - 57 )
Partition 5 (volt_58(D) - 58 )
Partition 6 (parmot_60(D) - 60 )
Partition 7 (rmotor_61 - 61 )
Partition 8 (zloadi_62 - 62 )
Partition 9 (kvrpm_63 - 63 )
Partition 10 (kvrad_64 - 64 )
Partition 11 (kqrad_65 - 65 )
Partition 12 (q_66(D) - 66 )
Partition 13 (amps_67(D) - 67 )
Partition 14 (omega_69(D) - 69 )
Partition 15 (rmotor_71 - 71 )
Partition 16 (zloadi_72 - 72 )
Partition 17 (kvrpm_73 - 73 )
Partition 18 (kvrad_74 - 74 )
Partition 19 (kqrad_75 - 75 )
Partition 20 (iter_78 - 78 )
Partition 21 (res_volt_79(D) - 79 )
Partition 22 (nmpar_81(D) - 81 )
Partition 23 (res_volt_84 - 84 )
Partition 24 (M.5_86 - 86 )
Partition 25 (_87 - 87 )
Partition 26 (M.5_88 - 88 )
Partition 27 (iter_90 - 90 )
Partition 28 (volt_omega_102(D) - 102 )
Partition 29 (volt_q_104(D) - 104 )
Partition 30 (amps_omega_106(D) - 106 )
Partition 31 (amps_q_108(D) - 108 )


Conflict graph:
24: 25
25: 24

After sorting:
Sorted Coalesce list:
(2147483646, 0) res_volt_50 <-> res_volt_84
(2147483646, 0) res_volt_50 <-> res_volt_51
(2147483646, 0) rmotor_61 <-> rmotor_71
(2147483646, 0) zloadi_62 <-> zloadi_72
(2147483646, 0) kvrpm_63 <-> kvrpm_73
(2147483646, 0) kvrad_64 <-> kvrad_74
(2147483646, 0) kqrad_65 <-> kqrad_75
(2147483646, 0) iter_49 <-> iter_78
(2147483646, 0) res_volt_50 <-> res_volt_79(D)
(2147483646, 0) iter_49 <-> iter_90
(2, 0) M.5_52 <-> M.5_86
(2, 0) res_volt_51 <-> res_volt_84
(1, 0) _87 <-> M.5_88

Partition map 

Partition 0 (iter_49 - 49 )
Partition 1 (res_volt_50 - 50 )
Partition 2 (res_volt_51 - 51 )
Partition 3 (M.5_52 - 52 )
Partition 4 (imotype_57(D) - 57 )
Partition 5 (volt_58(D) - 58 )
Partition 6 (parmot_60(D) - 60 )
Partition 7 (rmotor_61 - 61 )
Partition 8 (zloadi_62 - 62 )
Partition 9 (kvrpm_63 - 63 )
Partition 10 (kvrad_64 - 64 )
Partition 11 (kqrad_65 - 65 )
Partition 12 (q_66(D) - 66 )
Partition 13 (amps_67(D) - 67 )
Partition 14 (omega_69(D) - 69 )
Partition 15 (rmotor_71 - 71 )
Partition 16 (zloadi_72 - 72 )
Partition 17 (kvrpm_73 - 73 )
Partition 18 (kvrad_74 - 74 )
Partition 19 (kqrad_75 - 75 )
Partition 20 (iter_78 - 78 )
Partition 21 (res_volt_79(D) - 79 )
Partition 22 (nmpar_81(D) - 81 )
Partition 23 (res_volt_84 - 84 )
Partition 24 (M.5_86 - 86 )
Partition 25 (_87 - 87 )
Partition 26 (M.5_88 - 88 )
Partition 27 (iter_90 - 90 )
Partition 28 (volt_omega_102(D) - 102 )
Partition 29 (volt_q_104(D) - 104 )
Partition 30 (amps_omega_106(D) - 106 )
Partition 31 (amps_q_108(D) - 108 )

Coalesce list: (50)res_volt_50 & (84)res_volt_84 [map: 1, 23] : Success -> 1
Coalesce list: (50)res_volt_50 & (51)res_volt_51 [map: 1, 2] : Success -> 1
Coalesce list: (61)rmotor_61 & (71)rmotor_71 [map: 7, 15] : Success -> 7
Coalesce list: (62)zloadi_62 & (72)zloadi_72 [map: 8, 16] : Success -> 8
Coalesce list: (63)kvrpm_63 & (73)kvrpm_73 [map: 9, 17] : Success -> 9
Coalesce list: (64)kvrad_64 & (74)kvrad_74 [map: 10, 18] : Success -> 10
Coalesce list: (65)kqrad_65 & (75)kqrad_75 [map: 11, 19] : Success -> 11
Coalesce list: (49)iter_49 & (78)iter_78 [map: 0, 20] : Success -> 0
Coalesce list: (50)res_volt_50 & (79)res_volt_79(D) [map: 1, 21] : Success -> 1
Coalesce list: (49)iter_49 & (90)iter_90 [map: 0, 27] : Success -> 0
Coalesce list: (52)M.5_52 & (86)M.5_86 [map: 3, 24] : Success -> 3
Coalesce list: (51)res_volt_50 & (84)res_volt_50: Already Coalesced.
Coalesce list: (87)_87 & (88)M.5_88 [map: 25, 26] : Success -> 25
Coalesce list: (51)res_volt_50 & (50)res_volt_50: Already Coalesced.
Coalesce list: (52)M.5_52 & (88)_87 [map: 3, 25] : Fail due to conflict
Coalesce list: (50)res_volt_50 & (79)res_volt_50: Already Coalesced.
Coalesce list: (49)iter_49 & (90)iter_49: Already Coalesced.
Coalesce list: (49)iter_49 & (78)iter_49: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (pi.11_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (pi.12_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (qm.13_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (res.14_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (eps.15_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (am_volt.16_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (am_omega.17_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (am_volt.18_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (iter_49 - 49 78 90 )
Partition 49 (res_volt_50 - 50 51 79 84 )
Partition 50 (M.5_52 - 52 86 )
Partition 51 (imotype_57(D) - 57 )
Partition 52 (volt_58(D) - 58 )
Partition 53 (parmot_60(D) - 60 )
Partition 54 (rmotor_61 - 61 71 )
Partition 55 (zloadi_62 - 62 72 )
Partition 56 (kvrpm_63 - 63 73 )
Partition 57 (kvrad_64 - 64 74 )
Partition 58 (kqrad_65 - 65 75 )
Partition 59 (q_66(D) - 66 )
Partition 60 (amps_67(D) - 67 )
Partition 61 (omega_69(D) - 69 )
Partition 62 (_80 - 80 )
Partition 63 (nmpar_81(D) - 81 )
Partition 64 (dvolt_85 - 85 )
Partition 65 (_87 - 87 88 )
Partition 66 (res_omega_100 - 100 )
Partition 67 (res_q_101 - 101 )
Partition 68 (volt_omega_102(D) - 102 )
Partition 69 (volt_q_104(D) - 104 )
Partition 70 (amps_omega_106(D) - 106 )
Partition 71 (amps_q_108(D) - 108 )

voltm (real(kind=4) & restrict omega, real(kind=4) & restrict q, integer(kind=4) & restrict imotype, real(kind=4)[0:] * restrict parmot, integer(kind=4) & restrict nmpar, real(kind=4) & restrict volt, real(kind=4) & restrict volt_omega, real(kind=4) & restrict volt_q, real(kind=4) & restrict amps, real(kind=4) & restrict amps_omega, real(kind=4) & restrict amps_q)
{
  struct __st_parameter_dt dt_parm.6;
  real(kind=4) D.3595;
  real(kind=4) M.5;
  logical(kind=1) D.3592;
  real(kind=4) zloadi;
  real(kind=4) rmotor;
  real(kind=4) res_volt;
  real(kind=4) res_q;
  real(kind=4) res_omega;
  real(kind=4) res;
  real(kind=4) qm_volt;
  real(kind=4) qm_omega;
  real(kind=4) qm;
  static real(kind=4) pi = 3.141592502593994140625e+0;
  real(kind=4) kvrpm;
  real(kind=4) kvrad;
  real(kind=4) kqrad;
  integer(kind=4) iter;
  static real(kind=4) eps = 9.999999974752427078783512115478515625e-7;
  real(kind=4) dvolt;
  real(kind=4) am_volt;
  real(kind=4) am_omega;
  real(kind=4) am;
  integer(kind=4) _1;
  real(kind=4) pi.11_2;
  real(kind=4) _3;
  real(kind=4) _4;
  real(kind=4) _5;
  real(kind=4) _6;
  real(kind=4) _7;
  real(kind=4) _8;
  real(kind=4) _9;
  real(kind=4) _10;
  real(kind=4) _11;
  integer(kind=4) _12;
  real(kind=4) pi.12_13;
  real(kind=4) _14;
  real(kind=4) _15;
  real(kind=4) _16;
  real(kind=4) _17;
  real(kind=4) _18;
  real(kind=4) _19;
  real(kind=4) _20;
  real(kind=4) _21;
  real(kind=4) _22;
  real(kind=4) qm.13_23;
  real(kind=4) _24;
  real(kind=4) _25;
  real(kind=4) res.14_26;
  real(kind=4) _27;
  real(kind=4) _28;
  logical(kind=1) _29;
  logical(kind=1) _30;
  logical(kind=1) _31;
  real(kind=4) _32;
  real(kind=4) eps.15_33;
  real(kind=4) _34;
  real(kind=4) _35;
  real(kind=4) _36;
  real(kind=4) _37;
  real(kind=4) _38;
  real(kind=4) _39;
  real(kind=4) _40;
  real(kind=4) _41;
  real(kind=4) am_volt.16_42;
  real(kind=4) _43;
  real(kind=4) am_omega.17_44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) am_volt.18_47;
  real(kind=4) _48;
  real(kind=4) M.5_52;
  logical(kind=1) _80;
  real(kind=4) M.5_86;
  real(kind=4) _87;
  real(kind=4) M.5_88;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *imotype_57(D);
  if (_1 == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  rmotor_71 = *parmot_60(D)[0];
  zloadi_72 = *parmot_60(D)[1];
  kvrpm_73 = *parmot_60(D)[2];
  pi.11_2 = pi;
  _3 = kvrpm_73 * pi.11_2;
  kvrad_74 = _3 / 3.0e+1;
  kqrad_75 = kvrad_74;
  _4 = *q_66(D);
  _5 = kqrad_75 * _4;
  _6 = zloadi_72 + _5;
  *amps_67(D) = _6;
  _7 = *amps_67(D);
  _8 = rmotor_71 * _7;
  _9 = *omega_69(D);
  _10 = _9 / kvrad_74;
  _11 = _8 + _10;
  *volt_58(D) = _11;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  _12 = *imotype_57(D);
  if (_12 == 2)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  rmotor_61 = *parmot_60(D)[0];
  zloadi_62 = *parmot_60(D)[1];
  kvrpm_63 = *parmot_60(D)[2];
  pi.12_13 = pi;
  _14 = kvrpm_63 * pi.12_13;
  kvrad_64 = _14 / 3.0e+1;
  kqrad_65 = kvrad_64;
  _15 = *q_66(D);
  _16 = kqrad_65 * _15;
  _17 = zloadi_62 + _16;
  *amps_67(D) = _17;
  _18 = *amps_67(D);
  _19 = rmotor_61 * _18;
  _20 = *omega_69(D);
  _21 = _20 / kvrad_64;
  _22 = _19 + _21;
  *volt_58(D) = _22;
  goto <bb 7>; [0.00%]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  *volt_58(D) = 1.0e+0;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  iter_78 = 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                12
  # iter_49 = PHI <iter_78(7), iter_90(12)>
  # res_volt_50 = PHI <res_volt_79(D)(7), res_volt_84(12)>
  _80 = iter_49 > 20;
  if (_80 != 0)
    goto <bb 13>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       13
;;                9

;;   basic block 9, loop depth 1
;;    pred:       8
  motorq (omega_69(D), volt_58(D), imotype_57(D), parmot_60(D), nmpar_81(D), &qm, &qm_omega, &qm_volt, &am, &am_omega, &am_volt);
  qm.13_23 = qm;
  _24 = *q_66(D);
  _25 = qm.13_23 - _24;
  res = _25;
  res_volt_84 = qm_volt;
  res.14_26 = res;
  _27 = res.14_26 / res_volt_84;
  dvolt_85 = -_27;
  M.5_86 = 1.0e+0;
  _28 = *volt_58(D);
  _87 = ABS_EXPR <_28>;
  _29 = _87 > M.5_86;
  _30 = M.5_86 unord M.5_86;
  _31 = _29 | _30;
  if (_31 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 1
;;    pred:       9
  M.5_88 = _87;
;;    succ:       11

;;   basic block 11, loop depth 1
;;    pred:       9
;;                10
  # M.5_52 = PHI <M.5_86(9), M.5_88(10)>
  _32 = ABS_EXPR <dvolt_85>;
  eps.15_33 = eps;
  _34 = M.5_52 * eps.15_33;
  if (_32 < _34)
    goto <bb 14>; [0.00%]
  else
    goto <bb 12>; [0.00%]
;;    succ:       14
;;                12

;;   basic block 12, loop depth 1
;;    pred:       11
  _35 = *volt_58(D);
  _36 = dvolt_85 + _35;
  *volt_58(D) = _36;
  iter_90 = iter_49 + 1;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 13, loop depth 0
;;    pred:       8
  dt_parm.6.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};
  dt_parm.6.common.line = 198;
  dt_parm.6.common.flags = 128;
  dt_parm.6.common.unit = 6;
  _gfortran_st_write (&dt_parm.6);
  _gfortran_transfer_character_write (&dt_parm.6, &"** VOLTM: Voltage convergence failed. Res ="[1]{lb: 1 sz: 1}, 43);
  _gfortran_transfer_real_write (&dt_parm.6, &res, 4);
  _gfortran_st_write_done (&dt_parm.6);
  dt_parm.6 ={v} {CLOBBER};
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       11
;;                13
  # res_volt_51 = PHI <res_volt_84(11), res_volt_50(13)>
  res_omega_100 = qm_omega;
  res_q_101 = -1.0e+0;
  _37 = res_omega_100 / res_volt_51;
  _38 = -_37;
  *volt_omega_102(D) = _38;
  _39 = res_q_101 / res_volt_51;
  _40 = -_39;
  *volt_q_104(D) = _40;
  _41 = *volt_omega_102(D);
  am_volt.16_42 = am_volt;
  _43 = _41 * am_volt.16_42;
  am_omega.17_44 = am_omega;
  _45 = _43 + am_omega.17_44;
  *amps_omega_106(D) = _45;
  _46 = *volt_q_104(D);
  am_volt.18_47 = am_volt;
  _48 = _46 * am_volt.18_47;
  *amps_q_108(D) = _48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
  am ={v} {CLOBBER};
  am_omega ={v} {CLOBBER};
  am_volt ={v} {CLOBBER};
  qm ={v} {CLOBBER};
  qm_omega ={v} {CLOBBER};
  qm_volt ={v} {CLOBBER};
  res ={v} {CLOBBER};
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       15
<L18> [0.00%]:
  return;
;;    succ:       EXIT

}


Partition 0: size 480 align 16
	dt_parm.6
Inserting a partition copy on edge BB10->BB11 : PART.50 = PART.65

;; Generating RTL for gimple basic block 2

;; _1 = *imotype_57(D);

(insn 12 11 13 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":163 -1
     (nil))

(insn 13 12 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 138) [1 *imotype_57(D)+0 S4 A32])) "../src/motor.f":163 -1
     (nil))

;; if (_1 == 1)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 1 [0x1]))) "../src/motor.f":163 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":163 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; rmotor_71 = *parmot_60(D)[0];

(insn 17 16 18 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":164 -1
     (nil))

(insn 18 17 19 (set (reg:SF 140)
        (mem:SF (reg/f:DI 139) [2 *parmot_60(D)+0 S4 A32])) "../src/motor.f":164 -1
     (nil))

(insn 19 18 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32])
        (reg:SF 140)) "../src/motor.f":164 -1
     (nil))

;; zloadi_72 = *parmot_60(D)[1];

(insn 20 19 21 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":165 -1
     (nil))

(insn 21 20 22 (set (reg:SF 142)
        (mem:SF (plus:DI (reg/f:DI 141)
                (const_int 4 [0x4])) [2 *parmot_60(D)+4 S4 A32])) "../src/motor.f":165 -1
     (nil))

(insn 22 21 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32])
        (reg:SF 142)) "../src/motor.f":165 -1
     (nil))

;; kvrpm_73 = *parmot_60(D)[2];

(insn 23 22 24 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":166 -1
     (nil))

(insn 24 23 25 (set (reg:SF 144)
        (mem:SF (plus:DI (reg/f:DI 143)
                (const_int 8 [0x8])) [2 *parmot_60(D)+8 S4 A32])) "../src/motor.f":166 -1
     (nil))

(insn 25 24 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32])
        (reg:SF 144)) "../src/motor.f":166 -1
     (nil))

;; pi.11_2 = pi;

(insn 26 25 0 (set (reg:SF 88 [ pi.11_2 ])
        (mem/c:SF (symbol_ref:DI ("pi.3579") [flags 0x1c02]  <var_decl 0x1427f25a0 pi>) [2 pi+0 S4 A32])) "../src/motor.f":167 -1
     (nil))

;; _3 = kvrpm_73 * pi.11_2;

(insn 27 26 0 (set (reg:SF 89 [ _3 ])
        (mult:SF (reg:SF 88 [ pi.11_2 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":167 -1
     (nil))

;; kvrad_74 = _3 / 3.0e+1;

(insn 28 27 29 (set (reg:SF 146)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":167 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))

(insn 29 28 30 (set (reg:SF 145)
        (div:SF (reg:SF 89 [ _3 ])
            (reg:SF 146))) "../src/motor.f":167 -1
     (nil))

(insn 30 29 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])
        (reg:SF 145)) "../src/motor.f":167 -1
     (nil))

;; kqrad_75 = kvrad_74;

(insn 31 30 32 (set (reg:SF 147)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])) "../src/motor.f":168 -1
     (nil))

(insn 32 31 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32])
        (reg:SF 147)) "../src/motor.f":168 -1
     (nil))

;; _4 = *q_66(D);

(insn 33 32 34 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":169 -1
     (nil))

(insn 34 33 0 (set (reg:SF 90 [ _4 ])
        (mem:SF (reg/f:DI 148) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":169 -1
     (nil))

;; _5 = kqrad_75 * _4;

(insn 35 34 0 (set (reg:SF 91 [ _5 ])
        (mult:SF (reg:SF 90 [ _4 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32]))) "../src/motor.f":169 -1
     (nil))

;; _6 = zloadi_72 + _5;

(insn 36 35 0 (set (reg:SF 92 [ _6 ])
        (plus:SF (reg:SF 91 [ _5 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32]))) "../src/motor.f":169 -1
     (nil))

;; *amps_67(D) = _6;

(insn 37 36 38 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":169 -1
     (nil))

(insn 38 37 0 (set (mem:SF (reg/f:DI 149) [2 *amps_67(D)+0 S4 A32])
        (reg:SF 92 [ _6 ])) "../src/motor.f":169 -1
     (nil))

;; _7 = *amps_67(D);

(insn 39 38 40 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":170 -1
     (nil))

(insn 40 39 0 (set (reg:SF 93 [ _7 ])
        (mem:SF (reg/f:DI 150) [2 *amps_67(D)+0 S4 A32])) "../src/motor.f":170 -1
     (nil))

;; _8 = rmotor_71 * _7;

(insn 41 40 0 (set (reg:SF 94 [ _8 ])
        (mult:SF (reg:SF 93 [ _7 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32]))) "../src/motor.f":170 -1
     (nil))

;; _9 = *omega_69(D);

(insn 42 41 43 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":170 -1
     (nil))

(insn 43 42 0 (set (reg:SF 95 [ _9 ])
        (mem:SF (reg/f:DI 151) [2 *omega_69(D)+0 S4 A32])) "../src/motor.f":170 -1
     (nil))

;; _10 = _9 / kvrad_74;

(insn 44 43 0 (set (reg:SF 96 [ _10 ])
        (div:SF (reg:SF 95 [ _9 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32]))) "../src/motor.f":170 -1
     (nil))

;; _11 = _8 + _10;

(insn 45 44 0 (set (reg:SF 97 [ _11 ])
        (plus:SF (reg:SF 94 [ _8 ])
            (reg:SF 96 [ _10 ]))) "../src/motor.f":170 -1
     (nil))

;; *volt_58(D) = _11;

(insn 46 45 47 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":170 -1
     (nil))

(insn 47 46 0 (set (mem:SF (reg/f:DI 152) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 97 [ _11 ])) "../src/motor.f":170 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 50 49 51 18 (nil) [0 uses])

(note 51 50 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = *imotype_57(D);

(insn 52 51 53 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":171 -1
     (nil))

(insn 53 52 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (reg/f:DI 153) [1 *imotype_57(D)+0 S4 A32])) "../src/motor.f":171 -1
     (nil))

;; if (_12 == 2)

(insn 54 53 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _12 ])
            (const_int 2 [0x2]))) "../src/motor.f":171 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":171 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; rmotor_61 = *parmot_60(D)[0];

(insn 57 56 58 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":172 -1
     (nil))

(insn 58 57 59 (set (reg:SF 155)
        (mem:SF (reg/f:DI 154) [2 *parmot_60(D)+0 S4 A32])) "../src/motor.f":172 -1
     (nil))

(insn 59 58 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32])
        (reg:SF 155)) "../src/motor.f":172 -1
     (nil))

;; zloadi_62 = *parmot_60(D)[1];

(insn 60 59 61 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":173 -1
     (nil))

(insn 61 60 62 (set (reg:SF 157)
        (mem:SF (plus:DI (reg/f:DI 156)
                (const_int 4 [0x4])) [2 *parmot_60(D)+4 S4 A32])) "../src/motor.f":173 -1
     (nil))

(insn 62 61 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32])
        (reg:SF 157)) "../src/motor.f":173 -1
     (nil))

;; kvrpm_63 = *parmot_60(D)[2];

(insn 63 62 64 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":174 -1
     (nil))

(insn 64 63 65 (set (reg:SF 159)
        (mem:SF (plus:DI (reg/f:DI 158)
                (const_int 8 [0x8])) [2 *parmot_60(D)+8 S4 A32])) "../src/motor.f":174 -1
     (nil))

(insn 65 64 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32])
        (reg:SF 159)) "../src/motor.f":174 -1
     (nil))

;; pi.12_13 = pi;

(insn 66 65 0 (set (reg:SF 99 [ pi.12_13 ])
        (mem/c:SF (symbol_ref:DI ("pi.3579") [flags 0x1c02]  <var_decl 0x1427f25a0 pi>) [2 pi+0 S4 A32])) "../src/motor.f":175 -1
     (nil))

;; _14 = kvrpm_63 * pi.12_13;

(insn 67 66 0 (set (reg:SF 100 [ _14 ])
        (mult:SF (reg:SF 99 [ pi.12_13 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":175 -1
     (nil))

;; kvrad_64 = _14 / 3.0e+1;

(insn 68 67 69 (set (reg:SF 161)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":175 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))

(insn 69 68 70 (set (reg:SF 160)
        (div:SF (reg:SF 100 [ _14 ])
            (reg:SF 161))) "../src/motor.f":175 -1
     (nil))

(insn 70 69 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])
        (reg:SF 160)) "../src/motor.f":175 -1
     (nil))

;; kqrad_65 = kvrad_64;

(insn 71 70 72 (set (reg:SF 162)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])) "../src/motor.f":176 -1
     (nil))

(insn 72 71 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32])
        (reg:SF 162)) "../src/motor.f":176 -1
     (nil))

;; _15 = *q_66(D);

(insn 73 72 74 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":177 -1
     (nil))

(insn 74 73 0 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 163) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":177 -1
     (nil))

;; _16 = kqrad_65 * _15;

(insn 75 74 0 (set (reg:SF 102 [ _16 ])
        (mult:SF (reg:SF 101 [ _15 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32]))) "../src/motor.f":177 -1
     (nil))

;; _17 = zloadi_62 + _16;

(insn 76 75 0 (set (reg:SF 103 [ _17 ])
        (plus:SF (reg:SF 102 [ _16 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32]))) "../src/motor.f":177 -1
     (nil))

;; *amps_67(D) = _17;

(insn 77 76 78 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":177 -1
     (nil))

(insn 78 77 0 (set (mem:SF (reg/f:DI 164) [2 *amps_67(D)+0 S4 A32])
        (reg:SF 103 [ _17 ])) "../src/motor.f":177 -1
     (nil))

;; _18 = *amps_67(D);

(insn 79 78 80 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":178 -1
     (nil))

(insn 80 79 0 (set (reg:SF 104 [ _18 ])
        (mem:SF (reg/f:DI 165) [2 *amps_67(D)+0 S4 A32])) "../src/motor.f":178 -1
     (nil))

;; _19 = rmotor_61 * _18;

(insn 81 80 0 (set (reg:SF 105 [ _19 ])
        (mult:SF (reg:SF 104 [ _18 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32]))) "../src/motor.f":178 -1
     (nil))

;; _20 = *omega_69(D);

(insn 82 81 83 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":178 -1
     (nil))

(insn 83 82 0 (set (reg:SF 106 [ _20 ])
        (mem:SF (reg/f:DI 166) [2 *omega_69(D)+0 S4 A32])) "../src/motor.f":178 -1
     (nil))

;; _21 = _20 / kvrad_64;

(insn 84 83 0 (set (reg:SF 107 [ _21 ])
        (div:SF (reg:SF 106 [ _20 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32]))) "../src/motor.f":178 -1
     (nil))

;; _22 = _19 + _21;

(insn 85 84 0 (set (reg:SF 108 [ _22 ])
        (plus:SF (reg:SF 105 [ _19 ])
            (reg:SF 107 [ _21 ]))) "../src/motor.f":178 -1
     (nil))

;; *volt_58(D) = _22;

(insn 86 85 87 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":178 -1
     (nil))

(insn 87 86 0 (set (mem:SF (reg/f:DI 167) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 108 [ _22 ])) "../src/motor.f":178 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 90 89 91 20 (nil) [0 uses])

(note 91 90 0 NOTE_INSN_BASIC_BLOCK)

;; *volt_58(D) = 1.0e+0;

(insn 92 91 93 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":181 -1
     (nil))

(insn 93 92 94 (set (reg:SF 169)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":181 -1
     (nil))

(insn 94 93 0 (set (mem:SF (reg/f:DI 168) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 169)) "../src/motor.f":181 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 95 94 96 19 (nil) [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; iter_78 = 1;

(insn 97 96 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/motor.f":184 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _80 = iter_49 > 20;

(insn 99 98 100 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
            (const_int 20 [0x14]))) "../src/motor.f":184 -1
     (nil))

(insn 100 99 0 (set (reg:QI 136 [ _80 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/motor.f":184 -1
     (nil))

;; if (_80 != 0)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _80 ])
            (const_int 0 [0]))) "../src/motor.f":184 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":184 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; motorq (omega_69(D), volt_58(D), imotype_57(D), parmot_60(D), nmpar_81(D), &qm, &qm_omega, &qm_volt, &am, &am_omega, &am_volt);

(insn 104 103 105 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 105 104 106 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":187 -1
     (nil))

(insn 106 105 107 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":187 -1
     (nil))

(insn 107 106 108 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":187 -1
     (nil))

(insn 108 107 109 (set (reg:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":187 -1
     (nil))

(insn 109 108 110 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":187 -1
     (nil))

(insn 110 109 111 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 111 110 112 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 112 111 113 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 176)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 113 112 114 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 114 113 115 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 177)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 115 114 116 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 116 115 117 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 178)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(insn 117 116 118 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 118 117 119 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 179)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))

(insn 119 118 120 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))

(insn 120 119 121 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 180)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))

(insn 121 120 122 (set (reg:DI 38 r9)
        (reg:DI 170)) "../src/motor.f":187 -1
     (nil))

(insn 122 121 123 (set (reg:DI 37 r8)
        (reg:DI 171)) "../src/motor.f":187 -1
     (nil))

(insn 123 122 124 (set (reg:DI 2 cx)
        (reg:DI 172)) "../src/motor.f":187 -1
     (nil))

(insn 124 123 125 (set (reg:DI 1 dx)
        (reg:DI 173)) "../src/motor.f":187 -1
     (nil))

(insn 125 124 126 (set (reg:DI 4 si)
        (reg:DI 174)) "../src/motor.f":187 -1
     (nil))

(insn 126 125 127 (set (reg:DI 5 di)
        (reg:DI 175)) "../src/motor.f":187 -1
     (nil))

(call_insn 127 126 128 (call (mem:QI (symbol_ref:DI ("motorq_") [flags 0x403]  <function_decl 0x1427e4800 motorq>) [0 motorq S1 A8])
        (const_int 48 [0x30])) "../src/motor.f":187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 128 127 0 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; qm.13_23 = qm;

(insn 129 128 0 (set (reg:SF 109 [ qm.13_23 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 qm+0 S4 A64])) "../src/motor.f":189 -1
     (nil))

;; _24 = *q_66(D);

(insn 130 129 131 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":189 -1
     (nil))

(insn 131 130 0 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 181) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":189 -1
     (nil))

;; _25 = qm.13_23 - _24;

(insn 132 131 0 (set (reg:SF 111 [ _25 ])
        (minus:SF (reg:SF 109 [ qm.13_23 ])
            (reg:SF 110 [ _24 ]))) "../src/motor.f":189 -1
     (nil))

;; res = _25;

(insn 133 132 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res+0 S4 A32])
        (reg:SF 111 [ _25 ])) "../src/motor.f":189 -1
     (nil))

;; res_volt_84 = qm_volt;

(insn 134 133 135 (set (reg:SF 182)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 qm_volt+0 S4 A64])) "../src/motor.f":190 -1
     (nil))

(insn 135 134 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32])
        (reg:SF 182)) "../src/motor.f":190 -1
     (nil))

;; res.14_26 = res;

(insn 136 135 0 (set (reg:SF 112 [ res.14_26 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res+0 S4 A32])) "../src/motor.f":192 -1
     (nil))

;; _27 = res.14_26 / res_volt_84;

(insn 137 136 0 (set (reg:SF 113 [ _27 ])
        (div:SF (reg:SF 112 [ res.14_26 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":192 -1
     (nil))

;; dvolt_85 = -_27;

(insn 138 137 139 (set (reg:V4SF 184)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":192 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 139 138 140 (parallel [
            (set (reg:SF 183)
                (neg:SF (reg:SF 113 [ _27 ])))
            (use (reg:V4SF 184))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":192 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 113 [ _27 ]))
        (nil)))

(insn 140 139 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32])
        (reg:SF 183)) "../src/motor.f":192 -1
     (nil))

;; M.5_86 = 1.0e+0;

(insn 141 140 0 (set (reg:SF 135 [ M.5_52 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

;; _28 = *volt_58(D);

(insn 142 141 143 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":194 -1
     (nil))

(insn 143 142 0 (set (reg:SF 114 [ _28 ])
        (mem:SF (reg/f:DI 185) [2 *volt_58(D)+0 S4 A32])) "../src/motor.f":194 -1
     (nil))

;; _87 = ABS_EXPR <_28>;

(insn 144 143 145 (set (reg:V4SF 186)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 145 144 0 (parallel [
            (set (reg:SF 137 [ _87 ])
                (abs:SF (reg:SF 114 [ _28 ])))
            (use (reg:V4SF 186))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 114 [ _28 ]))
        (nil)))

;; _29 = _87 > M.5_86;

(insn 146 145 147 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 137 [ _87 ])
            (reg:SF 135 [ M.5_52 ]))) "../src/motor.f":194 -1
     (nil))

(insn 147 146 0 (set (reg:QI 115 [ _29 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))

;; _30 = M.5_86 unord M.5_86;

(insn 148 147 149 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 135 [ M.5_52 ])
            (reg:SF 135 [ M.5_52 ]))) "../src/motor.f":194 -1
     (nil))

(insn 149 148 0 (set (reg:QI 116 [ _30 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))

;; _31 = _29 | _30;

(insn 150 149 0 (parallel [
            (set (reg:QI 117 [ _31 ])
                (ior:QI (reg:QI 115 [ _29 ])
                    (reg:QI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (nil))

;; if (_31 != 0)

(insn 151 150 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))

(jump_insn 152 151 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":194 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; M.5_88 = _87;

(nil)

;; Generating RTL for gimple basic block 11

;; 

(code_label 154 153 155 22 (nil) [0 uses])

(note 155 154 0 NOTE_INSN_BASIC_BLOCK)

;; _32 = ABS_EXPR <dvolt_85>;

(insn 156 155 157 (set (reg:SF 187)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32])) "../src/motor.f":194 -1
     (nil))

(insn 157 156 158 (set (reg:V4SF 188)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 158 157 0 (parallel [
            (set (reg:SF 118 [ _32 ])
                (abs:SF (reg:SF 187)))
            (use (reg:V4SF 188))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 187))
        (nil)))

;; eps.15_33 = eps;

(insn 159 158 0 (set (reg:SF 119 [ eps.15_33 ])
        (mem/c:SF (symbol_ref:DI ("eps.3574") [flags 0x1c02]  <var_decl 0x1427f22d0 eps>) [2 eps+0 S4 A32])) "../src/motor.f":194 -1
     (nil))

;; _34 = M.5_52 * eps.15_33;

(insn 160 159 0 (set (reg:SF 120 [ _34 ])
        (mult:SF (reg:SF 135 [ M.5_52 ])
            (reg:SF 119 [ eps.15_33 ]))) "../src/motor.f":194 -1
     (nil))

;; if (_32 < _34)

(insn 161 160 162 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 120 [ _34 ])
            (reg:SF 118 [ _32 ]))) "../src/motor.f":194 -1
     (nil))

(jump_insn 162 161 0 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../src/motor.f":194 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _35 = *volt_58(D);

(insn 164 163 165 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":196 -1
     (nil))

(insn 165 164 0 (set (reg:SF 121 [ _35 ])
        (mem:SF (reg/f:DI 189) [2 *volt_58(D)+0 S4 A32])) "../src/motor.f":196 -1
     (nil))

;; _36 = dvolt_85 + _35;

(insn 166 165 0 (set (reg:SF 122 [ _36 ])
        (plus:SF (reg:SF 121 [ _35 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32]))) "../src/motor.f":196 -1
     (nil))

;; *volt_58(D) = _36;

(insn 167 166 168 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":196 -1
     (nil))

(insn 168 167 0 (set (mem:SF (reg/f:DI 190) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 122 [ _36 ])) "../src/motor.f":196 -1
     (nil))

;; iter_90 = iter_49 + 1;

(insn 169 168 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":184 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 173 172 174 21 (nil) [0 uses])

(note 174 173 0 NOTE_INSN_BASIC_BLOCK)

;; dt_parm.6.common.filename = &"../src/motor.f"[1]{lb: 1 sz: 1};

(insn 175 174 176 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":198 -1
     (nil))

(insn 176 175 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.6.common.filename+0 S8 A64])
        (reg/f:DI 191)) "../src/motor.f":198 -1
     (nil))

;; dt_parm.6.common.line = 198;

(insn 177 176 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.6.common.line+0 S4 A64])
        (const_int 198 [0xc6])) "../src/motor.f":198 -1
     (nil))

;; dt_parm.6.common.flags = 128;

(insn 178 177 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.6.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":198 -1
     (nil))

;; dt_parm.6.common.unit = 6;

(insn 179 178 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.6.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":198 -1
     (nil))

;; _gfortran_st_write (&dt_parm.6);

(insn 180 179 181 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))

(insn 181 180 182 (set (reg:DI 5 di)
        (reg:DI 192)) "../src/motor.f":198 -1
     (nil))

(call_insn 182 181 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _gfortran_transfer_character_write (&dt_parm.6, &"** VOLTM: Voltage convergence failed. Res ="[1]{lb: 1 sz: 1}, 43);

(insn 183 182 184 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))

(insn 184 183 185 (set (reg:SI 1 dx)
        (const_int 43 [0x2b])) "../src/motor.f":198 -1
     (nil))

(insn 185 184 186 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC13") [flags 0x2]  <var_decl 0x143234c60 *lC13>)) "../src/motor.f":198 -1
     (nil))

(insn 186 185 187 (set (reg:DI 5 di)
        (reg:DI 193)) "../src/motor.f":198 -1
     (nil))

(call_insn 187 186 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_transfer_real_write (&dt_parm.6, &res, 4);

(insn 188 187 189 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))

(insn 189 188 190 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))

(insn 190 189 191 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":198 -1
     (nil))

(insn 191 190 192 (set (reg:DI 4 si)
        (reg:DI 194)) "../src/motor.f":198 -1
     (nil))

(insn 192 191 193 (set (reg:DI 5 di)
        (reg:DI 195)) "../src/motor.f":198 -1
     (nil))

(call_insn 193 192 0 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _gfortran_st_write_done (&dt_parm.6);

(insn 194 193 195 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))

(insn 195 194 196 (set (reg:DI 5 di)
        (reg:DI 196)) "../src/motor.f":198 -1
     (nil))

(call_insn 196 195 0 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; dt_parm.6 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 14

;; 

(code_label 197 196 198 23 (nil) [0 uses])

(note 198 197 0 NOTE_INSN_BASIC_BLOCK)

;; res_omega_100 = qm_omega;

(insn 199 198 200 (set (reg:SF 197)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 qm_omega+0 S4 A32])) "../src/motor.f":201 -1
     (nil))

(insn 200 199 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 res_omega+0 S4 A32])
        (reg:SF 197)) "../src/motor.f":201 -1
     (nil))

;; res_q_101 = -1.0e+0;

(insn 201 200 202 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [2  S4 A32])) "../src/motor.f":202 -1
     (nil))

(insn 202 201 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 res_q+0 S4 A32])
        (reg:SF 198)) "../src/motor.f":202 -1
     (nil))

;; _37 = res_omega_100 / res_volt_51;

(insn 203 202 204 (set (reg:SF 199)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 res_omega+0 S4 A32])) "../src/motor.f":204 -1
     (nil))

(insn 204 203 0 (set (reg:SF 123 [ _37 ])
        (div:SF (reg:SF 199)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":204 -1
     (nil))

;; _38 = -_37;

(insn 205 204 206 (set (reg:V4SF 200)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":204 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 206 205 0 (parallel [
            (set (reg:SF 124 [ _38 ])
                (neg:SF (reg:SF 123 [ _37 ])))
            (use (reg:V4SF 200))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":204 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 123 [ _37 ]))
        (nil)))

;; *volt_omega_102(D) = _38;

(insn 207 206 208 (set (reg/f:DI 201)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 volt_omega+0 S8 A64])) "../src/motor.f":204 -1
     (nil))

(insn 208 207 0 (set (mem:SF (reg/f:DI 201) [2 *volt_omega_102(D)+0 S4 A32])
        (reg:SF 124 [ _38 ])) "../src/motor.f":204 -1
     (nil))

;; _39 = res_q_101 / res_volt_51;

(insn 209 208 210 (set (reg:SF 202)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 res_q+0 S4 A32])) "../src/motor.f":205 -1
     (nil))

(insn 210 209 0 (set (reg:SF 125 [ _39 ])
        (div:SF (reg:SF 202)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":205 -1
     (nil))

;; _40 = -_39;

(insn 211 210 212 (set (reg:V4SF 203)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":205 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 212 211 0 (parallel [
            (set (reg:SF 126 [ _40 ])
                (neg:SF (reg:SF 125 [ _39 ])))
            (use (reg:V4SF 203))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":205 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 125 [ _39 ]))
        (nil)))

;; *volt_q_104(D) = _40;

(insn 213 212 214 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 volt_q+0 S8 A64])) "../src/motor.f":205 -1
     (nil))

(insn 214 213 0 (set (mem:SF (reg/f:DI 204) [2 *volt_q_104(D)+0 S4 A32])
        (reg:SF 126 [ _40 ])) "../src/motor.f":205 -1
     (nil))

;; _41 = *volt_omega_102(D);

(insn 215 214 216 (set (reg/f:DI 205)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 volt_omega+0 S8 A64])) "../src/motor.f":207 -1
     (nil))

(insn 216 215 0 (set (reg:SF 127 [ _41 ])
        (mem:SF (reg/f:DI 205) [2 *volt_omega_102(D)+0 S4 A32])) "../src/motor.f":207 -1
     (nil))

;; am_volt.16_42 = am_volt;

(insn 217 216 0 (set (reg:SF 128 [ am_volt.16_42 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 am_volt+0 S4 A32])) "../src/motor.f":207 -1
     (nil))

;; _43 = _41 * am_volt.16_42;

(insn 218 217 0 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 127 [ _41 ])
            (reg:SF 128 [ am_volt.16_42 ]))) "../src/motor.f":207 -1
     (nil))

;; am_omega.17_44 = am_omega;

(insn 219 218 0 (set (reg:SF 130 [ am_omega.17_44 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 am_omega+0 S4 A64])) "../src/motor.f":207 -1
     (nil))

;; _45 = _43 + am_omega.17_44;

(insn 220 219 0 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 129 [ _43 ])
            (reg:SF 130 [ am_omega.17_44 ]))) "../src/motor.f":207 -1
     (nil))

;; *amps_omega_106(D) = _45;

(insn 221 220 222 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 amps_omega+0 S8 A64])) "../src/motor.f":207 -1
     (nil))

(insn 222 221 0 (set (mem:SF (reg/f:DI 206) [2 *amps_omega_106(D)+0 S4 A32])
        (reg:SF 131 [ _45 ])) "../src/motor.f":207 -1
     (nil))

;; _46 = *volt_q_104(D);

(insn 223 222 224 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 volt_q+0 S8 A64])) "../src/motor.f":208 -1
     (nil))

(insn 224 223 0 (set (reg:SF 132 [ _46 ])
        (mem:SF (reg/f:DI 207) [2 *volt_q_104(D)+0 S4 A32])) "../src/motor.f":208 -1
     (nil))

;; am_volt.18_47 = am_volt;

(insn 225 224 0 (set (reg:SF 133 [ am_volt.18_47 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 am_volt+0 S4 A32])) "../src/motor.f":208 -1
     (nil))

;; _48 = _46 * am_volt.18_47;

(insn 226 225 0 (set (reg:SF 134 [ _48 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (reg:SF 133 [ am_volt.18_47 ]))) "../src/motor.f":208 -1
     (nil))

;; *amps_q_108(D) = _48;

(insn 227 226 228 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 amps_q+0 S8 A64])) "../src/motor.f":208 -1
     (nil))

(insn 228 227 0 (set (mem:SF (reg/f:DI 208) [2 *amps_q_108(D)+0 S4 A32])
        (reg:SF 134 [ _48 ])) "../src/motor.f":208 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; am ={v} {CLOBBER};

(nil)

;; am_omega ={v} {CLOBBER};

(nil)

;; am_volt ={v} {CLOBBER};

(nil)

;; qm ={v} {CLOBBER};

(nil)

;; qm_omega ={v} {CLOBBER};

(nil)

;; qm_volt ={v} {CLOBBER};

(nil)

;; res ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 16

;; <L18> [0.00%]:

(code_label 230 229 231 25 (nil) [0 uses])

(note 231 230 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.
Merging block 18 into block 15...
Merged blocks 15 and 18.
Merged 15 and 18 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])
        (reg:DI 5 di [ omega ])) "../src/motor.f":133 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])
        (reg:DI 4 si [ q ])) "../src/motor.f":133 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])
        (reg:DI 1 dx [ imotype ])) "../src/motor.f":133 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])
        (reg:DI 2 cx [ parmot ])) "../src/motor.f":133 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])
        (reg:DI 37 r8 [ nmpar ])) "../src/motor.f":133 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])
        (reg:DI 38 r9 [ volt ])) "../src/motor.f":133 -1
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":163 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 138) [1 *imotype_57(D)+0 S4 A32])) "../src/motor.f":163 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 1 [0x1]))) "../src/motor.f":163 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "../src/motor.f":163 -1
     (nil)
 -> 50)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":164 -1
     (nil))
(insn 18 17 19 4 (set (reg:SF 140)
        (mem:SF (reg/f:DI 139) [2 *parmot_60(D)+0 S4 A32])) "../src/motor.f":164 -1
     (nil))
(insn 19 18 20 4 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32])
        (reg:SF 140)) "../src/motor.f":164 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":165 -1
     (nil))
(insn 21 20 22 4 (set (reg:SF 142)
        (mem:SF (plus:DI (reg/f:DI 141)
                (const_int 4 [0x4])) [2 *parmot_60(D)+4 S4 A32])) "../src/motor.f":165 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32])
        (reg:SF 142)) "../src/motor.f":165 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":166 -1
     (nil))
(insn 24 23 25 4 (set (reg:SF 144)
        (mem:SF (plus:DI (reg/f:DI 143)
                (const_int 8 [0x8])) [2 *parmot_60(D)+8 S4 A32])) "../src/motor.f":166 -1
     (nil))
(insn 25 24 26 4 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32])
        (reg:SF 144)) "../src/motor.f":166 -1
     (nil))
(insn 26 25 27 4 (set (reg:SF 88 [ pi.11_2 ])
        (mem/c:SF (symbol_ref:DI ("pi.3579") [flags 0x1c02]  <var_decl 0x1427f25a0 pi>) [2 pi+0 S4 A32])) "../src/motor.f":167 -1
     (nil))
(insn 27 26 28 4 (set (reg:SF 89 [ _3 ])
        (mult:SF (reg:SF 88 [ pi.11_2 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":167 -1
     (nil))
(insn 28 27 29 4 (set (reg:SF 146)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":167 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 29 28 30 4 (set (reg:SF 145)
        (div:SF (reg:SF 89 [ _3 ])
            (reg:SF 146))) "../src/motor.f":167 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])
        (reg:SF 145)) "../src/motor.f":167 -1
     (nil))
(insn 31 30 32 4 (set (reg:SF 147)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])) "../src/motor.f":168 -1
     (nil))
(insn 32 31 33 4 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32])
        (reg:SF 147)) "../src/motor.f":168 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":169 -1
     (nil))
(insn 34 33 35 4 (set (reg:SF 90 [ _4 ])
        (mem:SF (reg/f:DI 148) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":169 -1
     (nil))
(insn 35 34 36 4 (set (reg:SF 91 [ _5 ])
        (mult:SF (reg:SF 90 [ _4 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32]))) "../src/motor.f":169 -1
     (nil))
(insn 36 35 37 4 (set (reg:SF 92 [ _6 ])
        (plus:SF (reg:SF 91 [ _5 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32]))) "../src/motor.f":169 -1
     (nil))
(insn 37 36 38 4 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":169 -1
     (nil))
(insn 38 37 39 4 (set (mem:SF (reg/f:DI 149) [2 *amps_67(D)+0 S4 A32])
        (reg:SF 92 [ _6 ])) "../src/motor.f":169 -1
     (nil))
(insn 39 38 40 4 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":170 -1
     (nil))
(insn 40 39 41 4 (set (reg:SF 93 [ _7 ])
        (mem:SF (reg/f:DI 150) [2 *amps_67(D)+0 S4 A32])) "../src/motor.f":170 -1
     (nil))
(insn 41 40 42 4 (set (reg:SF 94 [ _8 ])
        (mult:SF (reg:SF 93 [ _7 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32]))) "../src/motor.f":170 -1
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":170 -1
     (nil))
(insn 43 42 44 4 (set (reg:SF 95 [ _9 ])
        (mem:SF (reg/f:DI 151) [2 *omega_69(D)+0 S4 A32])) "../src/motor.f":170 -1
     (nil))
(insn 44 43 45 4 (set (reg:SF 96 [ _10 ])
        (div:SF (reg:SF 95 [ _9 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32]))) "../src/motor.f":170 -1
     (nil))
(insn 45 44 46 4 (set (reg:SF 97 [ _11 ])
        (plus:SF (reg:SF 94 [ _8 ])
            (reg:SF 96 [ _10 ]))) "../src/motor.f":170 -1
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":170 -1
     (nil))
(insn 47 46 48 4 (set (mem:SF (reg/f:DI 152) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 97 [ _11 ])) "../src/motor.f":170 -1
     (nil))
(jump_insn 48 47 49 4 (set (pc)
        (label_ref 95)) -1
     (nil)
 -> 95)
;;  succ:       8

(barrier 49 48 50)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 50 49 51 5 18 (nil) [1 uses])
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 5 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":171 -1
     (nil))
(insn 53 52 54 5 (set (reg:SI 98 [ _12 ])
        (mem:SI (reg/f:DI 153) [1 *imotype_57(D)+0 S4 A32])) "../src/motor.f":171 -1
     (nil))
(insn 54 53 55 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _12 ])
            (const_int 2 [0x2]))) "../src/motor.f":171 -1
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "../src/motor.f":171 -1
     (nil)
 -> 90)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 6 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":172 -1
     (nil))
(insn 58 57 59 6 (set (reg:SF 155)
        (mem:SF (reg/f:DI 154) [2 *parmot_60(D)+0 S4 A32])) "../src/motor.f":172 -1
     (nil))
(insn 59 58 60 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32])
        (reg:SF 155)) "../src/motor.f":172 -1
     (nil))
(insn 60 59 61 6 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":173 -1
     (nil))
(insn 61 60 62 6 (set (reg:SF 157)
        (mem:SF (plus:DI (reg/f:DI 156)
                (const_int 4 [0x4])) [2 *parmot_60(D)+4 S4 A32])) "../src/motor.f":173 -1
     (nil))
(insn 62 61 63 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32])
        (reg:SF 157)) "../src/motor.f":173 -1
     (nil))
(insn 63 62 64 6 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":174 -1
     (nil))
(insn 64 63 65 6 (set (reg:SF 159)
        (mem:SF (plus:DI (reg/f:DI 158)
                (const_int 8 [0x8])) [2 *parmot_60(D)+8 S4 A32])) "../src/motor.f":174 -1
     (nil))
(insn 65 64 66 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32])
        (reg:SF 159)) "../src/motor.f":174 -1
     (nil))
(insn 66 65 67 6 (set (reg:SF 99 [ pi.12_13 ])
        (mem/c:SF (symbol_ref:DI ("pi.3579") [flags 0x1c02]  <var_decl 0x1427f25a0 pi>) [2 pi+0 S4 A32])) "../src/motor.f":175 -1
     (nil))
(insn 67 66 68 6 (set (reg:SF 100 [ _14 ])
        (mult:SF (reg:SF 99 [ pi.12_13 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 kvrpm+0 S4 A32]))) "../src/motor.f":175 -1
     (nil))
(insn 68 67 69 6 (set (reg:SF 161)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [2  S4 A32])) "../src/motor.f":175 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 69 68 70 6 (set (reg:SF 160)
        (div:SF (reg:SF 100 [ _14 ])
            (reg:SF 161))) "../src/motor.f":175 -1
     (nil))
(insn 70 69 71 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])
        (reg:SF 160)) "../src/motor.f":175 -1
     (nil))
(insn 71 70 72 6 (set (reg:SF 162)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32])) "../src/motor.f":176 -1
     (nil))
(insn 72 71 73 6 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32])
        (reg:SF 162)) "../src/motor.f":176 -1
     (nil))
(insn 73 72 74 6 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":177 -1
     (nil))
(insn 74 73 75 6 (set (reg:SF 101 [ _15 ])
        (mem:SF (reg/f:DI 163) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":177 -1
     (nil))
(insn 75 74 76 6 (set (reg:SF 102 [ _16 ])
        (mult:SF (reg:SF 101 [ _15 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 kqrad+0 S4 A32]))) "../src/motor.f":177 -1
     (nil))
(insn 76 75 77 6 (set (reg:SF 103 [ _17 ])
        (plus:SF (reg:SF 102 [ _16 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 zloadi+0 S4 A32]))) "../src/motor.f":177 -1
     (nil))
(insn 77 76 78 6 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":177 -1
     (nil))
(insn 78 77 79 6 (set (mem:SF (reg/f:DI 164) [2 *amps_67(D)+0 S4 A32])
        (reg:SF 103 [ _17 ])) "../src/motor.f":177 -1
     (nil))
(insn 79 78 80 6 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [10 amps+0 S8 A64])) "../src/motor.f":178 -1
     (nil))
(insn 80 79 81 6 (set (reg:SF 104 [ _18 ])
        (mem:SF (reg/f:DI 165) [2 *amps_67(D)+0 S4 A32])) "../src/motor.f":178 -1
     (nil))
(insn 81 80 82 6 (set (reg:SF 105 [ _19 ])
        (mult:SF (reg:SF 104 [ _18 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 rmotor+0 S4 A32]))) "../src/motor.f":178 -1
     (nil))
(insn 82 81 83 6 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":178 -1
     (nil))
(insn 83 82 84 6 (set (reg:SF 106 [ _20 ])
        (mem:SF (reg/f:DI 166) [2 *omega_69(D)+0 S4 A32])) "../src/motor.f":178 -1
     (nil))
(insn 84 83 85 6 (set (reg:SF 107 [ _21 ])
        (div:SF (reg:SF 106 [ _20 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 kvrad+0 S4 A32]))) "../src/motor.f":178 -1
     (nil))
(insn 85 84 86 6 (set (reg:SF 108 [ _22 ])
        (plus:SF (reg:SF 105 [ _19 ])
            (reg:SF 107 [ _21 ]))) "../src/motor.f":178 -1
     (nil))
(insn 86 85 87 6 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":178 -1
     (nil))
(insn 87 86 88 6 (set (mem:SF (reg/f:DI 167) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 108 [ _22 ])) "../src/motor.f":178 -1
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (label_ref 95)) -1
     (nil)
 -> 95)
;;  succ:       8

(barrier 89 88 90)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 90 89 91 7 20 (nil) [1 uses])
(note 91 90 92 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 7 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":181 -1
     (nil))
(insn 93 92 94 7 (set (reg:SF 169)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":181 -1
     (nil))
(insn 94 93 95 7 (set (mem:SF (reg/f:DI 168) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 169)) "../src/motor.f":181 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              6
;;              7 (FALLTHRU)
(code_label 95 94 96 8 19 (nil) [2 uses])
(note 96 95 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 170 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
        (const_int 1 [0x1])) "../src/motor.f":184 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 170 97 98 9 24 (nil) [1 uses])
(note 98 170 99 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
            (const_int 20 [0x14]))) "../src/motor.f":184 -1
     (nil))
(insn 100 99 101 9 (set (reg:QI 136 [ _80 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "../src/motor.f":184 -1
     (nil))
(insn 101 100 102 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _80 ])
            (const_int 0 [0]))) "../src/motor.f":184 -1
     (nil))
(jump_insn 102 101 103 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../src/motor.f":184 -1
     (nil)
 -> 173)
;;  succ:       14
;;              10 (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 103 102 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 10 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 105 104 106 10 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [11 nmpar+0 S8 A64])) "../src/motor.f":187 -1
     (nil))
(insn 106 105 107 10 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [12 parmot+0 S8 A64])) "../src/motor.f":187 -1
     (nil))
(insn 107 106 108 10 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [11 imotype+0 S8 A64])) "../src/motor.f":187 -1
     (nil))
(insn 108 107 109 10 (set (reg:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":187 -1
     (nil))
(insn 109 108 110 10 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [10 omega+0 S8 A64])) "../src/motor.f":187 -1
     (nil))
(insn 110 109 111 10 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 111 110 112 10 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 112 111 113 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 176)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 113 112 114 10 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 114 113 115 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 177)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 115 114 116 10 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 116 115 117 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 178)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 117 116 118 10 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 118 117 119 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 179)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 119 118 120 10 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (nil))
(insn 120 119 121 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [12  S8 A64])
        (reg:DI 180)) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 121 120 122 10 (set (reg:DI 38 r9)
        (reg:DI 170)) "../src/motor.f":187 -1
     (nil))
(insn 122 121 123 10 (set (reg:DI 37 r8)
        (reg:DI 171)) "../src/motor.f":187 -1
     (nil))
(insn 123 122 124 10 (set (reg:DI 2 cx)
        (reg:DI 172)) "../src/motor.f":187 -1
     (nil))
(insn 124 123 125 10 (set (reg:DI 1 dx)
        (reg:DI 173)) "../src/motor.f":187 -1
     (nil))
(insn 125 124 126 10 (set (reg:DI 4 si)
        (reg:DI 174)) "../src/motor.f":187 -1
     (nil))
(insn 126 125 127 10 (set (reg:DI 5 di)
        (reg:DI 175)) "../src/motor.f":187 -1
     (nil))
(call_insn 127 126 128 10 (call (mem:QI (symbol_ref:DI ("motorq_") [flags 0x403]  <function_decl 0x1427e4800 motorq>) [0 motorq S1 A8])
        (const_int 48 [0x30])) "../src/motor.f":187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 128 127 129 10 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":187 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 129 128 130 10 (set (reg:SF 109 [ qm.13_23 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 qm+0 S4 A64])) "../src/motor.f":189 -1
     (nil))
(insn 130 129 131 10 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [10 q+0 S8 A64])) "../src/motor.f":189 -1
     (nil))
(insn 131 130 132 10 (set (reg:SF 110 [ _24 ])
        (mem:SF (reg/f:DI 181) [2 *q_66(D)+0 S4 A32])) "../src/motor.f":189 -1
     (nil))
(insn 132 131 133 10 (set (reg:SF 111 [ _25 ])
        (minus:SF (reg:SF 109 [ qm.13_23 ])
            (reg:SF 110 [ _24 ]))) "../src/motor.f":189 -1
     (nil))
(insn 133 132 134 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res+0 S4 A32])
        (reg:SF 111 [ _25 ])) "../src/motor.f":189 -1
     (nil))
(insn 134 133 135 10 (set (reg:SF 182)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 qm_volt+0 S4 A64])) "../src/motor.f":190 -1
     (nil))
(insn 135 134 136 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32])
        (reg:SF 182)) "../src/motor.f":190 -1
     (nil))
(insn 136 135 137 10 (set (reg:SF 112 [ res.14_26 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [2 res+0 S4 A32])) "../src/motor.f":192 -1
     (nil))
(insn 137 136 138 10 (set (reg:SF 113 [ _27 ])
        (div:SF (reg:SF 112 [ res.14_26 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":192 -1
     (nil))
(insn 138 137 139 10 (set (reg:V4SF 184)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":192 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 139 138 140 10 (parallel [
            (set (reg:SF 183)
                (neg:SF (reg:SF 113 [ _27 ])))
            (use (reg:V4SF 184))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":192 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 113 [ _27 ]))
        (nil)))
(insn 140 139 141 10 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32])
        (reg:SF 183)) "../src/motor.f":192 -1
     (nil))
(insn 141 140 142 10 (set (reg:SF 135 [ M.5_52 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC4") [flags 0x2]) [2  S4 A32])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 142 141 143 10 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":194 -1
     (nil))
(insn 143 142 144 10 (set (reg:SF 114 [ _28 ])
        (mem:SF (reg/f:DI 185) [2 *volt_58(D)+0 S4 A32])) "../src/motor.f":194 -1
     (nil))
(insn 144 143 145 10 (set (reg:V4SF 186)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 145 144 146 10 (parallel [
            (set (reg:SF 137 [ _87 ])
                (abs:SF (reg:SF 114 [ _28 ])))
            (use (reg:V4SF 186))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 114 [ _28 ]))
        (nil)))
(insn 146 145 147 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 137 [ _87 ])
            (reg:SF 135 [ M.5_52 ]))) "../src/motor.f":194 -1
     (nil))
(insn 147 146 148 10 (set (reg:QI 115 [ _29 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))
(insn 148 147 149 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 135 [ M.5_52 ])
            (reg:SF 135 [ M.5_52 ]))) "../src/motor.f":194 -1
     (nil))
(insn 149 148 150 10 (set (reg:QI 116 [ _30 ])
        (unordered:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))
(insn 150 149 151 10 (parallel [
            (set (reg:QI 117 [ _31 ])
                (ior:QI (reg:QI 115 [ _29 ])
                    (reg:QI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (nil))
(insn 151 150 152 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 0 [0]))) "../src/motor.f":194 -1
     (nil))
(jump_insn 152 151 153 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "../src/motor.f":194 -1
     (nil)
 -> 154)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 153 152 9 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 9 153 154 11 (set (reg:SF 135 [ M.5_52 ])
        (reg:SF 137 [ _87 ])) "../src/motor.f":194 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 154 9 155 12 22 (nil) [1 uses])
(note 155 154 156 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 12 (set (reg:SF 187)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32])) "../src/motor.f":194 -1
     (nil))
(insn 157 156 158 12 (set (reg:V4SF 188)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC9") [flags 0x2]) [2  S16 A128])) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 158 157 159 12 (parallel [
            (set (reg:SF 118 [ _32 ])
                (abs:SF (reg:SF 187)))
            (use (reg:V4SF 188))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":194 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 187))
        (nil)))
(insn 159 158 160 12 (set (reg:SF 119 [ eps.15_33 ])
        (mem/c:SF (symbol_ref:DI ("eps.3574") [flags 0x1c02]  <var_decl 0x1427f22d0 eps>) [2 eps+0 S4 A32])) "../src/motor.f":194 -1
     (nil))
(insn 160 159 161 12 (set (reg:SF 120 [ _34 ])
        (mult:SF (reg:SF 135 [ M.5_52 ])
            (reg:SF 119 [ eps.15_33 ]))) "../src/motor.f":194 -1
     (nil))
(insn 161 160 162 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 120 [ _34 ])
            (reg:SF 118 [ _32 ]))) "../src/motor.f":194 -1
     (nil))
(jump_insn 162 161 163 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) "../src/motor.f":194 -1
     (nil)
 -> 197)
;;  succ:       15
;;              13 (FALLTHRU)

;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 13 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":196 -1
     (nil))
(insn 165 164 166 13 (set (reg:SF 121 [ _35 ])
        (mem:SF (reg/f:DI 189) [2 *volt_58(D)+0 S4 A32])) "../src/motor.f":196 -1
     (nil))
(insn 166 165 167 13 (set (reg:SF 122 [ _36 ])
        (plus:SF (reg:SF 121 [ _35 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 dvolt+0 S4 A32]))) "../src/motor.f":196 -1
     (nil))
(insn 167 166 168 13 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [10 volt+0 S8 A64])) "../src/motor.f":196 -1
     (nil))
(insn 168 167 169 13 (set (mem:SF (reg/f:DI 190) [2 *volt_58(D)+0 S4 A32])
        (reg:SF 122 [ _36 ])) "../src/motor.f":196 -1
     (nil))
(insn 169 168 171 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 iter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":184 -1
     (nil))
(jump_insn 171 169 172 13 (set (pc)
        (label_ref 170)) "../src/motor.f":184 -1
     (nil)
 -> 170)
;;  succ:       9 (DFS_BACK)

(barrier 172 171 173)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 173 172 174 14 21 (nil) [1 uses])
(note 174 173 175 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 14 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*lC0") [flags 0x2]  <var_decl 0x1427fb990 *lC0>)) "../src/motor.f":198 -1
     (nil))
(insn 176 175 177 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [5 dt_parm.6.common.filename+0 S8 A64])
        (reg/f:DI 191)) "../src/motor.f":198 -1
     (nil))
(insn 177 176 178 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [1 dt_parm.6.common.line+0 S4 A64])
        (const_int 198 [0xc6])) "../src/motor.f":198 -1
     (nil))
(insn 178 177 179 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [1 dt_parm.6.common.flags+0 S4 A64])
        (const_int 128 [0x80])) "../src/motor.f":198 -1
     (nil))
(insn 179 178 180 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -556 [0xfffffffffffffdd4])) [1 dt_parm.6.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "../src/motor.f":198 -1
     (nil))
(insn 180 179 181 14 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))
(insn 181 180 182 14 (set (reg:DI 5 di)
        (reg:DI 192)) "../src/motor.f":198 -1
     (nil))
(call_insn 182 181 183 14 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x1427e0800 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 183 182 184 14 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))
(insn 184 183 185 14 (set (reg:SI 1 dx)
        (const_int 43 [0x2b])) "../src/motor.f":198 -1
     (nil))
(insn 185 184 186 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*lC13") [flags 0x2]  <var_decl 0x143234c60 *lC13>)) "../src/motor.f":198 -1
     (nil))
(insn 186 185 187 14 (set (reg:DI 5 di)
        (reg:DI 193)) "../src/motor.f":198 -1
     (nil))
(call_insn 187 186 188 14 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x1427d4900 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 188 187 189 14 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))
(insn 189 188 190 14 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))
(insn 190 189 191 14 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "../src/motor.f":198 -1
     (nil))
(insn 191 190 192 14 (set (reg:DI 4 si)
        (reg:DI 194)) "../src/motor.f":198 -1
     (nil))
(insn 192 191 193 14 (set (reg:DI 5 di)
        (reg:DI 195)) "../src/motor.f":198 -1
     (nil))
(call_insn 193 192 194 14 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x1427d4d00 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 194 193 195 14 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":198 -1
     (nil))
(insn 195 194 196 14 (set (reg:DI 5 di)
        (reg:DI 196)) "../src/motor.f":198 -1
     (nil))
(call_insn 196 195 197 14 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x1427e4300 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "../src/motor.f":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              14 (FALLTHRU)
(code_label 197 196 198 15 23 (nil) [1 uses])
(note 198 197 199 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 15 (set (reg:SF 197)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [2 qm_omega+0 S4 A32])) "../src/motor.f":201 -1
     (nil))
(insn 200 199 201 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 res_omega+0 S4 A32])
        (reg:SF 197)) "../src/motor.f":201 -1
     (nil))
(insn 201 200 202 15 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*lC11") [flags 0x2]) [2  S4 A32])) "../src/motor.f":202 -1
     (nil))
(insn 202 201 203 15 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 res_q+0 S4 A32])
        (reg:SF 198)) "../src/motor.f":202 -1
     (nil))
(insn 203 202 204 15 (set (reg:SF 199)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 res_omega+0 S4 A32])) "../src/motor.f":204 -1
     (nil))
(insn 204 203 205 15 (set (reg:SF 123 [ _37 ])
        (div:SF (reg:SF 199)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":204 -1
     (nil))
(insn 205 204 206 15 (set (reg:V4SF 200)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":204 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 206 205 207 15 (parallel [
            (set (reg:SF 124 [ _38 ])
                (neg:SF (reg:SF 123 [ _37 ])))
            (use (reg:V4SF 200))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":204 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 123 [ _37 ]))
        (nil)))
(insn 207 206 208 15 (set (reg/f:DI 201)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 volt_omega+0 S8 A64])) "../src/motor.f":204 -1
     (nil))
(insn 208 207 209 15 (set (mem:SF (reg/f:DI 201) [2 *volt_omega_102(D)+0 S4 A32])
        (reg:SF 124 [ _38 ])) "../src/motor.f":204 -1
     (nil))
(insn 209 208 210 15 (set (reg:SF 202)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 res_q+0 S4 A32])) "../src/motor.f":205 -1
     (nil))
(insn 210 209 211 15 (set (reg:SF 125 [ _39 ])
        (div:SF (reg:SF 202)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [2 res_volt+0 S4 A32]))) "../src/motor.f":205 -1
     (nil))
(insn 211 210 212 15 (set (reg:V4SF 203)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC5") [flags 0x2]) [2  S16 A128])) "../src/motor.f":205 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 212 211 213 15 (parallel [
            (set (reg:SF 126 [ _40 ])
                (neg:SF (reg:SF 125 [ _39 ])))
            (use (reg:V4SF 203))
            (clobber (reg:CC 17 flags))
        ]) "../src/motor.f":205 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 125 [ _39 ]))
        (nil)))
(insn 213 212 214 15 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 volt_q+0 S8 A64])) "../src/motor.f":205 -1
     (nil))
(insn 214 213 215 15 (set (mem:SF (reg/f:DI 204) [2 *volt_q_104(D)+0 S4 A32])
        (reg:SF 126 [ _40 ])) "../src/motor.f":205 -1
     (nil))
(insn 215 214 216 15 (set (reg/f:DI 205)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [10 volt_omega+0 S8 A64])) "../src/motor.f":207 -1
     (nil))
(insn 216 215 217 15 (set (reg:SF 127 [ _41 ])
        (mem:SF (reg/f:DI 205) [2 *volt_omega_102(D)+0 S4 A32])) "../src/motor.f":207 -1
     (nil))
(insn 217 216 218 15 (set (reg:SF 128 [ am_volt.16_42 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 am_volt+0 S4 A32])) "../src/motor.f":207 -1
     (nil))
(insn 218 217 219 15 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 127 [ _41 ])
            (reg:SF 128 [ am_volt.16_42 ]))) "../src/motor.f":207 -1
     (nil))
(insn 219 218 220 15 (set (reg:SF 130 [ am_omega.17_44 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 am_omega+0 S4 A64])) "../src/motor.f":207 -1
     (nil))
(insn 220 219 221 15 (set (reg:SF 131 [ _45 ])
        (plus:SF (reg:SF 129 [ _43 ])
            (reg:SF 130 [ am_omega.17_44 ]))) "../src/motor.f":207 -1
     (nil))
(insn 221 220 222 15 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [10 amps_omega+0 S8 A64])) "../src/motor.f":207 -1
     (nil))
(insn 222 221 223 15 (set (mem:SF (reg/f:DI 206) [2 *amps_omega_106(D)+0 S4 A32])
        (reg:SF 131 [ _45 ])) "../src/motor.f":207 -1
     (nil))
(insn 223 222 224 15 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [10 volt_q+0 S8 A64])) "../src/motor.f":208 -1
     (nil))
(insn 224 223 225 15 (set (reg:SF 132 [ _46 ])
        (mem:SF (reg/f:DI 207) [2 *volt_q_104(D)+0 S4 A32])) "../src/motor.f":208 -1
     (nil))
(insn 225 224 226 15 (set (reg:SF 133 [ am_volt.18_47 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [2 am_volt+0 S4 A32])) "../src/motor.f":208 -1
     (nil))
(insn 226 225 227 15 (set (reg:SF 134 [ _48 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (reg:SF 133 [ am_volt.18_47 ]))) "../src/motor.f":208 -1
     (nil))
(insn 227 226 228 15 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [10 amps_q+0 S8 A64])) "../src/motor.f":208 -1
     (nil))
(insn 228 227 234 15 (set (mem:SF (reg/f:DI 208) [2 *amps_q_108(D)+0 S4 A32])
        (reg:SF 134 [ _48 ])) "../src/motor.f":208 -1
     (nil))
(insn 234 228 0 15 (const_int 0 [0]) "../src/motor.f":210 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

