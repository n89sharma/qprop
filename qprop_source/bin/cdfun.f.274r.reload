
;; Function cdfun (cdfun_, funcdef_no=0, decl_uid=3499, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=64, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 22:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 26:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 30:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 40:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 43:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 44
	 Choosing alt 1 in insn 44:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 46:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 48:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 51:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 54:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 55:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 56:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 62:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 63:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 64
	 Choosing alt 1 in insn 64:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 66:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 68:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 71:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 72:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 73:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) v  (1) vm {*cmpiusf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 83:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 86:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 89:  (0) v  (1) m {*movsf_internal}
      Creating newreg=174 from oldreg=118, assigning class ALL_SSE_REGS to r174
   89: r174:SF=[r168:DI]
      REG_DEAD r168:DI
    Inserting insn reload after:
  135: r118:SF=r174:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 135:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 95:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 96
	 Choosing alt 1 in insn 96:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 97
	 Choosing alt 1 in insn 97:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=175 from oldreg=118, assigning class SSE_REGS to r175
      Making reload reg 175 for reg 118 optional
   97: r123:SF=r122:SF+r175:SF
      REG_DEAD r122:SF
      REG_DEAD r118:SF
    Inserting insn reload before:
  136: r175:SF=r118:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 136:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 98:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 99:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 101:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 104:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 106:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 107:  (0) v  (1) m {*movsf_internal}
      Creating newreg=176 from oldreg=127, assigning class ALL_SSE_REGS to r176
  107: r176:SF=[r172:DI]
      REG_DEAD r172:DI
    Inserting insn reload after:
  137: r127:SF=r176:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 137:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 114:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 115:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) v  (1) r {*floatsisf2_mixed}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 1 in insn 118:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 119
	 Choosing alt 1 in insn 119:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=177 from oldreg=127, assigning class SSE_REGS to r177
      Making reload reg 177 for reg 127 optional
  119: r136:SF=r135:SF+r177:SF
      REG_DEAD r135:SF
      REG_DEAD r127:SF
    Inserting insn reload before:
  138: r177:SF=r127:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 138:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 121:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=178 from oldreg=127, assigning class ALL_SSE_REGS to inheritance r178
    Original reg change 127->178 (bb4):
  137: r178:SF=r176:SF
    Add original<-inheritance after:
  139: r127:SF=r178:SF

    Inheritance reuse change 127->178 (bb4):
  138: r177:SF=r178:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=179 from oldreg=118, assigning class ALL_SSE_REGS to inheritance r179
    Original reg change 118->179 (bb4):
  135: r179:SF=r174:SF
    Add original<-inheritance after:
  140: r118:SF=r179:SF

    Inheritance reuse change 118->179 (bb4):
  136: r175:SF=r179:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   139: r127:SF=r178:SF
deleting insn with uid = 139.
	    Removing dead insn:
   140: r118:SF=r179:SF
deleting insn with uid = 140.
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 3
   Insn 132: point = 0, n_alt = -1
  BB 4
   Insn 131: point = 0, n_alt = -1
   Insn 121: point = 0, n_alt = 8
   Insn 120: point = 1, n_alt = 3
   Insn 119: point = 2, n_alt = 1
   Insn 138: point = 4, n_alt = 7
	   Creating copy r177<-r178@1
   Insn 118: point = 6, n_alt = 1
   Insn 117: point = 8, n_alt = 1
   Insn 116: point = 10, n_alt = 0
   Insn 115: point = 11, n_alt = 1
   Insn 114: point = 13, n_alt = 7
   Insn 113: point = 14, n_alt = -1
   Insn 112: point = 15, n_alt = 0
   Insn 111: point = 15, n_alt = -1
   Insn 110: point = 16, n_alt = -1
   Insn 109: point = 17, n_alt = 0
   Insn 108: point = 19, n_alt = 0
   Insn 137: point = 20, n_alt = 8
	   Creating copy r176->r178@1
   Insn 107: point = 22, n_alt = 7
   Insn 106: point = 24, n_alt = 3
   Insn 105: point = 25, n_alt = -1
   Insn 104: point = 27, n_alt = 2
   Insn 103: point = 29, n_alt = 7
   Insn 102: point = 31, n_alt = 3
   Insn 101: point = 32, n_alt = 7
   Insn 100: point = 34, n_alt = 3
   Insn 99: point = 35, n_alt = 8
   Insn 98: point = 36, n_alt = 3
   Insn 97: point = 37, n_alt = 1
   Insn 136: point = 39, n_alt = 7
	   Creating copy r175<-r179@1
   Insn 96: point = 41, n_alt = 1
   Insn 95: point = 43, n_alt = 7
   Insn 94: point = 44, n_alt = -1
   Insn 93: point = 45, n_alt = 0
   Insn 92: point = 45, n_alt = -1
   Insn 91: point = 46, n_alt = -1
   Insn 90: point = 47, n_alt = 0
   Insn 135: point = 48, n_alt = 8
	   Creating copy r174->r179@1
   Insn 89: point = 50, n_alt = 7
   Insn 88: point = 52, n_alt = 3
   Insn 87: point = 53, n_alt = -1
   Insn 86: point = 55, n_alt = 2
   Insn 85: point = 57, n_alt = 7
   Insn 84: point = 59, n_alt = 3
   Insn 83: point = 60, n_alt = 7
   Insn 82: point = 62, n_alt = 3
  BB 2
   Insn 77: point = 63, n_alt = -1
   Insn 76: point = 63, n_alt = 1
   Insn 75: point = 64, n_alt = 7
   Insn 74: point = 66, n_alt = 3
   Insn 73: point = 67, n_alt = 7
   Insn 72: point = 69, n_alt = 3
   Insn 71: point = 70, n_alt = 8
   Insn 70: point = 71, n_alt = 7
   Insn 69: point = 72, n_alt = 3
   Insn 68: point = 73, n_alt = 8
   Insn 67: point = 74, n_alt = 3
   Insn 66: point = 75, n_alt = 1
   Insn 65: point = 77, n_alt = -1
   Insn 64: point = 79, n_alt = 1
   Insn 63: point = 81, n_alt = 1
   Insn 62: point = 83, n_alt = 7
   Insn 61: point = 85, n_alt = 3
   Insn 60: point = 86, n_alt = 7
   Insn 59: point = 88, n_alt = 3
   Insn 58: point = 89, n_alt = 1
   Insn 57: point = 91, n_alt = 7
   Insn 56: point = 92, n_alt = 8
   Insn 55: point = 93, n_alt = 3
   Insn 54: point = 94, n_alt = 1
   Insn 53: point = 96, n_alt = -1
   Insn 52: point = 98, n_alt = 1
   Insn 51: point = 100, n_alt = 1
   Insn 50: point = 102, n_alt = 7
   Insn 49: point = 104, n_alt = 3
   Insn 48: point = 105, n_alt = 8
   Insn 47: point = 106, n_alt = 3
   Insn 46: point = 107, n_alt = 1
   Insn 45: point = 109, n_alt = -1
   Insn 44: point = 111, n_alt = 1
   Insn 43: point = 113, n_alt = 1
   Insn 42: point = 115, n_alt = 7
   Insn 41: point = 117, n_alt = 3
   Insn 40: point = 118, n_alt = 7
   Insn 39: point = 120, n_alt = 3
   Insn 38: point = 121, n_alt = 1
   Insn 37: point = 123, n_alt = 7
   Insn 36: point = 124, n_alt = 8
   Insn 35: point = 125, n_alt = 2
   Insn 34: point = 127, n_alt = 7
   Insn 33: point = 129, n_alt = 3
   Insn 32: point = 130, n_alt = 7
   Insn 31: point = 132, n_alt = 3
   Insn 30: point = 133, n_alt = 8
   Insn 29: point = 134, n_alt = 2
   Insn 28: point = 136, n_alt = 7
   Insn 27: point = 138, n_alt = 3
   Insn 26: point = 139, n_alt = 1
   Insn 25: point = 141, n_alt = 7
   Insn 24: point = 143, n_alt = 3
   Insn 23: point = 144, n_alt = 4
   Insn 22: point = 145, n_alt = 9
   Insn 21: point = 146, n_alt = 0
   Insn 20: point = 146, n_alt = -1
   Insn 19: point = 147, n_alt = -1
   Insn 18: point = 148, n_alt = 7
   Insn 17: point = 150, n_alt = 3
   Insn 16: point = 151, n_alt = -1
   Insn 15: point = 153, n_alt = 2
   Insn 14: point = 155, n_alt = 7
   Insn 13: point = 157, n_alt = 3
   Insn 12: point = 158, n_alt = 7
   Insn 11: point = 160, n_alt = 3
   Insn 7: point = 161, n_alt = 5
   Insn 6: point = 161, n_alt = 5
   Insn 5: point = 161, n_alt = 5
   Insn 4: point = 161, n_alt = 5
   Insn 3: point = 161, n_alt = 5
   Insn 2: point = 161, n_alt = 5
 r87: [154..158]
 r88: [154..155]
 r89: [152..153]
 r90: [147..148]
 r91: [140..141]
 r92: [135..139]
 r93: [135..136]
 r94: [126..130]
 r95: [126..127]
 r96: [112..118]
 r97: [114..115]
 r98: [112..113]
 r99: [110..111]
 r100: [108..109]
 r101: [105..107]
 r102: [101..102]
 r103: [99..100]
 r104: [97..98]
 r105: [95..96]
 r106: [92..94]
 r107: [80..86]
 r108: [82..83]
 r109: [80..81]
 r110: [78..79]
 r111: [76..77]
 r112: [73..75]
 r113: [63..67]
 r114: [63..64]
 r115: [56..60]
 r116: [56..57]
 r117: [54..55]
 r119: [46..47]
 r120: [42..44]
 r121: [42..43]
 r122: [38..41]
 r123: [35..37]
 r124: [28..32]
 r125: [28..29]
 r126: [26..27]
 r128: [18..19]
 r129: [16..17]
 r130: [12..14]
 r131: [12..13]
 r132: [7..11]
 r133: [9..10]
 r134: [7..8]
 r135: [3..6]
 r136: [0..2]
 r137: [146..151]
 r138: [122..123]
 r139: [114..121]
 r140: [90..91]
 r141: [82..89]
 r142: [45..53]
 r143: [15..25]
 r144: [159..160]
 r145: [156..157]
 r146: [149..150]
 r147: [144..145]
 r148: [142..143]
 r149: [137..138]
 r150: [133..134]
 r151: [131..132]
 r152: [128..129]
 r153: [124..125]
 r154: [119..120]
 r155: [116..117]
 r156: [105..106]
 r157: [103..104]
 r158: [92..93]
 r159: [87..88]
 r160: [84..85]
 r161: [73..74]
 r162: [70..72]
 r163: [70..71]
 r164: [68..69]
 r165: [65..66]
 r166: [61..62]
 r167: [58..59]
 r168: [51..52]
 r169: [35..36]
 r170: [33..34]
 r171: [30..31]
 r172: [23..24]
 r173: [0..1]
 r174: [49..50]
 r175: [38..39]
 r176: [21..22]
 r177: [3..4]
 r178: [5..20]
 r179: [40..48]
Compressing live ranges: from 161 to 134 - 83%
Ranges after the compression:
 r87: [128..131]
 r88: [128..129]
 r89: [126..127]
 r90: [122..123]
 r91: [116..117]
 r92: [112..115]
 r93: [112..113]
 r94: [104..107]
 r95: [104..105]
 r96: [92..97]
 r97: [94..95]
 r98: [92..93]
 r99: [90..91]
 r100: [88..89]
 r101: [86..87]
 r102: [82..83]
 r103: [80..81]
 r104: [78..79]
 r105: [76..77]
 r106: [74..75]
 r107: [64..69]
 r108: [66..67]
 r109: [64..65]
 r110: [62..63]
 r111: [60..61]
 r112: [58..59]
 r113: [50..53]
 r114: [50..51]
 r115: [44..47]
 r116: [44..45]
 r117: [42..43]
 r119: [36..37]
 r120: [34..35]
 r121: [34..35]
 r122: [30..33]
 r123: [28..29]
 r124: [22..25]
 r125: [22..23]
 r126: [20..21]
 r128: [14..15]
 r129: [12..13]
 r130: [10..11]
 r131: [10..11]
 r132: [6..9]
 r133: [8..9]
 r134: [6..7]
 r135: [2..5]
 r136: [0..1]
 r137: [122..125]
 r138: [100..101]
 r139: [94..99]
 r140: [72..73]
 r141: [66..71]
 r142: [36..41]
 r143: [12..19]
 r144: [132..133]
 r145: [130..131]
 r146: [124..125]
 r147: [120..121]
 r148: [118..119]
 r149: [114..115]
 r150: [110..111]
 r151: [108..109]
 r152: [106..107]
 r153: [102..103]
 r154: [98..99]
 r155: [96..97]
 r156: [86..87]
 r157: [84..85]
 r158: [74..75]
 r159: [70..71]
 r160: [68..69]
 r161: [58..59]
 r162: [56..57]
 r163: [56..57]
 r164: [54..55]
 r165: [52..53]
 r166: [48..49]
 r167: [46..47]
 r168: [40..41]
 r169: [28..29]
 r170: [26..27]
 r171: [24..25]
 r172: [18..19]
 r173: [0..1]
 r174: [38..39]
 r175: [30..31]
 r176: [16..17]
 r177: [2..3]
 r178: [4..15]
 r179: [32..37]

********** Assignment #1: **********

	 Assigning to 179 (cl=ALL_SSE_REGS, orig=118, freq=2, tfirst=174, tfreq=2)...
	 Assigning to 174 (cl=ALL_SSE_REGS, orig=118, freq=2, tfirst=174, tfreq=2)...
	   Assign 24 to reload r174 (freq=2)
	Hard reg 24 is preferable by r179 with profit 1
	Hard reg 24 is preferable by r175 with profit 1
	 Assigning to 175 (cl=SSE_REGS, orig=118, freq=2, tfirst=174, tfreq=2)...
	   Assign 24 to optional reload r175 (freq=2)
	Hard reg 24 is preferable by r179 with profit 2
	 Assigning to 178 (cl=ALL_SSE_REGS, orig=127, freq=2, tfirst=176, tfreq=2)...
	 Assigning to 176 (cl=ALL_SSE_REGS, orig=127, freq=2, tfirst=176, tfreq=2)...
	   Assign 25 to reload r176 (freq=2)
	Hard reg 25 is preferable by r178 with profit 1
	Hard reg 25 is preferable by r177 with profit 1
	 Assigning to 177 (cl=SSE_REGS, orig=127, freq=2, tfirst=176, tfreq=2)...
	   Assign 25 to optional reload r177 (freq=2)
	Hard reg 25 is preferable by r178 with profit 2
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  138: r177:SF=r127:SF
      REG_DEAD r127:SF
   Insn after restoring regs:
  137: r127:SF=r176:SF
      REG_DEAD r176:SF
   Insn after restoring regs:
  136: r175:SF=r118:SF
      REG_DEAD r118:SF
   Insn after restoring regs:
  135: r118:SF=r174:SF
      REG_DEAD r174:SF
Remove optional reload reg 175
  Restoring original insn:
   97: r123:SF=r122:SF+r118:SF
      REG_DEAD r118:SF
      REG_DEAD r122:SF
  Deleting move 136
  136: r175:SF=r118:SF
      REG_DEAD r118:SF
deleting insn with uid = 136.
Remove optional reload reg 177
  Restoring original insn:
  119: r136:SF=r135:SF+r127:SF
      REG_DEAD r127:SF
      REG_DEAD r135:SF
  Deleting move 138
  138: r177:SF=r127:SF
      REG_DEAD r127:SF
deleting insn with uid = 138.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 119:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=180 from oldreg=127, assigning class SSE_REGS to r180
      Making reload reg 180 for reg 127 optional
  119: r136:SF=r135:SF+r180:SF
      REG_DEAD r127:SF
      REG_DEAD r135:SF
    Inserting insn reload before:
  141: r180:SF=r127:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 141:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 97:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=181 from oldreg=118, assigning class SSE_REGS to r181
      Making reload reg 181 for reg 118 optional
   97: r123:SF=r122:SF+r181:SF
      REG_DEAD r118:SF
      REG_DEAD r122:SF
    Inserting insn reload before:
  142: r181:SF=r118:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 142:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=182 from oldreg=127, assigning class ALL_SSE_REGS to inheritance r182
    Original reg change 127->182 (bb4):
  137: r182:SF=r176:SF
      REG_DEAD r176:SF
    Add original<-inheritance after:
  143: r127:SF=r182:SF

    Inheritance reuse change 127->182 (bb4):
  141: r180:SF=r182:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=183 from oldreg=118, assigning class ALL_SSE_REGS to inheritance r183
    Original reg change 118->183 (bb4):
  135: r183:SF=r174:SF
      REG_DEAD r174:SF
    Add original<-inheritance after:
  144: r118:SF=r183:SF

    Inheritance reuse change 118->183 (bb4):
  142: r181:SF=r183:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   143: r127:SF=r182:SF
deleting insn with uid = 143.
	    Removing dead insn:
   144: r118:SF=r183:SF
deleting insn with uid = 144.
EBB 5

********** Pseudo live ranges #2: **********

  BB 5
  BB 3
   Insn 132: point = 0, n_alt = -1
  BB 4
   Insn 131: point = 0, n_alt = -1
   Insn 121: point = 0, n_alt = 8
   Insn 120: point = 1, n_alt = 3
   Insn 119: point = 2, n_alt = 1
   Insn 141: point = 4, n_alt = 7
	   Creating copy r180<-r182@1
   Insn 118: point = 6, n_alt = 1
   Insn 117: point = 8, n_alt = 1
   Insn 116: point = 10, n_alt = 0
   Insn 115: point = 11, n_alt = 1
   Insn 114: point = 13, n_alt = 7
   Insn 113: point = 14, n_alt = -1
   Insn 112: point = 15, n_alt = 0
   Insn 111: point = 15, n_alt = -1
   Insn 110: point = 16, n_alt = -1
   Insn 109: point = 17, n_alt = 0
   Insn 108: point = 19, n_alt = 0
   Insn 137: point = 20, n_alt = 8
	   Creating copy r176->r182@1
   Insn 107: point = 22, n_alt = 7
   Insn 106: point = 24, n_alt = 3
   Insn 105: point = 25, n_alt = -1
   Insn 104: point = 27, n_alt = 2
   Insn 103: point = 29, n_alt = 7
   Insn 102: point = 31, n_alt = 3
   Insn 101: point = 32, n_alt = 7
   Insn 100: point = 34, n_alt = 3
   Insn 99: point = 35, n_alt = 8
   Insn 98: point = 36, n_alt = 3
   Insn 97: point = 37, n_alt = 1
   Insn 142: point = 39, n_alt = 7
	   Creating copy r181<-r183@1
   Insn 96: point = 41, n_alt = 1
   Insn 95: point = 43, n_alt = 7
   Insn 94: point = 44, n_alt = -1
   Insn 93: point = 45, n_alt = 0
   Insn 92: point = 45, n_alt = -1
   Insn 91: point = 46, n_alt = -1
   Insn 90: point = 47, n_alt = 0
   Insn 135: point = 48, n_alt = 8
	   Creating copy r174->r183@1
   Insn 89: point = 50, n_alt = 7
   Insn 88: point = 52, n_alt = 3
   Insn 87: point = 53, n_alt = -1
   Insn 86: point = 55, n_alt = 2
   Insn 85: point = 57, n_alt = 7
   Insn 84: point = 59, n_alt = 3
   Insn 83: point = 60, n_alt = 7
   Insn 82: point = 62, n_alt = 3
  BB 2
   Insn 77: point = 63, n_alt = -1
   Insn 76: point = 63, n_alt = 1
   Insn 75: point = 64, n_alt = 7
   Insn 74: point = 66, n_alt = 3
   Insn 73: point = 67, n_alt = 7
   Insn 72: point = 69, n_alt = 3
   Insn 71: point = 70, n_alt = 8
   Insn 70: point = 71, n_alt = 7
   Insn 69: point = 72, n_alt = 3
   Insn 68: point = 73, n_alt = 8
   Insn 67: point = 74, n_alt = 3
   Insn 66: point = 75, n_alt = 1
   Insn 65: point = 77, n_alt = -1
   Insn 64: point = 79, n_alt = 1
   Insn 63: point = 81, n_alt = 1
   Insn 62: point = 83, n_alt = 7
   Insn 61: point = 85, n_alt = 3
   Insn 60: point = 86, n_alt = 7
   Insn 59: point = 88, n_alt = 3
   Insn 58: point = 89, n_alt = 1
   Insn 57: point = 91, n_alt = 7
   Insn 56: point = 92, n_alt = 8
   Insn 55: point = 93, n_alt = 3
   Insn 54: point = 94, n_alt = 1
   Insn 53: point = 96, n_alt = -1
   Insn 52: point = 98, n_alt = 1
   Insn 51: point = 100, n_alt = 1
   Insn 50: point = 102, n_alt = 7
   Insn 49: point = 104, n_alt = 3
   Insn 48: point = 105, n_alt = 8
   Insn 47: point = 106, n_alt = 3
   Insn 46: point = 107, n_alt = 1
   Insn 45: point = 109, n_alt = -1
   Insn 44: point = 111, n_alt = 1
   Insn 43: point = 113, n_alt = 1
   Insn 42: point = 115, n_alt = 7
   Insn 41: point = 117, n_alt = 3
   Insn 40: point = 118, n_alt = 7
   Insn 39: point = 120, n_alt = 3
   Insn 38: point = 121, n_alt = 1
   Insn 37: point = 123, n_alt = 7
   Insn 36: point = 124, n_alt = 8
   Insn 35: point = 125, n_alt = 2
   Insn 34: point = 127, n_alt = 7
   Insn 33: point = 129, n_alt = 3
   Insn 32: point = 130, n_alt = 7
   Insn 31: point = 132, n_alt = 3
   Insn 30: point = 133, n_alt = 8
   Insn 29: point = 134, n_alt = 2
   Insn 28: point = 136, n_alt = 7
   Insn 27: point = 138, n_alt = 3
   Insn 26: point = 139, n_alt = 1
   Insn 25: point = 141, n_alt = 7
   Insn 24: point = 143, n_alt = 3
   Insn 23: point = 144, n_alt = 4
   Insn 22: point = 145, n_alt = 9
   Insn 21: point = 146, n_alt = 0
   Insn 20: point = 146, n_alt = -1
   Insn 19: point = 147, n_alt = -1
   Insn 18: point = 148, n_alt = 7
   Insn 17: point = 150, n_alt = 3
   Insn 16: point = 151, n_alt = -1
   Insn 15: point = 153, n_alt = 2
   Insn 14: point = 155, n_alt = 7
   Insn 13: point = 157, n_alt = 3
   Insn 12: point = 158, n_alt = 7
   Insn 11: point = 160, n_alt = 3
   Insn 7: point = 161, n_alt = 5
   Insn 6: point = 161, n_alt = 5
   Insn 5: point = 161, n_alt = 5
   Insn 4: point = 161, n_alt = 5
   Insn 3: point = 161, n_alt = 5
   Insn 2: point = 161, n_alt = 5
 r87: [154..158]
 r88: [154..155]
 r89: [152..153]
 r90: [147..148]
 r91: [140..141]
 r92: [135..139]
 r93: [135..136]
 r94: [126..130]
 r95: [126..127]
 r96: [112..118]
 r97: [114..115]
 r98: [112..113]
 r99: [110..111]
 r100: [108..109]
 r101: [105..107]
 r102: [101..102]
 r103: [99..100]
 r104: [97..98]
 r105: [95..96]
 r106: [92..94]
 r107: [80..86]
 r108: [82..83]
 r109: [80..81]
 r110: [78..79]
 r111: [76..77]
 r112: [73..75]
 r113: [63..67]
 r114: [63..64]
 r115: [56..60]
 r116: [56..57]
 r117: [54..55]
 r119: [46..47]
 r120: [42..44]
 r121: [42..43]
 r122: [38..41]
 r123: [35..37]
 r124: [28..32]
 r125: [28..29]
 r126: [26..27]
 r128: [18..19]
 r129: [16..17]
 r130: [12..14]
 r131: [12..13]
 r132: [7..11]
 r133: [9..10]
 r134: [7..8]
 r135: [3..6]
 r136: [0..2]
 r137: [146..151]
 r138: [122..123]
 r139: [114..121]
 r140: [90..91]
 r141: [82..89]
 r142: [45..53]
 r143: [15..25]
 r144: [159..160]
 r145: [156..157]
 r146: [149..150]
 r147: [144..145]
 r148: [142..143]
 r149: [137..138]
 r150: [133..134]
 r151: [131..132]
 r152: [128..129]
 r153: [124..125]
 r154: [119..120]
 r155: [116..117]
 r156: [105..106]
 r157: [103..104]
 r158: [92..93]
 r159: [87..88]
 r160: [84..85]
 r161: [73..74]
 r162: [70..72]
 r163: [70..71]
 r164: [68..69]
 r165: [65..66]
 r166: [61..62]
 r167: [58..59]
 r168: [51..52]
 r169: [35..36]
 r170: [33..34]
 r171: [30..31]
 r172: [23..24]
 r173: [0..1]
 r174: [49..50]
 r176: [21..22]
 r180: [3..4]
 r181: [38..39]
 r182: [5..20]
 r183: [40..48]
Compressing live ranges: from 161 to 134 - 83%
Ranges after the compression:
 r87: [128..131]
 r88: [128..129]
 r89: [126..127]
 r90: [122..123]
 r91: [116..117]
 r92: [112..115]
 r93: [112..113]
 r94: [104..107]
 r95: [104..105]
 r96: [92..97]
 r97: [94..95]
 r98: [92..93]
 r99: [90..91]
 r100: [88..89]
 r101: [86..87]
 r102: [82..83]
 r103: [80..81]
 r104: [78..79]
 r105: [76..77]
 r106: [74..75]
 r107: [64..69]
 r108: [66..67]
 r109: [64..65]
 r110: [62..63]
 r111: [60..61]
 r112: [58..59]
 r113: [50..53]
 r114: [50..51]
 r115: [44..47]
 r116: [44..45]
 r117: [42..43]
 r119: [36..37]
 r120: [34..35]
 r121: [34..35]
 r122: [30..33]
 r123: [28..29]
 r124: [22..25]
 r125: [22..23]
 r126: [20..21]
 r128: [14..15]
 r129: [12..13]
 r130: [10..11]
 r131: [10..11]
 r132: [6..9]
 r133: [8..9]
 r134: [6..7]
 r135: [2..5]
 r136: [0..1]
 r137: [122..125]
 r138: [100..101]
 r139: [94..99]
 r140: [72..73]
 r141: [66..71]
 r142: [36..41]
 r143: [12..19]
 r144: [132..133]
 r145: [130..131]
 r146: [124..125]
 r147: [120..121]
 r148: [118..119]
 r149: [114..115]
 r150: [110..111]
 r151: [108..109]
 r152: [106..107]
 r153: [102..103]
 r154: [98..99]
 r155: [96..97]
 r156: [86..87]
 r157: [84..85]
 r158: [74..75]
 r159: [70..71]
 r160: [68..69]
 r161: [58..59]
 r162: [56..57]
 r163: [56..57]
 r164: [54..55]
 r165: [52..53]
 r166: [48..49]
 r167: [46..47]
 r168: [40..41]
 r169: [28..29]
 r170: [26..27]
 r171: [24..25]
 r172: [18..19]
 r173: [0..1]
 r174: [38..39]
 r176: [16..17]
 r180: [2..3]
 r181: [30..31]
 r182: [4..15]
 r183: [32..37]

********** Assignment #2: **********

	 Assigning to 182 (cl=ALL_SSE_REGS, orig=127, freq=2, tfirst=180, tfreq=2)...
	 Assigning to 180 (cl=SSE_REGS, orig=127, freq=2, tfirst=180, tfreq=2)...
	   Assign 26 to optional reload r180 (freq=2)
	Hard reg 26 is preferable by r182 with profit 1
	 Assigning to 183 (cl=ALL_SSE_REGS, orig=118, freq=2, tfirst=181, tfreq=2)...
	 Assigning to 181 (cl=SSE_REGS, orig=118, freq=2, tfirst=181, tfreq=2)...
	   Assign 27 to optional reload r181 (freq=2)
	Hard reg 27 is preferable by r183 with profit 1
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  141: r180:SF=r127:SF
      REG_DEAD r127:SF
   Insn after restoring regs:
  137: r127:SF=r176:SF
      REG_DEAD r176:SF
   Insn after restoring regs:
  142: r181:SF=r118:SF
      REG_DEAD r118:SF
   Insn after restoring regs:
  135: r118:SF=r174:SF
      REG_DEAD r174:SF
Keep optional reload reg 175
Keep optional reload reg 177
Remove optional reload reg 180
  Restoring original insn:
  119: r136:SF=r135:SF+r127:SF
      REG_DEAD r127:SF
      REG_DEAD r135:SF
  Deleting move 141
  141: r180:SF=r127:SF
      REG_DEAD r127:SF
deleting insn with uid = 141.
Remove optional reload reg 181
  Restoring original insn:
   97: r123:SF=r122:SF+r118:SF
      REG_DEAD r118:SF
      REG_DEAD r122:SF
  Deleting move 142
  142: r181:SF=r118:SF
      REG_DEAD r118:SF
deleting insn with uid = 142.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 119:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 97:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 5
  BB 3
   Insn 132: point = 0, n_alt = -1
  BB 4
   Insn 131: point = 0, n_alt = -1
   Insn 121: point = 0, n_alt = 8
   Insn 120: point = 1, n_alt = 3
   Insn 119: point = 2, n_alt = 1
   Insn 118: point = 4, n_alt = 1
   Insn 117: point = 6, n_alt = 1
   Insn 116: point = 8, n_alt = 0
   Insn 115: point = 9, n_alt = 1
   Insn 114: point = 11, n_alt = 7
   Insn 113: point = 12, n_alt = -1
   Insn 112: point = 13, n_alt = 0
   Insn 111: point = 13, n_alt = -1
   Insn 110: point = 14, n_alt = -1
   Insn 109: point = 15, n_alt = 0
   Insn 108: point = 17, n_alt = 0
   Insn 137: point = 18, n_alt = 8
   Insn 107: point = 20, n_alt = 7
   Insn 106: point = 22, n_alt = 3
   Insn 105: point = 23, n_alt = -1
   Insn 104: point = 25, n_alt = 2
   Insn 103: point = 27, n_alt = 7
   Insn 102: point = 29, n_alt = 3
   Insn 101: point = 30, n_alt = 7
   Insn 100: point = 32, n_alt = 3
   Insn 99: point = 33, n_alt = 8
   Insn 98: point = 34, n_alt = 3
   Insn 97: point = 35, n_alt = 1
   Insn 96: point = 37, n_alt = 1
   Insn 95: point = 39, n_alt = 7
   Insn 94: point = 40, n_alt = -1
   Insn 93: point = 41, n_alt = 0
   Insn 92: point = 41, n_alt = -1
   Insn 91: point = 42, n_alt = -1
   Insn 90: point = 43, n_alt = 0
   Insn 135: point = 44, n_alt = 8
   Insn 89: point = 46, n_alt = 7
   Insn 88: point = 48, n_alt = 3
   Insn 87: point = 49, n_alt = -1
   Insn 86: point = 51, n_alt = 2
   Insn 85: point = 53, n_alt = 7
   Insn 84: point = 55, n_alt = 3
   Insn 83: point = 56, n_alt = 7
   Insn 82: point = 58, n_alt = 3
  BB 2
   Insn 77: point = 59, n_alt = -1
   Insn 76: point = 59, n_alt = 1
   Insn 75: point = 60, n_alt = 7
   Insn 74: point = 62, n_alt = 3
   Insn 73: point = 63, n_alt = 7
   Insn 72: point = 65, n_alt = 3
   Insn 71: point = 66, n_alt = 8
   Insn 70: point = 67, n_alt = 7
   Insn 69: point = 68, n_alt = 3
   Insn 68: point = 69, n_alt = 8
   Insn 67: point = 70, n_alt = 3
   Insn 66: point = 71, n_alt = 1
   Insn 65: point = 73, n_alt = -1
   Insn 64: point = 75, n_alt = 1
   Insn 63: point = 77, n_alt = 1
   Insn 62: point = 79, n_alt = 7
   Insn 61: point = 81, n_alt = 3
   Insn 60: point = 82, n_alt = 7
   Insn 59: point = 84, n_alt = 3
   Insn 58: point = 85, n_alt = 1
   Insn 57: point = 87, n_alt = 7
   Insn 56: point = 88, n_alt = 8
   Insn 55: point = 89, n_alt = 3
   Insn 54: point = 90, n_alt = 1
   Insn 53: point = 92, n_alt = -1
   Insn 52: point = 94, n_alt = 1
   Insn 51: point = 96, n_alt = 1
   Insn 50: point = 98, n_alt = 7
   Insn 49: point = 100, n_alt = 3
   Insn 48: point = 101, n_alt = 8
   Insn 47: point = 102, n_alt = 3
   Insn 46: point = 103, n_alt = 1
   Insn 45: point = 105, n_alt = -1
   Insn 44: point = 107, n_alt = 1
   Insn 43: point = 109, n_alt = 1
   Insn 42: point = 111, n_alt = 7
   Insn 41: point = 113, n_alt = 3
   Insn 40: point = 114, n_alt = 7
   Insn 39: point = 116, n_alt = 3
   Insn 38: point = 117, n_alt = 1
   Insn 37: point = 119, n_alt = 7
   Insn 36: point = 120, n_alt = 8
   Insn 35: point = 121, n_alt = 2
   Insn 34: point = 123, n_alt = 7
   Insn 33: point = 125, n_alt = 3
   Insn 32: point = 126, n_alt = 7
   Insn 31: point = 128, n_alt = 3
   Insn 30: point = 129, n_alt = 8
   Insn 29: point = 130, n_alt = 2
   Insn 28: point = 132, n_alt = 7
   Insn 27: point = 134, n_alt = 3
   Insn 26: point = 135, n_alt = 1
   Insn 25: point = 137, n_alt = 7
   Insn 24: point = 139, n_alt = 3
   Insn 23: point = 140, n_alt = 4
   Insn 22: point = 141, n_alt = 9
   Insn 21: point = 142, n_alt = 0
   Insn 20: point = 142, n_alt = -1
   Insn 19: point = 143, n_alt = -1
   Insn 18: point = 144, n_alt = 7
   Insn 17: point = 146, n_alt = 3
   Insn 16: point = 147, n_alt = -1
   Insn 15: point = 149, n_alt = 2
   Insn 14: point = 151, n_alt = 7
   Insn 13: point = 153, n_alt = 3
   Insn 12: point = 154, n_alt = 7
   Insn 11: point = 156, n_alt = 3
   Insn 7: point = 157, n_alt = 5
   Insn 6: point = 157, n_alt = 5
   Insn 5: point = 157, n_alt = 5
   Insn 4: point = 157, n_alt = 5
   Insn 3: point = 157, n_alt = 5
   Insn 2: point = 157, n_alt = 5
 r118: [36..44]
 r127: [3..18]
Compressing live ranges: from 157 to 4 - 2%
Ranges after the compression:
 r118: [2..3]
 r127: [0..1]
  Slot 0 regnos (width = 0):	 118	 127
Changing spilled pseudos to memory in insn #135
Changing spilled pseudos to memory in insn #97
Changing spilled pseudos to memory in insn #137
Changing spilled pseudos to memory in insn #119
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #119
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #137
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 137:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #97
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #135
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 135:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 56
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 73
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 83
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 99
changing reg in insn 101
changing reg in insn 104
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 113
changing reg in insn 115
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 121
changing reg in insn 16
changing reg in insn 20
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 38
changing reg in insn 43
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 58
changing reg in insn 63
changing reg in insn 87
changing reg in insn 92
changing reg in insn 105
changing reg in insn 111
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 106
changing reg in insn 107
changing reg in insn 120
changing reg in insn 121
deleting insn with uid = 45.
deleting insn with uid = 53.
deleting insn with uid = 65.
deleting insn with uid = 87.
deleting insn with uid = 92.
deleting insn with uid = 105.
deleting insn with uid = 111.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 112.


cdfun

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 37 [r8] 38 [r9]
;;  ref usage 	r0={35d,31u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={6d,3u} r6={1d,51u} r7={1d,8u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={5d,1u} r18={3d} r19={3d} r20={1d,1u} r21={40d,42u} r22={16d,12u} r23={7d,3u} r24={5d,1u} r25={5d,1u} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d,1u} r38={4d,1u} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 481{322d,159u,0e} in 110{107 regular + 3 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 137 138 139 140 141 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 cl+0 S8 A64])
        (reg:DI 5 di [ cl ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])
        (reg:DI 4 si [ re ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])
        (reg:DI 1 dx [ ma ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 clcd0+0 S8 A64])
        (reg:DI 2 cx [ clcd0 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])
        (reg:DI 37 r8 [ cd0 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])
        (reg:DI 38 r9 [ cd2 ])) "../src/cdfun.f":22 81 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 21 xmm0 [orig:87 _1 ] [87])
        (mem:SF (reg/f:DI 0 ax [144]) [1 *re_53(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [2 reref+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 22 xmm1 [orig:88 _2 ] [88])
        (mem:SF (reg/f:DI 0 ax [145]) [1 *reref_54(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SF 21 xmm0 [orig:89 _3 ] [89])
        (div:SF (reg:SF 21 xmm0 [orig:87 _1 ] [87])
            (reg:SF 22 xmm1 [orig:88 _2 ] [88]))) "../src/cdfun.f":30 805 {*fop_sf_1}
     (nil))
(insn 16 15 17 2 (set (reg:SF 23 xmm2 [orig:137 _55 ] [137])
        (reg:SF 21 xmm0 [orig:89 _3 ] [89])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [2 reexp+0 S8 A64])) "../src/cdfun.f":30 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 21 xmm0 [orig:90 _4 ] [90])
        (mem:SF (reg/f:DI 0 ax [146]) [1 *reexp_56(D)+0 S4 A32])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [orig:90 _4 ] [90])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SF 21 xmm0)
        (reg:SF 23 xmm2 [orig:137 _55 ] [137])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(call_insn/u 21 20 22 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x142648100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":30 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 22 21 23 2 (set (reg:SF 0 ax [147])
        (reg:SF 21 xmm0)) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 23 22 24 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32])
        (reg:SF 0 ax [147])) "../src/cdfun.f":30 127 {*movsf_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [2 reexp+0 S8 A64])) "../src/cdfun.f":31 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SF 21 xmm0 [orig:91 _5 ] [91])
        (mem:SF (reg/f:DI 0 ax [148]) [1 *reexp_56(D)+0 S4 A32])) "../src/cdfun.f":31 127 {*movsf_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SF 21 xmm0 [orig:92 _6 ] [92])
        (mult:SF (reg:SF 21 xmm0 [orig:91 _5 ] [91])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":31 802 {*fop_sf_comm}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 0 ax [149])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 re+0 S8 A64])) "../src/cdfun.f":31 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SF 22 xmm1 [orig:93 _7 ] [93])
        (mem:SF (reg/f:DI 0 ax [149]) [1 *re_53(D)+0 S4 A32])) "../src/cdfun.f":31 127 {*movsf_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SF 21 xmm0 [150])
        (div:SF (reg:SF 21 xmm0 [orig:92 _6 ] [92])
            (reg:SF 22 xmm1 [orig:93 _7 ] [93]))) "../src/cdfun.f":31 805 {*fop_sf_1}
     (nil))
(insn 30 29 31 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 fac_re+0 S4 A32])
        (reg:SF 21 xmm0 [150])) "../src/cdfun.f":31 127 {*movsf_internal}
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 cl+0 S8 A64])) "../src/cdfun.f":34 81 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SF 21 xmm0 [orig:94 _8 ] [94])
        (mem:SF (reg/f:DI 0 ax [151]) [1 *cl_59(D)+0 S4 A32])) "../src/cdfun.f":34 127 {*movsf_internal}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 clcd0+0 S8 A64])) "../src/cdfun.f":34 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SF 22 xmm1 [orig:95 _9 ] [95])
        (mem:SF (reg/f:DI 0 ax [152]) [1 *clcd0_60(D)+0 S4 A32])) "../src/cdfun.f":34 127 {*movsf_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SF 21 xmm0 [153])
        (minus:SF (reg:SF 21 xmm0 [orig:94 _8 ] [94])
            (reg:SF 22 xmm1 [orig:95 _9 ] [95]))) "../src/cdfun.f":34 805 {*fop_sf_1}
     (nil))
(insn 36 35 37 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])
        (reg:SF 21 xmm0 [153])) "../src/cdfun.f":34 127 {*movsf_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SF 21 xmm0 [orig:138 _62 ] [138])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (nil))
(insn 38 37 39 2 (set (reg:SF 21 xmm0 [orig:139 _63 ] [139])
        (mult:SF (reg:SF 21 xmm0 [orig:138 _62 ] [138])
            (reg:SF 21 xmm0 [orig:138 _62 ] [138]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 0 ax [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SF 22 xmm1 [orig:96 _10 ] [96])
        (mem:SF (reg/f:DI 0 ax [154]) [1 *cd0_64(D)+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SF 23 xmm2 [orig:97 _11 ] [97])
        (mem:SF (reg/f:DI 0 ax [155]) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":35 127 {*movsf_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SF 21 xmm0 [orig:98 _12 ] [98])
        (mult:SF (reg:SF 21 xmm0 [orig:139 _63 ] [139])
            (reg:SF 23 xmm2 [orig:97 _11 ] [97]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (nil))
(insn 44 43 46 2 (set (reg:SF 21 xmm0 [orig:99 _13 ] [99])
        (plus:SF (reg:SF 21 xmm0 [orig:98 _12 ] [98])
            (reg:SF 22 xmm1 [orig:96 _10 ] [96]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (nil))
(insn 46 44 47 2 (set (reg:SF 21 xmm0 [orig:101 _15 ] [101])
        (mult:SF (reg:SF 21 xmm0 [orig:100 _14 ] [100])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":35 802 {*fop_sf_comm}
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 0 ax [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [2 cd+0 S8 A64])) "../src/cdfun.f":35 81 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (mem:SF (reg/f:DI 0 ax [156]) [1 *cd_66(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:101 _15 ] [101])) "../src/cdfun.f":35 127 {*movsf_internal}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":36 81 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:SF 21 xmm0 [orig:102 _16 ] [102])
        (mem:SF (reg/f:DI 0 ax [157]) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":36 127 {*movsf_internal}
     (nil))
(insn 51 50 52 2 (set (reg:SF 21 xmm0 [orig:103 _17 ] [103])
        (mult:SF (reg:SF 21 xmm0 [orig:102 _16 ] [102])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (nil))
(insn 52 51 54 2 (set (reg:SF 21 xmm0 [orig:104 _18 ] [104])
        (plus:SF (reg:SF 21 xmm0 [orig:103 _17 ] [103])
            (reg:SF 21 xmm0 [orig:103 _17 ] [103]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (nil))
(insn 54 52 55 2 (set (reg:SF 21 xmm0 [orig:106 _20 ] [106])
        (mult:SF (reg:SF 21 xmm0 [orig:105 _19 ] [105])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 fac+0 S4 A32]))) "../src/cdfun.f":36 802 {*fop_sf_comm}
     (nil))
(insn 55 54 56 2 (set (reg/f:DI 0 ax [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [2 cd_cl+0 S8 A64])) "../src/cdfun.f":36 81 {*movdi_internal}
     (nil))
(insn 56 55 57 2 (set (mem:SF (reg/f:DI 0 ax [158]) [1 *cd_cl_68(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:106 _20 ] [106])) "../src/cdfun.f":36 127 {*movsf_internal}
     (nil))
(insn 57 56 58 2 (set (reg:SF 21 xmm0 [orig:140 _70 ] [140])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 clb+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SF 21 xmm0 [orig:141 _71 ] [141])
        (mult:SF (reg:SF 21 xmm0 [orig:140 _70 ] [140])
            (reg:SF 21 xmm0 [orig:140 _70 ] [140]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (nil))
(insn 59 58 60 2 (set (reg/f:DI 0 ax [159])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 cd0+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SF 22 xmm1 [orig:107 _21 ] [107])
        (mem:SF (reg/f:DI 0 ax [159]) [1 *cd0_64(D)+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (nil))
(insn 61 60 62 2 (set (reg/f:DI 0 ax [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 cd2+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:SF 23 xmm2 [orig:108 _22 ] [108])
        (mem:SF (reg/f:DI 0 ax [160]) [1 *cd2_65(D)+0 S4 A32])) "../src/cdfun.f":37 127 {*movsf_internal}
     (nil))
(insn 63 62 64 2 (set (reg:SF 21 xmm0 [orig:109 _23 ] [109])
        (mult:SF (reg:SF 21 xmm0 [orig:141 _71 ] [141])
            (reg:SF 23 xmm2 [orig:108 _22 ] [108]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (nil))
(insn 64 63 66 2 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (plus:SF (reg:SF 21 xmm0 [orig:109 _23 ] [109])
            (reg:SF 22 xmm1 [orig:107 _21 ] [107]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (nil))
(insn 66 64 67 2 (set (reg:SF 21 xmm0 [orig:112 _26 ] [112])
        (mult:SF (reg:SF 21 xmm0 [orig:111 _25 ] [111])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 fac_re+0 S4 A32]))) "../src/cdfun.f":37 802 {*fop_sf_comm}
     (nil))
(insn 67 66 68 2 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [2 cd_re+0 S8 A64])) "../src/cdfun.f":37 81 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (mem:SF (reg/f:DI 0 ax [161]) [1 *cd_re_72(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:112 _26 ] [112])) "../src/cdfun.f":37 127 {*movsf_internal}
     (nil))
(insn 69 68 70 2 (set (reg/f:DI 0 ax [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 64 [0x40])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":38 81 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SF 21 xmm0 [163])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC0") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":38 127 {*movsf_internal}
     (nil))
(insn 71 70 72 2 (set (mem:SF (reg/f:DI 0 ax [162]) [1 *cd_ma_74(D)+0 S4 A32])
        (reg:SF 21 xmm0 [163])) "../src/cdfun.f":38 127 {*movsf_internal}
     (nil))
(insn 72 71 73 2 (set (reg/f:DI 0 ax [164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":40 81 {*movdi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:SF 21 xmm0 [orig:113 _27 ] [113])
        (mem:SF (reg/f:DI 0 ax [164]) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":40 127 {*movsf_internal}
     (nil))
(insn 74 73 75 2 (set (reg/f:DI 0 ax [165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":40 81 {*movdi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SF 22 xmm1 [orig:114 _28 ] [114])
        (mem:SF (reg/f:DI 0 ax [165]) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":40 127 {*movsf_internal}
     (nil))
(insn 76 75 77 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:113 _27 ] [113])
            (reg:SF 22 xmm1 [orig:114 _28 ] [114]))) "../src/cdfun.f":40 51 {*cmpiusf}
     (nil))
(jump_insn 77 76 128 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 130)
            (pc))) "../src/cdfun.f":40 617 {*jcc_1}
     (nil)
 -> 130)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 128 77 132 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 132 128 133 3 (set (pc)
        (label_ref 126)) "../src/cdfun.f":45 649 {jump}
     (nil)
 -> 126)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 133 132 130)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 142 143 166 167 168 169 170 171 172 173
(code_label 130 133 81 4 5 (nil) [1 uses])
(note 81 130 82 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 4 (set (reg/f:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 83 82 84 4 (set (reg:SF 21 xmm0 [orig:115 _29 ] [115])
        (mem:SF (reg/f:DI 0 ax [166]) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 84 83 85 4 (set (reg/f:DI 0 ax [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:SF 22 xmm1 [orig:116 _30 ] [116])
        (mem:SF (reg/f:DI 0 ax [167]) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 86 85 88 4 (set (reg:SF 21 xmm0 [orig:117 _31 ] [117])
        (minus:SF (reg:SF 21 xmm0 [orig:115 _29 ] [115])
            (reg:SF 22 xmm1 [orig:116 _30 ] [116]))) "../src/cdfun.f":41 805 {*fop_sf_1}
     (nil))
(insn 88 86 89 4 (set (reg/f:DI 0 ax [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [2 cd+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 89 88 135 4 (set (reg:SF 24 xmm3 [orig:118 _32 ] [118])
        (mem:SF (reg/f:DI 0 ax [168]) [1 *cd_66(D)+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 135 89 144 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [4 %sfp+-68 S4 A32])
        (reg:SF 24 xmm3 [orig:118 _32 ] [118])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(note 144 135 140 4 NOTE_INSN_DELETED)
(note 140 144 90 4 NOTE_INSN_DELETED)
(insn 90 140 91 4 (set (reg:SI 0 ax [orig:119 iexp.0_33 ] [119])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":41 82 {*movsi_internal}
     (nil))
(insn 91 90 93 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:119 iexp.0_33 ] [119])) "../src/cdfun.f":41 82 {*movsi_internal}
     (nil))
(call_insn/u 93 91 94 4 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":41 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 94 93 95 4 (set (reg:SF 22 xmm1 [orig:120 _34 ] [120])
        (reg:SF 21 xmm0)) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 95 94 96 4 (set (reg:SF 21 xmm0 [orig:121 cdmf.1_35 ] [121])
        (mem/c:SF (symbol_ref:DI ("cdmf.3514") [flags 0x1c02]  <var_decl 0x142004bd0 cdmf>) [1 cdmf+0 S4 A32])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 96 95 136 4 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (mult:SF (reg:SF 21 xmm0 [orig:121 cdmf.1_35 ] [121])
            (reg:SF 22 xmm1 [orig:120 _34 ] [120]))) "../src/cdfun.f":41 802 {*fop_sf_comm}
     (nil))
(note 136 96 142 4 NOTE_INSN_DELETED)
(note 142 136 97 4 NOTE_INSN_DELETED)
(insn 97 142 98 4 (set (reg:SF 21 xmm0 [orig:123 _37 ] [123])
        (plus:SF (reg:SF 21 xmm0 [orig:122 _36 ] [122])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [4 %sfp+-68 S4 A32]))) "../src/cdfun.f":41 802 {*fop_sf_comm}
     (nil))
(insn 98 97 99 4 (set (reg/f:DI 0 ax [169])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [2 cd+0 S8 A64])) "../src/cdfun.f":41 81 {*movdi_internal}
     (nil))
(insn 99 98 100 4 (set (mem:SF (reg/f:DI 0 ax [169]) [1 *cd_66(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:123 _37 ] [123])) "../src/cdfun.f":41 127 {*movsf_internal}
     (nil))
(insn 100 99 101 4 (set (reg/f:DI 0 ax [170])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:SF 21 xmm0 [orig:124 _38 ] [124])
        (mem:SF (reg/f:DI 0 ax [170]) [1 *ma_76(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 102 101 103 4 (set (reg/f:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [2 mcrit+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:SF 22 xmm1 [orig:125 _39 ] [125])
        (mem:SF (reg/f:DI 0 ax [171]) [1 *mcrit_77(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 104 103 106 4 (set (reg:SF 21 xmm0 [orig:126 _40 ] [126])
        (minus:SF (reg:SF 21 xmm0 [orig:124 _38 ] [124])
            (reg:SF 22 xmm1 [orig:125 _39 ] [125]))) "../src/cdfun.f":42 805 {*fop_sf_1}
     (nil))
(insn 106 104 107 4 (set (reg/f:DI 0 ax [172])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 64 [0x40])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 107 106 137 4 (set (reg:SF 25 xmm4 [orig:127 _41 ] [127])
        (mem:SF (reg/f:DI 0 ax [172]) [1 *cd_ma_74(D)+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 137 107 143 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [4 %sfp+-68 S4 A32])
        (reg:SF 25 xmm4 [orig:127 _41 ] [127])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(note 143 137 139 4 NOTE_INSN_DELETED)
(note 139 143 108 4 NOTE_INSN_DELETED)
(insn 108 139 109 4 (set (reg:SI 0 ax [orig:128 iexp.2_42 ] [128])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":42 82 {*movsi_internal}
     (nil))
(insn 109 108 110 4 (parallel [
            (set (reg:SI 0 ax [orig:129 _43 ] [129])
                (plus:SI (reg:SI 0 ax [orig:128 iexp.2_42 ] [128])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "../src/cdfun.f":42 217 {*addsi_1}
     (nil))
(insn 110 109 112 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:129 _43 ] [129])) "../src/cdfun.f":42 82 {*movsi_internal}
     (nil))
(call_insn/u 112 110 113 4 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__powisf2") [flags 0x41]) [0  S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":42 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (use (reg:SI 5 di))
        (expr_list (use (reg:SF 21 xmm0))
            (nil))))
(insn 113 112 114 4 (set (reg:SF 22 xmm1 [orig:130 _44 ] [130])
        (reg:SF 21 xmm0)) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 114 113 115 4 (set (reg:SF 21 xmm0 [orig:131 cdmf.3_45 ] [131])
        (mem/c:SF (symbol_ref:DI ("cdmf.3514") [flags 0x1c02]  <var_decl 0x142004bd0 cdmf>) [1 cdmf+0 S4 A32])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 115 114 116 4 (set (reg:SF 22 xmm1 [orig:132 _46 ] [132])
        (mult:SF (reg:SF 22 xmm1 [orig:130 _44 ] [130])
            (reg:SF 21 xmm0 [orig:131 cdmf.3_45 ] [131]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (nil))
(insn 116 115 117 4 (set (reg:SI 0 ax [orig:133 iexp.4_47 ] [133])
        (mem/c:SI (symbol_ref:DI ("iexp.3518") [flags 0x1c02]  <var_decl 0x142004e10 iexp>) [3 iexp+0 S4 A32])) "../src/cdfun.f":42 82 {*movsi_internal}
     (nil))
(insn 117 116 118 4 (set (reg:SF 21 xmm0 [orig:134 _48 ] [134])
        (float:SF (reg:SI 0 ax [orig:133 iexp.4_47 ] [133]))) "../src/cdfun.f":42 199 {*floatsisf2_mixed}
     (nil))
(insn 118 117 138 4 (set (reg:SF 21 xmm0 [orig:135 _49 ] [135])
        (mult:SF (reg:SF 21 xmm0 [orig:134 _48 ] [134])
            (reg:SF 22 xmm1 [orig:132 _46 ] [132]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (nil))
(note 138 118 141 4 NOTE_INSN_DELETED)
(note 141 138 119 4 NOTE_INSN_DELETED)
(insn 119 141 120 4 (set (reg:SF 21 xmm0 [orig:136 _50 ] [136])
        (plus:SF (reg:SF 21 xmm0 [orig:135 _49 ] [135])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [4 %sfp+-68 S4 A32]))) "../src/cdfun.f":42 802 {*fop_sf_comm}
     (nil))
(insn 120 119 121 4 (set (reg/f:DI 0 ax [173])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 64 [0x40])) [2 cd_ma+0 S8 A64])) "../src/cdfun.f":42 81 {*movdi_internal}
     (nil))
(insn 121 120 131 4 (set (mem:SF (reg/f:DI 0 ax [173]) [1 *cd_ma_74(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:136 _50 ] [136])) "../src/cdfun.f":42 127 {*movsf_internal}
     (nil))
(insn 131 121 126 4 (const_int 0 [0]) "../src/cdfun.f":45 682 {nop}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 126 131 127 5 1 (nil) [1 uses])
(note 127 126 134 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 134 127 0 NOTE_INSN_DELETED)

;; Function dcdfun (dcdfun_, funcdef_no=1, decl_uid=3527, cgraph_uid=1, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=10,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=15,overall=1208,losers=1 -- refuse
	 Choosing alt 7 in insn 12:  (0) v  (1) m {*movsf_internal}
      Creating newreg=153 from oldreg=87, assigning class ALL_SSE_REGS to r153
   12: r153:SF=[r123:DI]
      REG_DEAD r123:DI
    Inserting insn reload after:
  102: r87:SF=r153:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 102:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1215,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=4,overall=21,losers=1,rld_nregs=0
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=12,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 18:  (0) ?Yi  (1) r {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 21:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=154 from oldreg=87, assigning class SSE_REGS to r154
   21: r154:SF=r154:SF-r90:SF
      REG_DEAD r90:SF
      REG_DEAD r87:SF
    Inserting insn reload before:
  103: r154:SF=r87:SF
    Inserting insn reload after:
  104: r126:SF=r154:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 22:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 23:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 24:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 27:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=155 from oldreg=113, assigning class SSE_REGS to r155
   27: r155:SF=r155:SF*r113:SF
      REG_DEAD r113:SF
    Inserting insn reload before:
  105: r155:SF=r113:SF
    Inserting insn reload after:
  106: r114:SF=r155:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 29:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 1 in insn 33:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 35:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=156 from oldreg=91, assigning class SSE_REGS to r156
   35: r156:SF=r156:SF/r93:SF
      REG_DEAD r93:SF
      REG_DEAD r91:SF
    Inserting insn reload before:
  107: r156:SF=r91:SF
    Inserting insn reload after:
  108: r94:SF=r156:SF

            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 38:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 40:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 41:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=157 from oldreg=117, assigning class SSE_REGS to r157
   41: r157:SF=r157:SF*r117:SF
      REG_DEAD r117:SF
    Inserting insn reload before:
  109: r157:SF=r117:SF
    Inserting insn reload after:
  110: r118:SF=r157:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 47
	 Choosing alt 1 in insn 47:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 49:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=158 from oldreg=95, assigning class SSE_REGS to r158
   49: r158:SF=r158:SF/r97:SF
      REG_DEAD r97:SF
      REG_DEAD r95:SF
    Inserting insn reload before:
  111: r158:SF=r95:SF
    Inserting insn reload after:
  112: r136:SF=r158:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 50:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 52:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 54:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 55:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 58:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 59:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=159 from oldreg=101, assigning class SSE_REGS to r159
   59: r159:SF=r159:SF/r102:SF
      REG_DEAD r102:SF
      REG_DEAD r101:SF
    Inserting insn reload before:
  113: r159:SF=r101:SF
    Inserting insn reload after:
  114: r140:SF=r159:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 60:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 69:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 71:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 76:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=160 from oldreg=106, assigning class SSE_REGS to r160
   76: r160:SF=r160:SF*r144:SF
      REG_DEAD r144:SF
      REG_DEAD r106:SF
    Inserting insn reload before:
  115: r160:SF=r106:SF
    Inserting insn reload after:
  116: r107:SF=r160:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 116:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 78:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 1 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=161 from oldreg=107, assigning class SSE_REGS to r161
      Making reload reg 161 for reg 107 optional
   82: r146:SF=r109:SF*r161:SF
      REG_DEAD r109:SF
      REG_DEAD r107:SF
    Inserting insn reload before:
  117: r161:SF=r107:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 117:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 83:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 85:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 87:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 88:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 89:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 91:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=613,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 93:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 95:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=162 from oldreg=107, assigning class SSE_REGS to inheritance r162
    Original reg change 107->162 (bb2):
  116: r162:SF=r160:SF
    Add original<-inheritance after:
  118: r107:SF=r162:SF

    Inheritance reuse change 107->162 (bb2):
  117: r161:SF=r162:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=163 from oldreg=87, assigning class ALL_SSE_REGS to inheritance r163
    Original reg change 87->163 (bb2):
  102: r163:SF=r153:SF
    Add original<-inheritance after:
  119: r87:SF=r163:SF

    Inheritance reuse change 87->163 (bb2):
  103: r154:SF=r163:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   118: r107:SF=r162:SF
deleting insn with uid = 118.
	    Removing dead insn:
   119: r87:SF=r163:SF
deleting insn with uid = 119.

********** Pseudo live ranges #1: **********

  BB 2
   Insn 100: point = 0, n_alt = -1
   Insn 95: point = 0, n_alt = 8
   Insn 94: point = 1, n_alt = 3
   Insn 93: point = 2, n_alt = 1
   Insn 92: point = 4, n_alt = 7
   Insn 91: point = 5, n_alt = 8
   Insn 90: point = 6, n_alt = 3
   Insn 89: point = 7, n_alt = 1
   Insn 88: point = 9, n_alt = 7
   Insn 87: point = 10, n_alt = 8
   Insn 86: point = 11, n_alt = 3
   Insn 85: point = 12, n_alt = 1
   Insn 84: point = 14, n_alt = 7
   Insn 83: point = 15, n_alt = 8
   Insn 82: point = 16, n_alt = 1
   Insn 117: point = 18, n_alt = 7
	   Creating copy r161<-r162@1
   Insn 81: point = 20, n_alt = -1
   Insn 80: point = 21, n_alt = 0
   Insn 79: point = 21, n_alt = -1
   Insn 78: point = 22, n_alt = 2
   Insn 77: point = 24, n_alt = 7
   Insn 116: point = 25, n_alt = 8
	   Creating copy r160->r162@1
   Insn 76: point = 27, n_alt = 1
   Insn 115: point = 28, n_alt = -1
	Hard reg 22 is preferable by r160 with profit 1
   Insn 75: point = 30, n_alt = 7
   Insn 74: point = 31, n_alt = -1
   Insn 73: point = 32, n_alt = 0
   Insn 72: point = 32, n_alt = -1
   Insn 71: point = 33, n_alt = 2
   Insn 70: point = 35, n_alt = 7
   Insn 69: point = 36, n_alt = 8
   Insn 68: point = 37, n_alt = 3
   Insn 67: point = 38, n_alt = 1
   Insn 66: point = 40, n_alt = 1
   Insn 65: point = 42, n_alt = -1
   Insn 64: point = 43, n_alt = 0
   Insn 63: point = 43, n_alt = -1
   Insn 62: point = 44, n_alt = 2
   Insn 61: point = 46, n_alt = 7
   Insn 60: point = 47, n_alt = 8
   Insn 114: point = 48, n_alt = -1
	Hard reg 21 is preferable by r159 with profit 1
   Insn 59: point = 50, n_alt = 2
   Insn 113: point = 51, n_alt = -1
	Hard reg 21 is preferable by r159 with profit 1
	Hard reg 22 is preferable by r159 with profit 1
   Insn 58: point = 53, n_alt = 7
   Insn 57: point = 55, n_alt = 3
   Insn 56: point = 56, n_alt = -1
   Insn 55: point = 58, n_alt = 2
   Insn 54: point = 60, n_alt = 7
   Insn 53: point = 62, n_alt = 3
   Insn 52: point = 63, n_alt = 7
   Insn 51: point = 65, n_alt = 3
   Insn 50: point = 66, n_alt = 8
   Insn 112: point = 67, n_alt = -1
	Hard reg 21 is preferable by r158 with profit 1
   Insn 49: point = 69, n_alt = 2
   Insn 111: point = 70, n_alt = -1
	Hard reg 21 is preferable by r158 with profit 1
	Hard reg 23 is preferable by r158 with profit 1
   Insn 48: point = 72, n_alt = -1
   Insn 47: point = 74, n_alt = 1
   Insn 46: point = 76, n_alt = 7
   Insn 45: point = 78, n_alt = 3
   Insn 44: point = 79, n_alt = 1
   Insn 43: point = 81, n_alt = 7
   Insn 42: point = 83, n_alt = 3
   Insn 110: point = 84, n_alt = -1
	Hard reg 22 is preferable by r157 with profit 1
   Insn 41: point = 86, n_alt = 1
   Insn 109: point = 87, n_alt = -1
	Hard reg 22 is preferable by r157 with profit 1
	Hard reg 21 is preferable by r157 with profit 1
   Insn 40: point = 88, n_alt = 7
   Insn 39: point = 90, n_alt = 3
   Insn 38: point = 91, n_alt = 8
   Insn 37: point = 92, n_alt = 0
   Insn 36: point = 94, n_alt = 2
   Insn 108: point = 95, n_alt = -1
	Hard reg 21 is preferable by r156 with profit 1
   Insn 35: point = 97, n_alt = 2
   Insn 107: point = 98, n_alt = -1
	Hard reg 21 is preferable by r156 with profit 1
	Hard reg 23 is preferable by r156 with profit 1
   Insn 34: point = 100, n_alt = -1
   Insn 33: point = 102, n_alt = 1
   Insn 32: point = 104, n_alt = 7
   Insn 31: point = 106, n_alt = 3
   Insn 30: point = 107, n_alt = 1
   Insn 29: point = 109, n_alt = 7
   Insn 28: point = 111, n_alt = 3
   Insn 106: point = 112, n_alt = -1
	Hard reg 22 is preferable by r155 with profit 1
   Insn 27: point = 114, n_alt = 1
   Insn 105: point = 115, n_alt = -1
	Hard reg 22 is preferable by r155 with profit 1
	Hard reg 21 is preferable by r155 with profit 1
   Insn 26: point = 116, n_alt = 7
   Insn 25: point = 118, n_alt = 3
   Insn 24: point = 119, n_alt = 8
   Insn 23: point = 120, n_alt = 7
   Insn 22: point = 121, n_alt = 8
   Insn 104: point = 122, n_alt = -1
	Hard reg 21 is preferable by r154 with profit 1
   Insn 21: point = 124, n_alt = 2
   Insn 103: point = 125, n_alt = 7
	   Creating copy r154<-r163@1
   Insn 20: point = 127, n_alt = -1
   Insn 19: point = 128, n_alt = 0
   Insn 18: point = 128, n_alt = 10
   Insn 17: point = 129, n_alt = -1
   Insn 16: point = 130, n_alt = 3
   Insn 15: point = 132, n_alt = 3
   Insn 14: point = 133, n_alt = 7
   Insn 13: point = 135, n_alt = 3
   Insn 102: point = 136, n_alt = 8
	   Creating copy r153->r163@1
   Insn 12: point = 138, n_alt = 7
   Insn 11: point = 140, n_alt = 3
   Insn 7: point = 141, n_alt = 5
   Insn 6: point = 141, n_alt = 5
   Insn 5: point = 141, n_alt = 5
   Insn 4: point = 141, n_alt = 5
   Insn 3: point = 141, n_alt = 5
   Insn 2: point = 141, n_alt = 5
 r88: [129..133]
 r89: [128..130]
 r90: [124..127]
 r91: [99..104]
 r92: [101..102]
 r93: [97..100]
 r94: [93..95]
 r95: [71..76]
 r96: [73..74]
 r97: [69..72]
 r98: [59..63]
 r99: [59..60]
 r100: [57..58]
 r101: [52..56]
 r102: [50..53]
 r103: [43..44]
 r104: [36..38]
 r105: [32..33]
 r106: [29..31]
 r108: [21..22]
 r109: [17..20]
 r110: [10..12]
 r111: [5..7]
 r112: [0..2]
 r113: [114..116]
 r114: [103..112]
 r115: [108..109]
 r116: [103..107]
 r117: [86..88]
 r118: [75..84]
 r119: [80..81]
 r120: [75..79]
 r121: [41..42]
 r122: [39..40]
 r123: [139..140]
 r124: [134..135]
 r125: [131..132]
 r126: [121..122]
 r127: [119..120]
 r128: [117..118]
 r129: [110..111]
 r130: [105..106]
 r131: [91..92]
 r132: [93..94]
 r133: [89..90]
 r134: [82..83]
 r135: [77..78]
 r136: [66..67]
 r137: [64..65]
 r138: [61..62]
 r139: [54..55]
 r140: [47..48]
 r141: [45..46]
 r142: [36..37]
 r143: [34..35]
 r144: [27..30]
 r145: [23..24]
 r146: [15..16]
 r147: [13..14]
 r148: [10..11]
 r149: [8..9]
 r150: [5..6]
 r151: [3..4]
 r152: [0..1]
 r153: [137..138]
 r154: [123..125]
 r155: [113..115]
 r156: [96..98]
 r157: [85..87]
 r158: [68..70]
 r159: [49..51]
 r160: [26..28]
 r161: [17..18]
 r162: [19..25]
 r163: [126..136]
Compressing live ranges: from 141 to 116 - 82%
Ranges after the compression:
 r88: [106..109]
 r89: [106..107]
 r90: [102..105]
 r91: [82..87]
 r92: [84..85]
 r93: [80..83]
 r94: [78..79]
 r95: [60..65]
 r96: [62..63]
 r97: [58..61]
 r98: [50..53]
 r99: [50..51]
 r100: [48..49]
 r101: [44..47]
 r102: [42..45]
 r103: [36..37]
 r104: [30..31]
 r105: [26..27]
 r106: [24..25]
 r108: [18..19]
 r109: [14..17]
 r110: [8..9]
 r111: [4..5]
 r112: [0..1]
 r113: [94..95]
 r114: [86..93]
 r115: [90..91]
 r116: [86..89]
 r117: [72..73]
 r118: [64..71]
 r119: [68..69]
 r120: [64..67]
 r121: [34..35]
 r122: [32..33]
 r123: [114..115]
 r124: [110..111]
 r125: [108..109]
 r126: [100..101]
 r127: [98..99]
 r128: [96..97]
 r129: [92..93]
 r130: [88..89]
 r131: [76..77]
 r132: [78..79]
 r133: [74..75]
 r134: [70..71]
 r135: [66..67]
 r136: [56..57]
 r137: [54..55]
 r138: [52..53]
 r139: [46..47]
 r140: [40..41]
 r141: [38..39]
 r142: [30..31]
 r143: [28..29]
 r144: [22..25]
 r145: [20..21]
 r146: [12..13]
 r147: [10..11]
 r148: [8..9]
 r149: [6..7]
 r150: [4..5]
 r151: [2..3]
 r152: [0..1]
 r153: [112..113]
 r154: [102..103]
 r155: [94..95]
 r156: [80..81]
 r157: [72..73]
 r158: [58..59]
 r159: [42..43]
 r160: [22..23]
 r161: [14..15]
 r162: [16..21]
 r163: [104..111]

********** Assignment #1: **********

	 Assigning to 163 (cl=ALL_SSE_REGS, orig=87, freq=2, tfirst=153, tfreq=3)...
	 Assigning to 153 (cl=ALL_SSE_REGS, orig=87, freq=2, tfirst=153, tfreq=3)...
	   Assign 24 to reload r153 (freq=2)
	Hard reg 24 is preferable by r163 with profit 1
	Hard reg 21 is preferable by r154 with profit 1
	Hard reg 24 is preferable by r154 with profit 1
	 Assigning to 154 (cl=SSE_REGS, orig=87, freq=3, tfirst=153, tfreq=3)...
	   Assign 24 to reload r154 (freq=3)
	Hard reg 24 is preferable by r163 with profit 2
	 Assigning to 155 (cl=SSE_REGS, orig=113, freq=3, tfirst=155, tfreq=3)...
	   Assign 22 to reload r155 (freq=3)
	 Assigning to 156 (cl=SSE_REGS, orig=91, freq=3, tfirst=156, tfreq=3)...
	   Assign 23 to reload r156 (freq=3)
	 Assigning to 157 (cl=SSE_REGS, orig=117, freq=3, tfirst=157, tfreq=3)...
	   Assign 22 to reload r157 (freq=3)
	 Assigning to 158 (cl=SSE_REGS, orig=95, freq=3, tfirst=158, tfreq=3)...
	   Assign 23 to reload r158 (freq=3)
	 Assigning to 159 (cl=SSE_REGS, orig=101, freq=3, tfirst=159, tfreq=3)...
	   Assign 22 to reload r159 (freq=3)
	 Assigning to 162 (cl=SSE_REGS, orig=107, freq=2, tfirst=160, tfreq=3)...
	 Assigning to 160 (cl=SSE_REGS, orig=106, freq=3, tfirst=160, tfreq=3)...
	   Assign 22 to reload r160 (freq=3)
	Hard reg 22 is preferable by r162 with profit 1
	Hard reg 22 is preferable by r161 with profit 1
	 Assigning to 161 (cl=SSE_REGS, orig=107, freq=2, tfirst=160, tfreq=3)...
	   Assign 22 to optional reload r161 (freq=2)
	Hard reg 22 is preferable by r162 with profit 2
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  117: r161:SF=r107:SF
      REG_DEAD r107:SF
   Insn after restoring regs:
  116: r107:SF=r160:SF
      REG_DEAD r160:SF
   Insn after restoring regs:
  103: r154:SF=r87:SF
      REG_DEAD r87:SF
   Insn after restoring regs:
  102: r87:SF=r153:SF
      REG_DEAD r153:SF
Remove optional reload reg 161
  Restoring original insn:
   82: r146:SF=r109:SF*r107:SF
      REG_DEAD r107:SF
      REG_DEAD r109:SF
  Deleting move 117
  117: r161:SF=r107:SF
      REG_DEAD r107:SF
deleting insn with uid = 117.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=164 from oldreg=107, assigning class SSE_REGS to r164
      Making reload reg 164 for reg 107 optional
   82: r146:SF=r109:SF*r164:SF
      REG_DEAD r107:SF
      REG_DEAD r109:SF
    Inserting insn reload before:
  120: r164:SF=r107:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=614,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 120:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=165 from oldreg=107, assigning class SSE_REGS to inheritance r165
    Original reg change 107->165 (bb2):
  116: r165:SF=r160:SF
      REG_DEAD r160:SF
    Add original<-inheritance after:
  121: r107:SF=r165:SF

    Inheritance reuse change 107->165 (bb2):
  120: r164:SF=r165:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=166 from oldreg=87, assigning class ALL_SSE_REGS to inheritance r166
    Original reg change 87->166 (bb2):
  102: r166:SF=r153:SF
      REG_DEAD r153:SF
    Add original<-inheritance after:
  122: r87:SF=r166:SF

    Inheritance reuse change 87->166 (bb2):
  103: r154:SF=r166:SF
      REG_DEAD r166:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   121: r107:SF=r165:SF
deleting insn with uid = 121.
	    Removing dead insn:
   122: r87:SF=r166:SF
deleting insn with uid = 122.

********** Pseudo live ranges #2: **********

  BB 2
   Insn 100: point = 0, n_alt = -1
   Insn 95: point = 0, n_alt = 8
   Insn 94: point = 1, n_alt = 3
   Insn 93: point = 2, n_alt = 1
   Insn 92: point = 4, n_alt = 7
   Insn 91: point = 5, n_alt = 8
   Insn 90: point = 6, n_alt = 3
   Insn 89: point = 7, n_alt = 1
   Insn 88: point = 9, n_alt = 7
   Insn 87: point = 10, n_alt = 8
   Insn 86: point = 11, n_alt = 3
   Insn 85: point = 12, n_alt = 1
   Insn 84: point = 14, n_alt = 7
   Insn 83: point = 15, n_alt = 8
   Insn 82: point = 16, n_alt = 1
   Insn 120: point = 18, n_alt = 7
	   Creating copy r164<-r165@1
   Insn 81: point = 20, n_alt = -1
   Insn 80: point = 21, n_alt = 0
   Insn 79: point = 21, n_alt = -1
   Insn 78: point = 22, n_alt = 2
   Insn 77: point = 24, n_alt = 7
   Insn 116: point = 25, n_alt = 8
	   Creating copy r160->r165@1
   Insn 76: point = 27, n_alt = 1
   Insn 115: point = 28, n_alt = -1
	Hard reg 22 is preferable by r160 with profit 1
   Insn 75: point = 30, n_alt = 7
   Insn 74: point = 31, n_alt = -1
   Insn 73: point = 32, n_alt = 0
   Insn 72: point = 32, n_alt = -1
   Insn 71: point = 33, n_alt = 2
   Insn 70: point = 35, n_alt = 7
   Insn 69: point = 36, n_alt = 8
   Insn 68: point = 37, n_alt = 3
   Insn 67: point = 38, n_alt = 1
   Insn 66: point = 40, n_alt = 1
   Insn 65: point = 42, n_alt = -1
   Insn 64: point = 43, n_alt = 0
   Insn 63: point = 43, n_alt = -1
   Insn 62: point = 44, n_alt = 2
   Insn 61: point = 46, n_alt = 7
   Insn 60: point = 47, n_alt = 8
   Insn 114: point = 48, n_alt = -1
	Hard reg 21 is preferable by r159 with profit 1
   Insn 59: point = 50, n_alt = 2
   Insn 113: point = 51, n_alt = -1
	Hard reg 21 is preferable by r159 with profit 1
	Hard reg 22 is preferable by r159 with profit 1
   Insn 58: point = 53, n_alt = 7
   Insn 57: point = 55, n_alt = 3
   Insn 56: point = 56, n_alt = -1
   Insn 55: point = 58, n_alt = 2
   Insn 54: point = 60, n_alt = 7
   Insn 53: point = 62, n_alt = 3
   Insn 52: point = 63, n_alt = 7
   Insn 51: point = 65, n_alt = 3
   Insn 50: point = 66, n_alt = 8
   Insn 112: point = 67, n_alt = -1
	Hard reg 21 is preferable by r158 with profit 1
   Insn 49: point = 69, n_alt = 2
   Insn 111: point = 70, n_alt = -1
	Hard reg 21 is preferable by r158 with profit 1
	Hard reg 23 is preferable by r158 with profit 1
   Insn 48: point = 72, n_alt = -1
   Insn 47: point = 74, n_alt = 1
   Insn 46: point = 76, n_alt = 7
   Insn 45: point = 78, n_alt = 3
   Insn 44: point = 79, n_alt = 1
   Insn 43: point = 81, n_alt = 7
   Insn 42: point = 83, n_alt = 3
   Insn 110: point = 84, n_alt = -1
	Hard reg 22 is preferable by r157 with profit 1
   Insn 41: point = 86, n_alt = 1
   Insn 109: point = 87, n_alt = -1
	Hard reg 22 is preferable by r157 with profit 1
	Hard reg 21 is preferable by r157 with profit 1
   Insn 40: point = 88, n_alt = 7
   Insn 39: point = 90, n_alt = 3
   Insn 38: point = 91, n_alt = 8
   Insn 37: point = 92, n_alt = 0
   Insn 36: point = 94, n_alt = 2
   Insn 108: point = 95, n_alt = -1
	Hard reg 21 is preferable by r156 with profit 1
   Insn 35: point = 97, n_alt = 2
   Insn 107: point = 98, n_alt = -1
	Hard reg 21 is preferable by r156 with profit 1
	Hard reg 23 is preferable by r156 with profit 1
   Insn 34: point = 100, n_alt = -1
   Insn 33: point = 102, n_alt = 1
   Insn 32: point = 104, n_alt = 7
   Insn 31: point = 106, n_alt = 3
   Insn 30: point = 107, n_alt = 1
   Insn 29: point = 109, n_alt = 7
   Insn 28: point = 111, n_alt = 3
   Insn 106: point = 112, n_alt = -1
	Hard reg 22 is preferable by r155 with profit 1
   Insn 27: point = 114, n_alt = 1
   Insn 105: point = 115, n_alt = -1
	Hard reg 22 is preferable by r155 with profit 1
	Hard reg 21 is preferable by r155 with profit 1
   Insn 26: point = 116, n_alt = 7
   Insn 25: point = 118, n_alt = 3
   Insn 24: point = 119, n_alt = 8
   Insn 23: point = 120, n_alt = 7
   Insn 22: point = 121, n_alt = 8
   Insn 104: point = 122, n_alt = -1
	Hard reg 21 is preferable by r154 with profit 1
   Insn 21: point = 124, n_alt = 2
   Insn 103: point = 125, n_alt = 7
	   Creating copy r154<-r166@1
   Insn 20: point = 127, n_alt = -1
   Insn 19: point = 128, n_alt = 0
   Insn 18: point = 128, n_alt = 10
   Insn 17: point = 129, n_alt = -1
   Insn 16: point = 130, n_alt = 3
   Insn 15: point = 132, n_alt = 3
   Insn 14: point = 133, n_alt = 7
   Insn 13: point = 135, n_alt = 3
   Insn 102: point = 136, n_alt = 8
	   Creating copy r153->r166@1
   Insn 12: point = 138, n_alt = 7
   Insn 11: point = 140, n_alt = 3
   Insn 7: point = 141, n_alt = 5
   Insn 6: point = 141, n_alt = 5
   Insn 5: point = 141, n_alt = 5
   Insn 4: point = 141, n_alt = 5
   Insn 3: point = 141, n_alt = 5
   Insn 2: point = 141, n_alt = 5
 r88: [129..133]
 r89: [128..130]
 r90: [124..127]
 r91: [99..104]
 r92: [101..102]
 r93: [97..100]
 r94: [93..95]
 r95: [71..76]
 r96: [73..74]
 r97: [69..72]
 r98: [59..63]
 r99: [59..60]
 r100: [57..58]
 r101: [52..56]
 r102: [50..53]
 r103: [43..44]
 r104: [36..38]
 r105: [32..33]
 r106: [29..31]
 r108: [21..22]
 r109: [17..20]
 r110: [10..12]
 r111: [5..7]
 r112: [0..2]
 r113: [114..116]
 r114: [103..112]
 r115: [108..109]
 r116: [103..107]
 r117: [86..88]
 r118: [75..84]
 r119: [80..81]
 r120: [75..79]
 r121: [41..42]
 r122: [39..40]
 r123: [139..140]
 r124: [134..135]
 r125: [131..132]
 r126: [121..122]
 r127: [119..120]
 r128: [117..118]
 r129: [110..111]
 r130: [105..106]
 r131: [91..92]
 r132: [93..94]
 r133: [89..90]
 r134: [82..83]
 r135: [77..78]
 r136: [66..67]
 r137: [64..65]
 r138: [61..62]
 r139: [54..55]
 r140: [47..48]
 r141: [45..46]
 r142: [36..37]
 r143: [34..35]
 r144: [27..30]
 r145: [23..24]
 r146: [15..16]
 r147: [13..14]
 r148: [10..11]
 r149: [8..9]
 r150: [5..6]
 r151: [3..4]
 r152: [0..1]
 r153: [137..138]
 r154: [123..125]
 r155: [113..115]
 r156: [96..98]
 r157: [85..87]
 r158: [68..70]
 r159: [49..51]
 r160: [26..28]
 r164: [17..18]
 r165: [19..25]
 r166: [126..136]
Compressing live ranges: from 141 to 116 - 82%
Ranges after the compression:
 r88: [106..109]
 r89: [106..107]
 r90: [102..105]
 r91: [82..87]
 r92: [84..85]
 r93: [80..83]
 r94: [78..79]
 r95: [60..65]
 r96: [62..63]
 r97: [58..61]
 r98: [50..53]
 r99: [50..51]
 r100: [48..49]
 r101: [44..47]
 r102: [42..45]
 r103: [36..37]
 r104: [30..31]
 r105: [26..27]
 r106: [24..25]
 r108: [18..19]
 r109: [14..17]
 r110: [8..9]
 r111: [4..5]
 r112: [0..1]
 r113: [94..95]
 r114: [86..93]
 r115: [90..91]
 r116: [86..89]
 r117: [72..73]
 r118: [64..71]
 r119: [68..69]
 r120: [64..67]
 r121: [34..35]
 r122: [32..33]
 r123: [114..115]
 r124: [110..111]
 r125: [108..109]
 r126: [100..101]
 r127: [98..99]
 r128: [96..97]
 r129: [92..93]
 r130: [88..89]
 r131: [76..77]
 r132: [78..79]
 r133: [74..75]
 r134: [70..71]
 r135: [66..67]
 r136: [56..57]
 r137: [54..55]
 r138: [52..53]
 r139: [46..47]
 r140: [40..41]
 r141: [38..39]
 r142: [30..31]
 r143: [28..29]
 r144: [22..25]
 r145: [20..21]
 r146: [12..13]
 r147: [10..11]
 r148: [8..9]
 r149: [6..7]
 r150: [4..5]
 r151: [2..3]
 r152: [0..1]
 r153: [112..113]
 r154: [102..103]
 r155: [94..95]
 r156: [80..81]
 r157: [72..73]
 r158: [58..59]
 r159: [42..43]
 r160: [22..23]
 r164: [14..15]
 r165: [16..21]
 r166: [104..111]

********** Assignment #2: **********

	 Assigning to 165 (cl=SSE_REGS, orig=107, freq=2, tfirst=164, tfreq=2)...
	 Assigning to 164 (cl=SSE_REGS, orig=107, freq=2, tfirst=164, tfreq=2)...
	   Assign 25 to optional reload r164 (freq=2)
	Hard reg 25 is preferable by r165 with profit 1
	 Assigning to 166 (cl=ALL_SSE_REGS, orig=87, freq=2, tfirst=166, tfreq=2)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
  120: r164:SF=r107:SF
      REG_DEAD r107:SF
   Insn after restoring regs:
  116: r107:SF=r160:SF
      REG_DEAD r160:SF
   Insn after restoring regs:
  103: r154:SF=r87:SF
      REG_DEAD r87:SF
   Insn after restoring regs:
  102: r87:SF=r153:SF
      REG_DEAD r153:SF
Keep optional reload reg 161
Remove optional reload reg 164
  Restoring original insn:
   82: r146:SF=r109:SF*r107:SF
      REG_DEAD r107:SF
      REG_DEAD r109:SF
  Deleting move 120
  120: r164:SF=r107:SF
      REG_DEAD r107:SF
deleting insn with uid = 120.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 2
   Insn 100: point = 0, n_alt = -1
   Insn 95: point = 0, n_alt = 8
   Insn 94: point = 1, n_alt = 3
   Insn 93: point = 2, n_alt = 1
   Insn 92: point = 4, n_alt = 7
   Insn 91: point = 5, n_alt = 8
   Insn 90: point = 6, n_alt = 3
   Insn 89: point = 7, n_alt = 1
   Insn 88: point = 9, n_alt = 7
   Insn 87: point = 10, n_alt = 8
   Insn 86: point = 11, n_alt = 3
   Insn 85: point = 12, n_alt = 1
   Insn 84: point = 14, n_alt = 7
   Insn 83: point = 15, n_alt = 8
   Insn 82: point = 16, n_alt = 1
   Insn 81: point = 18, n_alt = -1
   Insn 80: point = 19, n_alt = 0
   Insn 79: point = 19, n_alt = -1
   Insn 78: point = 20, n_alt = 2
   Insn 77: point = 22, n_alt = 7
   Insn 116: point = 23, n_alt = 8
   Insn 76: point = 25, n_alt = 1
   Insn 115: point = 26, n_alt = -1
   Insn 75: point = 28, n_alt = 7
   Insn 74: point = 29, n_alt = -1
   Insn 73: point = 30, n_alt = 0
   Insn 72: point = 30, n_alt = -1
   Insn 71: point = 31, n_alt = 2
   Insn 70: point = 33, n_alt = 7
   Insn 69: point = 34, n_alt = 8
   Insn 68: point = 35, n_alt = 3
   Insn 67: point = 36, n_alt = 1
   Insn 66: point = 38, n_alt = 1
   Insn 65: point = 40, n_alt = -1
   Insn 64: point = 41, n_alt = 0
   Insn 63: point = 41, n_alt = -1
   Insn 62: point = 42, n_alt = 2
   Insn 61: point = 44, n_alt = 7
   Insn 60: point = 45, n_alt = 8
   Insn 114: point = 46, n_alt = -1
   Insn 59: point = 48, n_alt = 2
   Insn 113: point = 49, n_alt = -1
   Insn 58: point = 51, n_alt = 7
   Insn 57: point = 53, n_alt = 3
   Insn 56: point = 54, n_alt = -1
   Insn 55: point = 56, n_alt = 2
   Insn 54: point = 58, n_alt = 7
   Insn 53: point = 60, n_alt = 3
   Insn 52: point = 61, n_alt = 7
   Insn 51: point = 63, n_alt = 3
   Insn 50: point = 64, n_alt = 8
   Insn 112: point = 65, n_alt = -1
   Insn 49: point = 67, n_alt = 2
   Insn 111: point = 68, n_alt = -1
   Insn 48: point = 70, n_alt = -1
   Insn 47: point = 72, n_alt = 1
   Insn 46: point = 74, n_alt = 7
   Insn 45: point = 76, n_alt = 3
   Insn 44: point = 77, n_alt = 1
   Insn 43: point = 79, n_alt = 7
   Insn 42: point = 81, n_alt = 3
   Insn 110: point = 82, n_alt = -1
   Insn 41: point = 84, n_alt = 1
   Insn 109: point = 85, n_alt = -1
   Insn 40: point = 86, n_alt = 7
   Insn 39: point = 88, n_alt = 3
   Insn 38: point = 89, n_alt = 8
   Insn 37: point = 90, n_alt = 0
   Insn 36: point = 92, n_alt = 2
   Insn 108: point = 93, n_alt = -1
   Insn 35: point = 95, n_alt = 2
   Insn 107: point = 96, n_alt = -1
   Insn 34: point = 98, n_alt = -1
   Insn 33: point = 100, n_alt = 1
   Insn 32: point = 102, n_alt = 7
   Insn 31: point = 104, n_alt = 3
   Insn 30: point = 105, n_alt = 1
   Insn 29: point = 107, n_alt = 7
   Insn 28: point = 109, n_alt = 3
   Insn 106: point = 110, n_alt = -1
   Insn 27: point = 112, n_alt = 1
   Insn 105: point = 113, n_alt = -1
   Insn 26: point = 114, n_alt = 7
   Insn 25: point = 116, n_alt = 3
   Insn 24: point = 117, n_alt = 8
   Insn 23: point = 118, n_alt = 7
   Insn 22: point = 119, n_alt = 8
   Insn 104: point = 120, n_alt = -1
   Insn 21: point = 122, n_alt = 2
   Insn 103: point = 123, n_alt = 7
   Insn 20: point = 125, n_alt = -1
   Insn 19: point = 126, n_alt = 0
   Insn 18: point = 126, n_alt = 10
   Insn 17: point = 127, n_alt = -1
   Insn 16: point = 128, n_alt = 3
   Insn 15: point = 130, n_alt = 3
   Insn 14: point = 131, n_alt = 7
   Insn 13: point = 133, n_alt = 3
   Insn 102: point = 134, n_alt = 8
   Insn 12: point = 136, n_alt = 7
   Insn 11: point = 138, n_alt = 3
   Insn 7: point = 139, n_alt = 5
   Insn 6: point = 139, n_alt = 5
   Insn 5: point = 139, n_alt = 5
   Insn 4: point = 139, n_alt = 5
   Insn 3: point = 139, n_alt = 5
   Insn 2: point = 139, n_alt = 5
 r87: [124..134]
 r107: [17..23]
Compressing live ranges: from 139 to 4 - 2%
Ranges after the compression:
 r87: [2..3]
 r107: [0..1]
  Slot 0 regnos (width = 0):	 87	 107
Changing spilled pseudos to memory in insn #102
Changing spilled pseudos to memory in insn #103
Changing spilled pseudos to memory in insn #116
Changing spilled pseudos to memory in insn #82
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #82
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #116
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 116:  (0) m  (1) v {*movsf_internal}
Reusing alternative 7 for insn #103
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #102
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 102:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 17
changing reg in insn 16
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 37
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 85
changing reg in insn 87
changing reg in insn 89
changing reg in insn 91
changing reg in insn 93
changing reg in insn 95
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 30
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 44
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 38
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
deleting insn with uid = 20.
deleting insn with uid = 106.
deleting insn with uid = 34.
deleting insn with uid = 107.
deleting insn with uid = 110.
deleting insn with uid = 48.
deleting insn with uid = 111.
deleting insn with uid = 113.
deleting insn with uid = 63.
deleting insn with uid = 65.
deleting insn with uid = 72.
deleting insn with uid = 115.
deleting insn with uid = 79.
deleting insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 80.


dcdfun

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8] 38 [r9]
;;  ref usage 	r0={22d,17u} r1={5d,1u} r2={5d,1u} r4={5d,1u} r5={5d,1u} r6={1d,46u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={5d} r18={4d} r19={4d} r20={1d,1u} r21={40d,45u,1e} r22={16d,11u} r23={9d,4u} r24={8d,3u} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 517{377d,139u,1e} in 93{89 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 be+0 S8 A64])
        (reg:DI 5 di [ be ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])
        (reg:DI 4 si [ wa ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])
        (reg:DI 1 dx [ wt ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 clcd0+0 S8 A64])
        (reg:DI 2 cx [ clcd0 ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 cl0+0 S8 A64])
        (reg:DI 37 r8 [ cl0 ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 dclda+0 S8 A64])
        (reg:DI 38 r9 [ dclda ])) "../src/cdfun.f":50 81 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 be+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 12 11 102 2 (set (reg:SF 24 xmm3 [orig:87 _1 ] [87])
        (mem:SF (reg/f:DI 0 ax [123]) [1 *be_28(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 102 12 122 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [4 %sfp+-84 S4 A32])
        (reg:SF 24 xmm3 [orig:87 _1 ] [87])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(note 122 102 119 2 NOTE_INSN_DELETED)
(note 119 122 13 2 NOTE_INSN_DELETED)
(insn 13 119 14 2 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 21 xmm0 [orig:88 _2 ] [88])
        (mem:SF (reg/f:DI 0 ax [124]) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":53 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SF 0 ax [orig:89 _3 ] [89])
        (mem:SF (reg/f:DI 0 ax [125]) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [orig:88 _2 ] [88])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 21 xmm0)
        (reg:SF 0 ax [orig:89 _3 ] [89])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(call_insn/u 19 18 103 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2f") [flags 0x41]  <function_decl 0x14263a400 __builtin_atan2f>) [0 __builtin_atan2f S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":53 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 103 19 21 2 (set (reg:SF 24 xmm3 [orig:87 _1 ] [87])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [4 %sfp+-84 S4 A32])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 21 103 104 2 (set (reg:SF 24 xmm3 [orig:87 _1 ] [87])
        (minus:SF (reg:SF 24 xmm3 [orig:87 _1 ] [87])
            (reg:SF 21 xmm0 [orig:90 _4 ] [90]))) "../src/cdfun.f":53 805 {*fop_sf_1}
     (nil))
(insn 104 21 22 2 (set (reg:SF 21 xmm0 [126])
        (reg:SF 24 xmm3 [orig:87 _1 ] [87])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 22 104 23 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (reg:SF 21 xmm0 [126])) "../src/cdfun.f":53 127 {*movsf_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SF 21 xmm0 [127])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC1") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":54 127 {*movsf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 a_be+0 S4 A32])
        (reg:SF 21 xmm0 [127])) "../src/cdfun.f":54 127 {*movsf_internal}
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 26 25 105 2 (set (reg:SF 21 xmm0 [orig:113 _33 ] [113])
        (mem:SF (reg/f:DI 0 ax [128]) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 105 26 27 2 (set (reg:SF 22 xmm1 [orig:113 _33 ] [113])
        (reg:SF 21 xmm0 [orig:113 _33 ] [113])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 27 105 28 2 (set (reg:SF 22 xmm1 [orig:113 _33 ] [113])
        (mult:SF (reg:SF 22 xmm1 [orig:113 _33 ] [113])
            (reg:SF 21 xmm0 [orig:113 _33 ] [113]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SF 21 xmm0 [orig:115 _35 ] [115])
        (mem:SF (reg/f:DI 0 ax [129]) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SF 21 xmm0 [orig:116 _36 ] [116])
        (mult:SF (reg:SF 21 xmm0 [orig:115 _35 ] [115])
            (reg:SF 21 xmm0 [orig:115 _35 ] [115]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":55 81 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SF 23 xmm2 [orig:91 _5 ] [91])
        (mem:SF (reg/f:DI 0 ax [130]) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 33 32 35 2 (set (reg:SF 21 xmm0 [orig:92 _6 ] [92])
        (plus:SF (reg:SF 21 xmm0 [orig:116 _36 ] [116])
            (reg:SF 22 xmm1 [orig:114 _34 ] [114]))) "../src/cdfun.f":55 802 {*fop_sf_comm}
     (nil))
(insn 35 33 108 2 (set (reg:SF 23 xmm2 [orig:91 _5 ] [91])
        (div:SF (reg:SF 23 xmm2 [orig:91 _5 ] [91])
            (reg:SF 21 xmm0 [orig:93 _7 ] [93]))) "../src/cdfun.f":55 805 {*fop_sf_1}
     (nil))
(insn 108 35 36 2 (set (reg:SF 21 xmm0 [orig:94 _8 ] [94])
        (reg:SF 23 xmm2 [orig:91 _5 ] [91])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 36 108 37 2 (set (reg:V4SF 22 xmm1 [132])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*lC2") [flags 0x2]) [1  S16 A128])) "../src/cdfun.f":55 1225 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 37 36 38 2 (parallel [
            (set (reg:SF 21 xmm0 [131])
                (neg:SF (reg:SF 21 xmm0 [orig:94 _8 ] [94])))
            (use (reg:V4SF 22 xmm1 [132]))
            (clobber (reg:CC 17 flags))
        ]) "../src/cdfun.f":55 470 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:94 _8 ] [94]))
        (nil)))
(insn 38 37 39 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [1 a_wa+0 S4 A32])
        (reg:SF 21 xmm0 [131])) "../src/cdfun.f":55 127 {*movsf_internal}
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 40 39 109 2 (set (reg:SF 21 xmm0 [orig:117 _38 ] [117])
        (mem:SF (reg/f:DI 0 ax [133]) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 109 40 41 2 (set (reg:SF 22 xmm1 [orig:117 _38 ] [117])
        (reg:SF 21 xmm0 [orig:117 _38 ] [117])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 41 109 42 2 (set (reg:SF 22 xmm1 [orig:117 _38 ] [117])
        (mult:SF (reg:SF 22 xmm1 [orig:117 _38 ] [117])
            (reg:SF 21 xmm0 [orig:117 _38 ] [117]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (nil))
(insn 42 41 43 2 (set (reg/f:DI 0 ax [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 wt+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SF 21 xmm0 [orig:119 _40 ] [119])
        (mem:SF (reg/f:DI 0 ax [134]) [1 *wt_29(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SF 21 xmm0 [orig:120 _41 ] [120])
        (mult:SF (reg:SF 21 xmm0 [orig:119 _40 ] [119])
            (reg:SF 21 xmm0 [orig:119 _40 ] [119]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wa+0 S8 A64])) "../src/cdfun.f":56 81 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SF 23 xmm2 [orig:95 _9 ] [95])
        (mem:SF (reg/f:DI 0 ax [135]) [1 *wa_30(D)+0 S4 A32])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 47 46 49 2 (set (reg:SF 21 xmm0 [orig:96 _10 ] [96])
        (plus:SF (reg:SF 21 xmm0 [orig:120 _41 ] [120])
            (reg:SF 22 xmm1 [orig:118 _39 ] [118]))) "../src/cdfun.f":56 802 {*fop_sf_comm}
     (nil))
(insn 49 47 112 2 (set (reg:SF 23 xmm2 [orig:95 _9 ] [95])
        (div:SF (reg:SF 23 xmm2 [orig:95 _9 ] [95])
            (reg:SF 21 xmm0 [orig:97 _11 ] [97]))) "../src/cdfun.f":56 805 {*fop_sf_1}
     (nil))
(insn 112 49 50 2 (set (reg:SF 21 xmm0 [136])
        (reg:SF 23 xmm2 [orig:95 _9 ] [95])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 50 112 51 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 a_wt+0 S4 A32])
        (reg:SF 21 xmm0 [136])) "../src/cdfun.f":56 127 {*movsf_internal}
     (nil))
(insn 51 50 52 2 (set (reg/f:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 clcd0+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SF 21 xmm0 [orig:98 _12 ] [98])
        (mem:SF (reg/f:DI 0 ax [137]) [1 *clcd0_43(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 53 52 54 2 (set (reg/f:DI 0 ax [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 cl0+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:SF 22 xmm1 [orig:99 _13 ] [99])
        (mem:SF (reg/f:DI 0 ax [138]) [1 *cl0_44(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 55 54 56 2 (set (reg:SF 21 xmm0 [orig:100 _14 ] [100])
        (minus:SF (reg:SF 21 xmm0 [orig:98 _12 ] [98])
            (reg:SF 22 xmm1 [orig:99 _13 ] [99]))) "../src/cdfun.f":58 805 {*fop_sf_1}
     (nil))
(insn 56 55 57 2 (set (reg:SF 22 xmm1 [orig:101 _15 ] [101])
        (reg:SF 21 xmm0 [orig:100 _14 ] [100])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:DI 0 ax [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 dclda+0 S8 A64])) "../src/cdfun.f":58 81 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SF 21 xmm0 [orig:102 _16 ] [102])
        (mem:SF (reg/f:DI 0 ax [139]) [1 *dclda_45(D)+0 S4 A32])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 59 58 114 2 (set (reg:SF 22 xmm1 [orig:101 _15 ] [101])
        (div:SF (reg:SF 22 xmm1 [orig:101 _15 ] [101])
            (reg:SF 21 xmm0 [orig:102 _16 ] [102]))) "../src/cdfun.f":58 805 {*fop_sf_1}
     (nil))
(insn 114 59 60 2 (set (reg:SF 21 xmm0 [140])
        (reg:SF 22 xmm1 [orig:101 _15 ] [101])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 60 114 61 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32])
        (reg:SF 21 xmm0 [140])) "../src/cdfun.f":58 127 {*movsf_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SF 21 xmm0 [141])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":59 127 {*movsf_internal}
     (nil))
(insn 62 61 64 2 (set (reg:SF 21 xmm0 [orig:103 _17 ] [103])
        (minus:SF (reg:SF 21 xmm0 [141])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":59 805 {*fop_sf_1}
     (nil))
(call_insn/u 64 62 66 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":59 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 66 64 67 2 (set (reg:SF 21 xmm0 [orig:122 _48 ] [122])
        (mult:SF (reg:SF 21 xmm0 [orig:121 _47 ] [121])
            (reg:SF 21 xmm0 [orig:121 _47 ] [121]))) "../src/cdfun.f":59 802 {*fop_sf_comm}
     (nil))
(insn 67 66 68 2 (set (reg:SF 21 xmm0 [orig:104 _18 ] [104])
        (plus:SF (reg:SF 21 xmm0 [orig:122 _48 ] [122])
            (reg:SF 21 xmm0 [orig:122 _48 ] [122]))) "../src/cdfun.f":59 802 {*fop_sf_comm}
     (nil))
(insn 68 67 69 2 (set (reg/f:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [2 dcd+0 S8 A64])) "../src/cdfun.f":59 81 {*movdi_internal}
     (nil))
(insn 69 68 70 2 (set (mem:SF (reg/f:DI 0 ax [142]) [1 *dcd_49(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:104 _18 ] [104])) "../src/cdfun.f":59 127 {*movsf_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SF 21 xmm0 [143])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 71 70 73 2 (set (reg:SF 21 xmm0 [orig:105 _19 ] [105])
        (minus:SF (reg:SF 21 xmm0 [143])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":60 805 {*fop_sf_1}
     (nil))
(call_insn/u 73 71 74 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x14263c500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":60 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 74 73 75 2 (set (reg:SF 22 xmm1 [orig:106 _20 ] [106])
        (reg:SF 21 xmm0)) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SF 21 xmm0 [144])
        (mem/u/c:SF (symbol_ref/u:DI ("*lC3") [flags 0x2]) [1  S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 76 75 116 2 (set (reg:SF 22 xmm1 [orig:106 _20 ] [106])
        (mult:SF (reg:SF 22 xmm1 [orig:106 _20 ] [106])
            (reg:SF 21 xmm0 [144]))) "../src/cdfun.f":60 802 {*fop_sf_comm}
     (nil))
(insn 116 76 121 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [4 %sfp+-84 S4 A32])
        (reg:SF 22 xmm1 [orig:106 _20 ] [106])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(note 121 116 118 2 NOTE_INSN_DELETED)
(note 118 121 77 2 NOTE_INSN_DELETED)
(insn 77 118 78 2 (set (reg:SF 21 xmm0 [145])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 78 77 80 2 (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
        (minus:SF (reg:SF 21 xmm0 [145])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 acd0+0 S4 A32]))) "../src/cdfun.f":60 805 {*fop_sf_1}
     (nil))
(call_insn/u 80 78 117 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cosf") [flags 0x41]  <function_decl 0x14263a700 __builtin_cosf>) [0 __builtin_cosf S1 A8])
            (const_int 0 [0]))) "../src/cdfun.f":60 665 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 117 80 120 2 NOTE_INSN_DELETED)
(note 120 117 82 2 NOTE_INSN_DELETED)
(insn 82 120 83 2 (set (reg:SF 21 xmm0 [146])
        (mult:SF (reg:SF 21 xmm0 [orig:109 _23 ] [109])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [4 %sfp+-84 S4 A32]))) "../src/cdfun.f":60 802 {*fop_sf_comm}
     (nil))
(insn 83 82 84 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])
        (reg:SF 21 xmm0 [146])) "../src/cdfun.f":60 127 {*movsf_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SF 21 xmm0 [147])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":62 127 {*movsf_internal}
     (nil))
(insn 85 84 86 2 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mult:SF (reg:SF 21 xmm0 [147])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [1 a_be+0 S4 A32]))) "../src/cdfun.f":62 802 {*fop_sf_comm}
     (nil))
(insn 86 85 87 2 (set (reg/f:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [2 dcd_be+0 S8 A64])) "../src/cdfun.f":62 81 {*movdi_internal}
     (nil))
(insn 87 86 88 2 (set (mem:SF (reg/f:DI 0 ax [148]) [1 *dcd_be_52(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:110 _24 ] [110])) "../src/cdfun.f":62 127 {*movsf_internal}
     (nil))
(insn 88 87 89 2 (set (reg:SF 21 xmm0 [149])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":63 127 {*movsf_internal}
     (nil))
(insn 89 88 90 2 (set (reg:SF 21 xmm0 [orig:111 _25 ] [111])
        (mult:SF (reg:SF 21 xmm0 [149])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [1 a_wa+0 S4 A32]))) "../src/cdfun.f":63 802 {*fop_sf_comm}
     (nil))
(insn 90 89 91 2 (set (reg/f:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [2 dcd_wa+0 S8 A64])) "../src/cdfun.f":63 81 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (mem:SF (reg/f:DI 0 ax [150]) [1 *dcd_wa_54(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:111 _25 ] [111])) "../src/cdfun.f":63 127 {*movsf_internal}
     (nil))
(insn 92 91 93 2 (set (reg:SF 21 xmm0 [151])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 dcd_a+0 S4 A32])) "../src/cdfun.f":64 127 {*movsf_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SF 21 xmm0 [orig:112 _26 ] [112])
        (mult:SF (reg:SF 21 xmm0 [151])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [1 a_wt+0 S4 A32]))) "../src/cdfun.f":64 802 {*fop_sf_comm}
     (nil))
(insn 94 93 95 2 (set (reg/f:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [2 dcd_wt+0 S8 A64])) "../src/cdfun.f":64 81 {*movdi_internal}
     (nil))
(insn 95 94 100 2 (set (mem:SF (reg/f:DI 0 ax [152]) [1 *dcd_wt_56(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:112 _26 ] [112])) "../src/cdfun.f":64 127 {*movsf_internal}
     (nil))
(insn 100 95 101 2 (const_int 0 [0]) "../src/cdfun.f":66 682 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 101 100 0 NOTE_INSN_DELETED)
